[{"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\index.js":"1","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\App.js":"2","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Slt.js":"3","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\styles\\MainStyles.js":"4","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\Chat.js":"5","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\store.js":"6","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\ChatSlice.js":"7","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\Notify.js":"8","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\NotifySlice.js":"9","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\auth\\authSlice.js":"10","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Message.js":"11","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\CookieName.js":"12","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Helper.js":"13","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\GeneralSlices\\themeSlice.js":"14","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatBox\\ChatBox.js":"15","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationItem\\ConversationItem.js":"16","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationList\\ConversationList.js":"17","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\DayNightSwitch\\DayNightSwitch.js":"18","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Header\\Header.js":"19","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\PrivateRoute\\PrivateRoute.js":"20","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SearchBar\\SearchBar.js":"21","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Toolbar\\ToolbarTitle.js":"22","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Messages\\Messages.js":"23","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyAvatar\\MyAvatar.js":"24","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Message\\Message.js":"25","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SendingInput\\SendingInput.js":"26","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignIn\\SignIn.js":"27","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket.js":"28","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\OnlineUser\\OnlineUsers.js":"29","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Config.js":"30","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\IconWithBadge.js":"31","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Notifications\\Notifications.js":"32","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Friends\\Friends.js":"33","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\AppTitle\\AppTitle.js":"34","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyTabPanel\\MyTabPanel.js":"35","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignUp\\SignUp.js":"36","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\AuthRoute\\AuthRoute.js":"37","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\https\\UserApi.js":"38","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\configs\\FormErrors.js":"39","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\validates\\UserValidates.js":"40","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\MyTime.js":"41","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\RouterLink\\RouterLink.js":"42","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\UserTyping\\UserTyping.js":"43","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatNotification\\ChatNotification.js":"44","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendBox\\FriendBox.js":"45","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\RunAction\\RunAction.js":"46","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\SentRequestAction.js":"47","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\RequestAction.js":"48","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\StrangerAction.js":"49","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendList\\FriendList.js":"50","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Loading\\Loading.js":"51","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\FriendAction.js":"52","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket\\MySocket.js":"53","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket\\SocketEventName.js":"54"},{"size":500,"mtime":1612753256252,"results":"55","hashOfConfig":"56"},{"size":4292,"mtime":1613919008187,"results":"57","hashOfConfig":"56"},{"size":70,"mtime":1612414967612,"results":"58","hashOfConfig":"56"},{"size":1248,"mtime":1613812868556,"results":"59","hashOfConfig":"56"},{"size":1628,"mtime":1613812912124,"results":"60","hashOfConfig":"56"},{"size":437,"mtime":1612880230360,"results":"61","hashOfConfig":"56"},{"size":214,"mtime":1612757914605,"results":"62","hashOfConfig":"56"},{"size":1944,"mtime":1613918885316,"results":"63","hashOfConfig":"56"},{"size":1056,"mtime":1612841908030,"results":"64","hashOfConfig":"56"},{"size":2985,"mtime":1613898525653,"results":"65","hashOfConfig":"56"},{"size":384,"mtime":1613901295217,"results":"66","hashOfConfig":"56"},{"size":40,"mtime":1612840227225,"results":"67","hashOfConfig":"56"},{"size":1047,"mtime":1613538356302,"results":"68","hashOfConfig":"56"},{"size":418,"mtime":1612880252791,"results":"69","hashOfConfig":"56"},{"size":936,"mtime":1613703574073,"results":"70","hashOfConfig":"56"},{"size":1053,"mtime":1612928485526,"results":"71","hashOfConfig":"56"},{"size":3260,"mtime":1613660184624,"results":"72","hashOfConfig":"56"},{"size":1304,"mtime":1612965343460,"results":"73","hashOfConfig":"56"},{"size":3368,"mtime":1613809127484,"results":"74","hashOfConfig":"56"},{"size":778,"mtime":1613357690726,"results":"75","hashOfConfig":"56"},{"size":366,"mtime":1612928465435,"results":"76","hashOfConfig":"56"},{"size":315,"mtime":1612928481171,"results":"77","hashOfConfig":"56"},{"size":3955,"mtime":1613892784322,"results":"78","hashOfConfig":"56"},{"size":1695,"mtime":1613703432162,"results":"79","hashOfConfig":"56"},{"size":1422,"mtime":1613704366122,"results":"80","hashOfConfig":"56"},{"size":2652,"mtime":1613892374377,"results":"81","hashOfConfig":"56"},{"size":6613,"mtime":1613703562694,"results":"82","hashOfConfig":"56"},{"size":292,"mtime":1612932563194,"results":"83","hashOfConfig":"56"},{"size":2110,"mtime":1613919021004,"results":"84","hashOfConfig":"56"},{"size":51,"mtime":1612966358545,"results":"85","hashOfConfig":"56"},{"size":678,"mtime":1613232820573,"results":"86","hashOfConfig":"56"},{"size":709,"mtime":1613232882320,"results":"87","hashOfConfig":"56"},{"size":2536,"mtime":1613894290791,"results":"88","hashOfConfig":"56"},{"size":252,"mtime":1613359485526,"results":"89","hashOfConfig":"56"},{"size":630,"mtime":1613359617978,"results":"90","hashOfConfig":"56"},{"size":6791,"mtime":1613621512227,"results":"91","hashOfConfig":"56"},{"size":657,"mtime":1613878969885,"results":"92","hashOfConfig":"56"},{"size":2577,"mtime":1613901142637,"results":"93","hashOfConfig":"56"},{"size":275,"mtime":1613536646878,"results":"94","hashOfConfig":"56"},{"size":2709,"mtime":1613620423707,"results":"95","hashOfConfig":"56"},{"size":1039,"mtime":1613704781597,"results":"96","hashOfConfig":"56"},{"size":231,"mtime":1613621143317,"results":"97","hashOfConfig":"56"},{"size":1574,"mtime":1613892851172,"results":"98","hashOfConfig":"56"},{"size":241,"mtime":1613657430061,"results":"99","hashOfConfig":"56"},{"size":4577,"mtime":1613918747480,"results":"100","hashOfConfig":"56"},{"size":650,"mtime":1613879666954,"results":"101","hashOfConfig":"56"},{"size":1053,"mtime":1613919374479,"results":"102","hashOfConfig":"56"},{"size":1295,"mtime":1613919464980,"results":"103","hashOfConfig":"56"},{"size":1049,"mtime":1613919378090,"results":"104","hashOfConfig":"56"},{"size":2838,"mtime":1613886256546,"results":"105","hashOfConfig":"56"},{"size":221,"mtime":1613832531156,"results":"106","hashOfConfig":"56"},{"size":2510,"mtime":1613919382961,"results":"107","hashOfConfig":"56"},{"size":3519,"mtime":1613901761436,"results":"108","hashOfConfig":"56"},{"size":675,"mtime":1613901691760,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"1lgxsql",{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"112"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"112"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"112"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"112"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"112"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"112"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"112"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\index.js",[],["231","232"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\App.js",["233","234"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Slt.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\styles\\MainStyles.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\Chat.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\store.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\ChatSlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\Notify.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\NotifySlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\auth\\authSlice.js",["235","236","237"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport Axios from 'axios';\r\nimport { API_ADDRESS } from '../../defines/Config';\r\nimport UserApi from '../../defines/https/UserApi';\r\nimport MySocket from '../../defines/Socket/MySocket';\r\nimport Socket from '../../defines/Socket';\r\n\r\n//export const updateUser = () => async (dispatch, getState) => {\r\n//const stateBefore = getState();\r\n//const response = await UserApi.findByUsername(stateBefore.auth.user.username);\r\n//if (response.status === 'succeeded') {\r\n//const user = { ...response.payload };\r\n//dispatch(authSlice.actions.login(user));\r\n//}\r\n//}\r\n\r\n\r\nexport const loginThunk = createAsyncThunk('auth/login', async ({ username, password, }) => {\r\n    const response = await UserApi.findByUsernameAndPassword(username, password);\r\n    return response;\r\n})\r\n\r\nexport const sentFriendRequestThunk = createAsyncThunk('auth/sentFriendRequest', async ({ id, friendId, }) => {\r\n    const response = await UserApi.sentFriendRequest(id, friendId);\r\n    return response;\r\n})\r\n\r\nconst initialState = {\r\n    isLogged: false,\r\n    user: null,\r\n    status: 'idle',\r\n    error: null,\r\n}\r\n\r\nconst loginWithUser = (state, action) => {\r\n    MySocket.emitConnected(action.payload);\r\n    state.user = action.payload;\r\n    state.isLogged = true;\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        login: (state, action) => {\r\n            loginWithUser(state, action)\r\n        },\r\n        updateUser: (state, action) => {\r\n            state.user = action.payload;\r\n        },\r\n        signOut: (state) => {\r\n            MySocket.emitLeave(state.user);\r\n            state.user = null;\r\n            state.isLogged = false;\r\n        }\r\n    },\r\n    extraReducers: {\r\n        // LOGIN\r\n        [loginThunk.pending]: (state, action) => {\r\n            state.status = 'loading'\r\n        },\r\n        [loginThunk.fulfilled]: (state, action) => {\r\n            state.status = 'succeeded'\r\n            const { payload, status } = action.payload;\r\n\r\n            if (status === 'succeeded') {\r\n                loginWithUser(state, { payload });\r\n                state.error = null;\r\n            } else state.error = 'not found';\r\n        },\r\n        [loginThunk.rejected]: (state, action) => {\r\n            state.status = 'failed'\r\n            state.error = action.error.message\r\n        },\r\n\r\n        // FRIENDS\r\n        [sentFriendRequestThunk.fulfilled]: (state, action) => {\r\n        },\r\n\r\n    }\r\n});\r\n\r\nconst selectors = {\r\n    isLogged: (state) => {\r\n        return state.auth.isLogged;\r\n    },\r\n    loggedUser: (state) => {\r\n        return state.auth.user;\r\n    },\r\n    status: (state) => {\r\n        return state.auth.status;\r\n    },\r\n    authError: (state) => {\r\n        return state.auth.error;\r\n    },\r\n}\r\n\r\nexport const { authError, status, isLogged, loggedUser } = selectors;\r\n\r\n\r\nexport const {\r\n    signOut, login, updateUser\r\n} = authSlice.actions\r\n\r\nexport default authSlice.reducer","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Message.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\CookieName.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Helper.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\GeneralSlices\\themeSlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatBox\\ChatBox.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationItem\\ConversationItem.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationList\\ConversationList.js",["238","239","240","241"],"import React from 'react'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport SearchBar from '../SearchBar/SearchBar'\r\nimport { Hidden } from '@material-ui/core'\r\nimport ToolbarTitle from '../Toolbar/ToolbarTitle'\r\nimport mainStyles from '../../defines/styles/MainStyles'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ConversationItem from '../ConversationItem/ConversationItem'\r\nimport AppTitle from '../AppTitle/AppTitle'\r\n\r\n\r\nexport default function ConversationList() {\r\n    const classes = mainStyles();\r\n    const conversations = [\r\n        {\r\n            name: \"Peter Anh\",\r\n            picture: \"https://scontent.fsgn2-5.fna.fbcdn.net/v/t1.0-9/61103469_1109770422558853_2564158225184194560_n.jpg?_nc_cat=104&ccb=2&_nc_sid=09cbfe&_nc_ohc=BJ6L5IV_JfQAX8iDLtk&_nc_ht=scontent.fsgn2-5.fna&oh=ccf7880a2a77ee48a2fdf6663f3050c0&oe=6049EB1D\",\r\n            online: true,\r\n            lastMessage: \"Hello BlackPink =))\",\r\n        },\r\n        {\r\n            name: \"Tran Hoang Khang\",\r\n            picture: \"https://scontent.fsgn2-3.fna.fbcdn.net/v/t1.0-9/137561041_1853205284856919_7590474778452561765_o.jpg?_nc_cat=108&ccb=2&_nc_sid=09cbfe&_nc_ohc=Wh8AsYFtNE8AX8ZUxrZ&_nc_ht=scontent.fsgn2-3.fna&oh=5fd70fba323c9d72da5caa2ebd1e00ef&oe=604836B2\",\r\n            online: true,\r\n            lastMessage: \"Hi BlackPink =))\",\r\n        },\r\n        {\r\n            name: \"Jennie\",\r\n            picture: \"https://cdn1.i-scmp.com/sites/default/files/styles/768x768/public/images/methode/2019/01/16/07a7ab2a-17ce-11e9-8ff8-c80f5203e5c9_image_hires_160333.jpg?itok=SYxUEfvx&v=1547625814\",\r\n            online: true,\r\n            lastMessage: \"Will you free tonight?\",\r\n        },\r\n        {\r\n            name: \"Lisa\",\r\n            picture: \"https://assets.vogue.com/photos/5ebc71d4a85f0288b7c3efda/16:9/w_3376,h_1899,c_limit/lisa-promo-crop.jpg\",\r\n            online: true,\r\n            lastMessage: \"Good job!\",\r\n        },\r\n        {\r\n            name: \"Jisoo\",\r\n            picture: \"https://upload.wikimedia.org/wikipedia/commons/3/38/Kim_Ji-soo_at_Jimmy_Choo_Event_on_January_09%2C_2020_%287%29.jpg\",\r\n            lastMessage: \"Congratulations\",\r\n        },\r\n        {\r\n            name: \"Rose\",\r\n            picture: \"https://i.pinimg.com/originals/76/fa/eb/76faeb9c818efdf76cf066aea3685a80.jpg\",\r\n            lastMessage: \"Hello, long time no see!\",\r\n            online: true\r\n        },\r\n    ]\r\n\r\n    const conversationsHtml = conversations.map((item, i) => {\r\n        return (\r\n            <ConversationItem key={i} item={item} ></ConversationItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Grid container direction=\"column\" className={`${classes.borderRight500} `}>\r\n            {/* SEARCH BAR */}\r\n            <Hidden mdDown>\r\n                <Grid item xs={12}>\r\n                    <SearchBar></SearchBar>\r\n                </Grid>\r\n            </Hidden>\r\n\r\n            <Grid item xs={12} >\r\n                <List className={`${classes.chatSection} custom-scrollbar`}>\r\n                    {/*  conversationsHtml*/}\r\n                </List>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n                <List className={classes.messageArea}></List>\r\n            </Grid>\r\n            <Grid item xs={9}></Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\DayNightSwitch\\DayNightSwitch.js",["242"],"import React, { useEffect } from 'react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DayIcon from '@material-ui/icons/Brightness7';\r\nimport NightIcon from '@material-ui/icons/Brightness4';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { switchThemeType } from '../../GeneralSlices/themeSlice';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nexport default function DayNightSwitch() {\r\n    const theme = useSelector((state) => { return state.theme });\r\n    const dispatch = useDispatch();\r\n    const [cookies, setCookie, removeCookie] = useCookies(['theme'])\r\n\r\n    useEffect(() => {\r\n        if (cookies.theme) {\r\n            if (cookies.theme.type) {\r\n                if (cookies.theme.type !== theme.type) {\r\n                    dispatch(switchThemeType());\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    const onSwitch = () => {\r\n        let cookieValue = { ...theme, type: theme.type === 'light' ? 'dark' : 'light', };\r\n        setCookie('theme', JSON.stringify(cookieValue));\r\n        dispatch(switchThemeType());\r\n    }\r\n\r\n    return (\r\n        <IconButton aria-label=\"Day / night toggle\" onClick={onSwitch} color=\"inherit\">\r\n            {(theme.type === 'light') ? <NightIcon></NightIcon> : <DayIcon></DayIcon>}\r\n        </IconButton>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Header\\Header.js",["243","244","245","246","247","248"],"import React from 'react'\r\nimport MyAvatar from '../MyAvatar/MyAvatar';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Slt from '../../defines/Slt'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { isLogged, loggedUser, status } from '../../features/auth/authSlice'\r\nimport { signOut } from '../../features/auth/authSlice';\r\nimport { useCookies } from 'react-cookie'\r\nimport DayNightSwitch from '../DayNightSwitch/DayNightSwitch'\r\nimport IconWithBadge from '../IconWithBadge';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Notifications from '../Notifications/Notifications';\r\nimport RunAction from '../RunAction/RunAction';\r\n\r\nconst useStyles = makeStyles({\r\n    flexGrowStyle: {\r\n        flexGrow: 1\r\n    }\r\n})\r\n\r\nexport default function Header(props) {\r\n    const [cookies,\r\n        setCookie,\r\n        removeCookie] = useCookies('loggedUser');\r\n    const user = useSelector(loggedUser);\r\n    const dispatch = useDispatch();\r\n    const logged = useSelector(isLogged);\r\n    const authStatus = useSelector(status);\r\n    const location = useLocation();\r\n    const pathName = location.pathname;\r\n    const history = useHistory();\r\n\r\n    const onSignout = () => {\r\n        removeCookie('loggedUser');\r\n        dispatch(signOut());\r\n        history.push('/');\r\n    }\r\n\r\n    const toolsHtml = (\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Box mr={4}>\r\n                {logged\r\n                    ? <Notifications></Notifications>\r\n                    : null\r\n                }\r\n            </Box>\r\n            <RunAction></RunAction>\r\n            <DayNightSwitch></DayNightSwitch>\r\n            {(logged)\r\n                ? (\r\n                    <MyAvatar name={user.name} single={user.single} picture={user.picture}></MyAvatar>\r\n                )\r\n                : null}\r\n            <Button\r\n                disabled={pathName === '/login'}\r\n                startIcon={(!logged)\r\n                    ? <PersonIcon></PersonIcon>\r\n                    : null}\r\n                color=\"inherit\"\r\n                onClick={() => {\r\n                    onSignout();\r\n                }}>\r\n                <Typography >{(logged)\r\n                    ? 'Sign out'\r\n                    : 'Sign in'}</Typography>\r\n            </Button>\r\n        </Box>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" color=\"primary\" id={Slt.mainAppBar}>\r\n                <Toolbar\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between'\r\n                    }}>\r\n                    <Typography variant=\"h6\">\r\n                        <Link to=\"/chat\" color=\"inherit\" style={{ color: 'white', textDecoration: 'none' }}>\r\n                            Messenger\r\n                        </Link>\r\n                    </Typography>\r\n                    {(authStatus !== 'loading') ? toolsHtml : null}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\PrivateRoute\\PrivateRoute.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SearchBar\\SearchBar.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Toolbar\\ToolbarTitle.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Messages\\Messages.js",["249","250","251","252"],"import React, { useEffect, useState } from 'react'\r\nimport { Box, List, Typography } from '@material-ui/core'\r\nimport Message from '../Message/Message'\r\nimport mainStyle from '../../defines/styles/MainStyles'\r\nimport MySocket from '../../defines/Socket/MySocket';\r\nimport Socket from '../../defines/Socket';\r\nimport { useSelector } from 'react-redux';\r\nimport { loggedUser } from '../../features/auth/authSlice';\r\nimport * as dateFormat from 'dateformat';\r\nimport MyTime from '../../defines/MyTime';\r\nimport ScrollToBottom, { useScrollToBottom } from 'react-scroll-to-bottom';\r\nimport ChatNotification from '../ChatNotification/ChatNotification';\r\nimport SocketEventName from '../../defines/Socket/SocketEventName';\r\n\r\nexport default function Messages() {\r\n    const classes = mainStyle();\r\n    const [messages, setMessages] = useState([]);\r\n    const user = useSelector(loggedUser);\r\n\r\n    const scroll = () => {\r\n        let container = document.getElementById('my-messages-container');\r\n        container.scrollTop = container.scrollHeight;\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        MySocket.onReceiveMessage((data) => {\r\n            const messageObj = {\r\n                type: 'message',\r\n                ...data,\r\n            }\r\n            setMessages(messages.concat(messageObj))\r\n            scroll();\r\n\r\n        })\r\n        MySocket.onNewJoiner((data) => {\r\n            let t = (data.user.username === user.username) ? 'current-user' : 'other-user'\r\n            const obj = {\r\n                type: `welcome-${t}-notification`,\r\n                ...data,\r\n            }\r\n            setMessages(messages.concat(obj))\r\n            scroll();\r\n        })\r\n\r\n        MySocket.onUserLeft((data) => {\r\n            const obj = {\r\n                type: 'user-left-notification',\r\n                ...data,\r\n            }\r\n            setMessages(messages.concat(obj))\r\n            scroll();\r\n        })\r\n        return () => {\r\n            Socket.off(SocketEventName.receiveMessage);\r\n            Socket.off(SocketEventName.newJoiner);\r\n            Socket.off(SocketEventName.userLeft);\r\n        }\r\n    })\r\n\r\n    const messagesHtml = messages.map((item, index) => {\r\n        if (item.type === 'message') {\r\n            let notShowAvatar = false;\r\n            if (index < messages.length - 1) {\r\n                const nextItem = messages[index + 1];\r\n                notShowAvatar = (nextItem.type === 'message') ? nextItem.user.username === item.user.username : false;\r\n            }\r\n            return <Message notShowAvatar={notShowAvatar} ownMessage={item.user.username === user.username} key={index} user={item.user} message={item.message} time={item.time}></Message>\r\n        } else {\r\n            let content;\r\n            let usernameHtml = <Typography component=\"span\" color=\"primary\">{item.user.username}</Typography>;\r\n            switch (item.type) {\r\n                case 'welcome-current-user-notification':\r\n                    content = 'Welcome to the chat room.';\r\n                    break;\r\n                case 'welcome-other-user-notification':\r\n                    content = <span>{usernameHtml} has joined the chat.</span>;\r\n                    break;\r\n                case 'user-left-notification':\r\n                    content = <span>{usernameHtml} has left the chat.</span>;\r\n                    break;\r\n                default:\r\n                    content = '';\r\n            }\r\n            return <ChatNotification key={index}>{content}</ChatNotification>\r\n        }\r\n    })\r\n\r\n    const emptyHtml = (\r\n        <React.Fragment>\r\n            <Box mt={4}>\r\n                <Typography className=\"text-muted\" align=\"center\" >Let's start a conversation.</Typography>\r\n            </Box>\r\n        </React.Fragment>\r\n    )\r\n\r\n    return (\r\n        <List className={`${classes.messageArea} custom-scrollbar`} id=\"my-messages-container\" >\r\n            {messagesHtml.length > 0 ? messagesHtml : emptyHtml}\r\n        </List>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyAvatar\\MyAvatar.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Message\\Message.js",["253","254"],"import { Box, Grid, Tooltip, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MyAvatar from '../MyAvatar/MyAvatar';\r\nimport MyTime from '../../defines/MyTime';\r\n\r\nexport default function Message({ notShowAvatar, ownMessage, time, user, message }) {\r\n    const avatar = !notShowAvatar ? (<MyAvatar sizeInPixel={20} name={user.username} picture={user.picture}></MyAvatar>) : null;\r\n    const position = (ownMessage) ? 'right' : 'left';\r\n    const flexPos = (ownMessage) ? 'flex-end' : 'flex-start';\r\n    const placement = (ownMessage) ? 'bottom-start' : 'bottom-end';\r\n    return (\r\n        <ListItem key=\"1\">\r\n            <Box width=\"100%\" style={{ display: 'flex', justifyContent: flexPos, alignItems: 'flex-end' }}>\r\n                {/* AVATAR */}\r\n                {!ownMessage ? avatar : null}\r\n\r\n                {/* MESSAGE AND TIME */}\r\n                <Box className={`message ${position}-message ${!ownMessage && notShowAvatar ? 'ml-avatar' : null}`}>\r\n                    <Tooltip title={MyTime.getMessageTimeString(MyTime.getCurrentTimeByUTCTime(time))} placement={placement}>\r\n                        <ListItemText align={position} primary={message} ></ListItemText>\r\n                    </Tooltip>\r\n                </Box>\r\n            </Box>\r\n\r\n        </ListItem>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SendingInput\\SendingInput.js",["255"],"import React, { useState } from 'react'\r\nimport { Grid, TextField, Fab } from '@material-ui/core'\r\nimport { Send as SendIcon } from '@material-ui/icons'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setNotify } from '../../features/notify/NotifySlice';\r\nimport MySocket from '../../defines/MySocket';\r\nimport { loggedUser } from '../../features/auth/authSlice';\r\nimport MyTime from '../../defines/MyTime';\r\n\r\nlet myTimeoutObj;\r\nexport default function SendingInput() {\r\n    const [inputMsg, setInputMsg] = useState('');\r\n    const [isTyping, setTyping] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(loggedUser);\r\n\r\n    // INPUT CHANGE\r\n    const onInputChange = (e) => {\r\n        setInputMsg(e.target.value);\r\n    }\r\n\r\n    // ON SENDING MESSAGE\r\n    const onSendingMessage = (e) => {\r\n        e.preventDefault();\r\n        if (inputMsg.trim() === '') {\r\n            // INVALID\r\n            dispatch(setNotify({ message: 'Please type some message to send!', open: true, timeout: 2000 }));\r\n        } else {\r\n            MySocket.emitSendMessage(user, inputMsg);\r\n            setInputMsg('');\r\n        }\r\n    }\r\n\r\n    const emitTyping = () => {\r\n        if (!isTyping && inputMsg.trim() !== '') MySocket.emitTyping(user);\r\n        setTyping(true);\r\n        clearTimeout(myTimeoutObj);\r\n        myTimeoutObj = setTimeout(() => {\r\n            emitStopTyping();\r\n        }, 2000);\r\n    }\r\n\r\n    const emitStopTyping = () => {\r\n        if (isTyping) {\r\n            MySocket.emitStopTyping(user.username);\r\n            setTyping(false);\r\n        }\r\n    }\r\n\r\n    // SOLVE TYPING\r\n    const onKeyUp = (e) => {\r\n        if (e.which !== 13) {\r\n            if (inputMsg.length > 3) emitTyping();\r\n        } else {\r\n            emitStopTyping();\r\n        }\r\n    }\r\n\r\n    const onBlur = () => {\r\n        emitStopTyping();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(e) => { onSendingMessage(e) }}>\r\n            <Grid container style={{ padding: '20px' }}>\r\n                <Grid item xs={10} md={11}>\r\n                    <TextField\r\n                        autoFocus={true}\r\n                        inputProps={{\r\n                            autoComplete: 'off'\r\n                        }}\r\n                        value={inputMsg} id=\"outlined-basic-email\" fullWidth onChange={onInputChange} onKeyUp={onKeyUp} onBlur={onBlur} />\r\n                </Grid>\r\n                <Grid item xs={2} md={1} align=\"center\">\r\n                    <Fab color=\"primary\" aria-label=\"add\" onClick={onSendingMessage}><SendIcon /></Fab>\r\n                </Grid>\r\n            </Grid>\r\n        </form >\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignIn\\SignIn.js",["256","257","258"],"import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setNotify } from '../../features/notify/NotifySlice';\r\nimport { isLogged, loginThunk, status, authError } from '../../features/auth/authSlice';\r\nimport { useCookies } from 'react-cookie';\r\nimport Helper from '../../defines/Helper'\r\nimport { LOGGED_USER } from '../../defines/CookieName';\r\nimport Message from '../../defines/Message';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Box } from '@material-ui/core';\r\nimport FormErrors from '../../defines/configs/FormErrors';\r\nimport RouterLink from '../RouterLink/RouterLink';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    }\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const dispatch = useDispatch();\r\n    const [isSubmitClicked, setSubmitClicked] = useState(false);\r\n\r\n    // SELECTOR\r\n    const logged = useSelector(isLogged);\r\n    const [cookies, setCookie] = useCookies([LOGGED_USER]);\r\n\r\n    const authStatus = useSelector(status);\r\n    const authErr = useSelector(authError);\r\n\r\n    const classes = useStyles();\r\n    if (isSubmitClicked) {\r\n        if (authStatus === 'succeeded' && authErr)\r\n            dispatch(setNotify({ message: 'Login unsuccessfully', type: 'error', open: true }))\r\n    } else {\r\n        if (authStatus === 'loading') return null;\r\n    }\r\n\r\n    const mainHtml = (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                    </Typography>\r\n\r\n                {/* FORMIK */}\r\n                <Formik\r\n                    initialValues={{\r\n                        username: '',\r\n                        password: '',\r\n                        passwordConfirmation: ''\r\n                    }}\r\n                    validationSchema={yup.object({\r\n                        username: yup.string().required(Helper.format(FormErrors.required, 'Username')),\r\n                        password: yup.string().required(Helper.format(FormErrors.required, 'Password')),\r\n                    })}\r\n                    onSubmit={async (values, { setSubmitting }) => {\r\n                        const { username, password } = values;\r\n                        let user = {\r\n                            username,\r\n                            password\r\n                        };\r\n                        setSubmitClicked(true);\r\n                        dispatch(loginThunk(user));\r\n                        setCookie(LOGGED_USER, user);\r\n                        //alert(JSON.stringify(values));\r\n                    }}>\r\n                    {({\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isSubmitting,\r\n                        isValid,\r\n                        dirty,\r\n                        /* and other goodies */\r\n                    }) => {\r\n                        const showErrors = {};\r\n                        for (let key in errors) {\r\n                            showErrors[key] = (errors[key] != null) && touched[key];\r\n                        }\r\n                        const props = (field, label) => {\r\n                            label = label || Helper.ucFirst(field);\r\n                            return {\r\n                                fullWidth: true,\r\n                                margin: 'normal',\r\n                                placeholder: label,\r\n                                variant: 'outlined',\r\n                                name: field,\r\n                                onChange: handleChange,\r\n                                onBlur: handleBlur,\r\n                                value: values[label],\r\n                                label: label,\r\n                                error: (showErrors[field]),\r\n                                helperText: (showErrors[field])\r\n                                    ? errors[field]\r\n                                    : null\r\n                            }\r\n                        }\r\n                        return (\r\n                            <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n                                <TextField autoFocus={true} type=\"text\" {...props('username')} />\r\n                                <TextField type=\"password\" {...props('password')} />\r\n                                <RouterLink to=\"/sign-up\">\r\n                                    <Typography color=\"primary\" >\r\n                                        Create an account\r\n                                        </Typography>\r\n                                </RouterLink>\r\n                                <Box mt={2}>\r\n                                    <Button\r\n                                        disabled={isSubmitting || !isValid || !dirty}\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    > Sign In\r\n                                    </Button>\r\n                                </Box>\r\n                            </form>\r\n                        )\r\n                    }}\r\n                </Formik>\r\n                {/* END FORMIK */}\r\n\r\n            </div>\r\n        </Container>\r\n    )\r\n\r\n    return (!logged ? mainHtml : (null));\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\OnlineUser\\OnlineUsers.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Config.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\IconWithBadge.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Notifications\\Notifications.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Friends\\Friends.js",["259","260","261"],"import React, { useEffect, useMemo } from 'react';\r\nimport './Friends.css';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport AppTitle from '../AppTitle/AppTitle';\r\nimport MyTabPanel from '../MyTabPanel/MyTabPanel';\r\nimport { Route, useHistory, useParams } from 'react-router-dom';\r\nimport FriendBox from '../FriendBox/FriendBox';\r\nimport OnlineUsers from '../OnlineUser/OnlineUsers';\r\nimport mainStyles from '../../defines/styles/MainStyles';\r\n\r\n\r\nfunction a11yProps(index) {\r\n    return { id: `simple-tab-${index}`, 'aria-controls': `simple-tabpanel-${index}` };\r\n}\r\n\r\nconst friendTabs = ['friends_all', 'friends_request', 'friends_sent_request', 'people_may_know'];\r\n\r\nexport default function Friends() {\r\n    const classes = mainStyles();\r\n    const [value,\r\n        setValue] = React.useState(0);\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        let tab = params.friendsTab;\r\n        let index = friendTabs.indexOf(tab);\r\n        index = index < 0 ? 0 : index;\r\n        setValue(index);\r\n    }, [params.friendsTab])\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        let tab = friendTabs[newValue];\r\n        history.push(`/${tab}`);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid container className={classes.defaultContainerPaddingStyle}>\r\n                <Grid item xs={1}></Grid>\r\n                <Grid item xs={8} lg={7}>\r\n                    <AppTitle title=\"Friends\"></AppTitle>\r\n                    <AppBar position=\"static\" color=\"default\">\r\n                        <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" indicatorColor=\"primary\" className=\"my-tabs\" scrollButtons=\"auto\" variant=\"scrollable\">\r\n                            <Tab label=\"All Friends\" {...a11yProps(0)} />\r\n                            <Tab label=\"Friend Requests\" {...a11yProps(1)} />\r\n                            <Tab label=\"Sent Requests\" {...a11yProps(2)} />\r\n                            <Tab label=\"People you may know\" {...a11yProps(3)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <FriendBox type={friendTabs[value]}></FriendBox>\r\n                </Grid>\r\n                <Grid item xs={2} lg={3}><OnlineUsers /> </Grid>\r\n                <Grid item xs={1}></Grid>\r\n            </Grid>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\AppTitle\\AppTitle.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyTabPanel\\MyTabPanel.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignUp\\SignUp.js",["262","263","264","265","266","267"],"import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link, Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setNotify } from '../../features/notify/NotifySlice';\r\nimport { isLogged, login, loginThunk, status } from '../../features/auth/authSlice';\r\nimport Helper from '../../defines/Helper'\r\nimport { Formik } from 'formik';\r\nimport UserApi from '../../defines/https/UserApi';\r\nimport * as yup from 'yup';\r\nimport UserValidates from '../../defines/validates/UserValidates';\r\nimport Message from '../../defines/Message';\r\nimport { Box } from '@material-ui/core';\r\nimport RouterLink from '../RouterLink/RouterLink';\r\n\r\nlet timeoutObj;\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1)\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const dispatch = useDispatch();\r\n    const [username, setUsername] = useState({ value: '', unique: false });\r\n\r\n    // SELECTOR\r\n    const logged = useSelector(isLogged);\r\n    const authStatus = useSelector(status);\r\n    const classes = useStyles();\r\n\r\n    if (authStatus === 'loading')\r\n        return null;\r\n\r\n    return (!logged\r\n        ? (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">Sign Up</Typography>\r\n                    <Formik\r\n                        initialValues={{\r\n                            username: '',\r\n                            password: '',\r\n                            passwordConfirmation: ''\r\n                        }}\r\n                        validationSchema={yup.object({\r\n                            username: UserValidates.username(username, setUsername, timeoutObj),\r\n                            password: UserValidates.password(),\r\n                            passwordConfirmation: UserValidates.passwordConfirmation(),\r\n                        })}\r\n                        onSubmit={async (values, { setSubmitting }) => {\r\n                            const { username, password } = values;\r\n                            let data = await UserApi.createAccount(username, password);\r\n                            if (data.status === 'succeeded') {\r\n                                const user = data.payload;\r\n                                dispatch(setNotify({ message: Helper.format(Message.welcomeNewAccount, user.username) }));\r\n                                dispatch(login(user));\r\n                            } else {\r\n                                setSubmitting(false);\r\n                            }\r\n                        }}>\r\n                        {({\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            handleSubmit,\r\n                            isSubmitting,\r\n                            isValid,\r\n                            dirty\r\n                            /* and other goodies */\r\n                        }) => {\r\n                            const showErrors = {};\r\n                            for (let key in errors) {\r\n                                showErrors[key] = (errors[key] != null) && touched[key];\r\n                            }\r\n                            const props = (field, label) => {\r\n                                label = label || Helper.ucFirst(field);\r\n                                return {\r\n                                    fullWidth: true,\r\n                                    margin: 'normal',\r\n                                    placeholder: label,\r\n                                    variant: 'outlined',\r\n                                    name: field,\r\n                                    onChange: handleChange,\r\n                                    onBlur: handleBlur,\r\n                                    value: values[label],\r\n                                    label: label,\r\n                                    error: (showErrors[field]),\r\n                                    helperText: (showErrors[field])\r\n                                        ? errors[field]\r\n                                        : null\r\n                                }\r\n                            }\r\n                            return (\r\n                                <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n                                    <TextField type=\"text\" {...props('username')} />\r\n                                    <TextField type=\"password\" {...props('password')} />\r\n                                    <TextField type=\"password\" {...props('passwordConfirmation', 'Password confirmation')} />\r\n                                    <RouterLink to=\"/signin\">\r\n                                        <Typography color=\"primary\" >\r\n                                            Have an account?\r\n                                        </Typography>\r\n                                    </RouterLink>\r\n                                    <Box mt={2}\r\n                                    >\r\n                                        <Button\r\n                                            disabled={isSubmitting || !isValid || !dirty}\r\n                                            type=\"submit\"\r\n                                            fullWidth\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                        > Sign Up </Button>\r\n                                    </Box>\r\n                                </form>\r\n                            )\r\n                        }}\r\n                    </Formik>\r\n                </div>\r\n            </Container >\r\n        )\r\n        : (null));\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\AuthRoute\\AuthRoute.js",["268","269"],"import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n    Route,\r\n    Redirect,\r\n    useHistory,\r\n    useLocation,\r\n} from \"react-router-dom\";\r\nimport { isLogged } from \"../../features/auth/authSlice\";\r\n\r\nexport default function AuthRoute({ ...rest }) {\r\n    const logged = useSelector(isLogged);\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if (logged) {\r\n            let { from } = location.state || { from: { pathname: \"/\" } };\r\n            history.replace(from);\r\n        }\r\n    }, [logged])\r\n    return (\r\n        <Route {...rest}></Route>\r\n    );\r\n}","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\https\\UserApi.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\configs\\FormErrors.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\validates\\UserValidates.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\MyTime.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\RouterLink\\RouterLink.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\UserTyping\\UserTyping.js",["270"],"import { Paper, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport MySocket from '../../defines/Socket/MySocket'\r\nimport Socket from '../../defines/Socket'\r\nimport MyAvatar from '../MyAvatar/MyAvatar';\r\nimport SocketEventName from '../../defines/Socket/SocketEventName';\r\n\r\nexport default function UserTyping() {\r\n    const [typingUsers, setTypingUsers] = useState([]);\r\n    useEffect(() => {\r\n        MySocket.onTyping((data) => {\r\n            setTypingUsers(typingUsers.concat(data.user));\r\n        })\r\n        MySocket.onStopTyping((data) => {\r\n            setTypingUsers(typingUsers.filter((user) => {\r\n                return user.username !== data.username;\r\n            }));\r\n        })\r\n        return () => {\r\n            Socket.off(SocketEventName.typing);\r\n            Socket.off(SocketEventName.stopTyping);\r\n        }\r\n    })\r\n\r\n    const typingHtml = typingUsers.map((user) => {\r\n        return (\r\n            <div key={user._id}>\r\n                <div style={{ display: 'flex', alignItems: 'flex-start', }}>\r\n                    <span>\r\n                        <MyAvatar name={user.username} picture={user.picture}> </MyAvatar>\r\n                    </span>\r\n                    <img className=\"typing-icon\" src={`${process.env.PUBLIC_URL}/images/icons/typing-icon.gif`} alt=\"typing\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <Paper elevation={0} style={{ minWidth: '200px' }}>\r\n            {(typingHtml.length > 0 ? typingHtml : null)}\r\n        </Paper>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatNotification\\ChatNotification.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendBox\\FriendBox.js",["271","272","273","274","275"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\RunAction\\RunAction.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\SentRequestAction.js",["276","277","278"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\RequestAction.js",["279","280","281"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\StrangerAction.js",["282","283","284"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendList\\FriendList.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Loading\\Loading.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\FriendAction.js",["285"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket\\MySocket.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket\\SocketEventName.js",[],{"ruleId":"286","replacedBy":"287"},{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","severity":1,"message":"291","line":5,"column":10,"nodeType":"292","messageId":"293","endLine":5,"endColumn":15},{"ruleId":"290","severity":1,"message":"294","line":12,"column":22,"nodeType":"292","messageId":"293","endLine":12,"endColumn":27},{"ruleId":"290","severity":1,"message":"295","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":13},{"ruleId":"290","severity":1,"message":"296","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":21},{"ruleId":"290","severity":1,"message":"297","line":6,"column":8,"nodeType":"292","messageId":"293","endLine":6,"endColumn":14},{"ruleId":"290","severity":1,"message":"298","line":2,"column":8,"nodeType":"292","messageId":"293","endLine":2,"endColumn":15},{"ruleId":"290","severity":1,"message":"299","line":6,"column":8,"nodeType":"292","messageId":"293","endLine":6,"endColumn":20},{"ruleId":"290","severity":1,"message":"300","line":11,"column":8,"nodeType":"292","messageId":"293","endLine":11,"endColumn":16},{"ruleId":"290","severity":1,"message":"301","line":54,"column":11,"nodeType":"292","messageId":"293","endLine":54,"endColumn":28},{"ruleId":"290","severity":1,"message":"302","line":12,"column":32,"nodeType":"292","messageId":"293","endLine":12,"endColumn":44},{"ruleId":"290","severity":1,"message":"303","line":16,"column":8,"nodeType":"292","messageId":"293","endLine":16,"endColumn":21},{"ruleId":"290","severity":1,"message":"304","line":17,"column":8,"nodeType":"292","messageId":"293","endLine":17,"endColumn":21},{"ruleId":"290","severity":1,"message":"305","line":18,"column":8,"nodeType":"292","messageId":"293","endLine":18,"endColumn":16},{"ruleId":"290","severity":1,"message":"306","line":22,"column":7,"nodeType":"292","messageId":"293","endLine":22,"endColumn":16},{"ruleId":"290","severity":1,"message":"307","line":29,"column":12,"nodeType":"292","messageId":"293","endLine":29,"endColumn":19},{"ruleId":"290","severity":1,"message":"308","line":30,"column":9,"nodeType":"292","messageId":"293","endLine":30,"endColumn":18},{"ruleId":"290","severity":1,"message":"309","line":9,"column":13,"nodeType":"292","messageId":"293","endLine":9,"endColumn":23},{"ruleId":"290","severity":1,"message":"310","line":10,"column":8,"nodeType":"292","messageId":"293","endLine":10,"endColumn":14},{"ruleId":"290","severity":1,"message":"311","line":11,"column":8,"nodeType":"292","messageId":"293","endLine":11,"endColumn":22},{"ruleId":"290","severity":1,"message":"312","line":11,"column":26,"nodeType":"292","messageId":"293","endLine":11,"endColumn":43},{"ruleId":"290","severity":1,"message":"313","line":1,"column":15,"nodeType":"292","messageId":"293","endLine":1,"endColumn":19},{"ruleId":"290","severity":1,"message":"314","line":1,"column":30,"nodeType":"292","messageId":"293","endLine":1,"endColumn":40},{"ruleId":"290","severity":1,"message":"310","line":8,"column":8,"nodeType":"292","messageId":"293","endLine":8,"endColumn":14},{"ruleId":"290","severity":1,"message":"315","line":1,"column":27,"nodeType":"292","messageId":"293","endLine":1,"endColumn":36},{"ruleId":"290","severity":1,"message":"316","line":16,"column":8,"nodeType":"292","messageId":"293","endLine":16,"endColumn":15},{"ruleId":"290","severity":1,"message":"307","line":49,"column":12,"nodeType":"292","messageId":"293","endLine":49,"endColumn":19},{"ruleId":"290","severity":1,"message":"317","line":1,"column":28,"nodeType":"292","messageId":"293","endLine":1,"endColumn":35},{"ruleId":"290","severity":1,"message":"318","line":8,"column":8,"nodeType":"292","messageId":"293","endLine":8,"endColumn":18},{"ruleId":"290","severity":1,"message":"291","line":9,"column":10,"nodeType":"292","messageId":"293","endLine":9,"endColumn":15},{"ruleId":"290","severity":1,"message":"315","line":1,"column":27,"nodeType":"292","messageId":"293","endLine":1,"endColumn":36},{"ruleId":"290","severity":1,"message":"319","line":10,"column":10,"nodeType":"292","messageId":"293","endLine":10,"endColumn":14},{"ruleId":"290","severity":1,"message":"320","line":10,"column":16,"nodeType":"292","messageId":"293","endLine":10,"endColumn":24},{"ruleId":"290","severity":1,"message":"321","line":10,"column":26,"nodeType":"292","messageId":"293","endLine":10,"endColumn":36},{"ruleId":"290","severity":1,"message":"322","line":10,"column":38,"nodeType":"292","messageId":"293","endLine":10,"endColumn":49},{"ruleId":"290","severity":1,"message":"323","line":13,"column":27,"nodeType":"292","messageId":"293","endLine":13,"endColumn":37},{"ruleId":"290","severity":1,"message":"320","line":5,"column":5,"nodeType":"292","messageId":"293","endLine":5,"endColumn":13},{"ruleId":"324","severity":1,"message":"325","line":20,"column":8,"nodeType":"326","endLine":20,"endColumn":16,"suggestions":"327"},{"ruleId":"290","severity":1,"message":"314","line":1,"column":17,"nodeType":"292","messageId":"293","endLine":1,"endColumn":27},{"ruleId":"290","severity":1,"message":"328","line":2,"column":5,"nodeType":"292","messageId":"293","endLine":2,"endColumn":9},{"ruleId":"290","severity":1,"message":"329","line":3,"column":5,"nodeType":"292","messageId":"293","endLine":3,"endColumn":15},{"ruleId":"290","severity":1,"message":"330","line":5,"column":5,"nodeType":"292","messageId":"293","endLine":5,"endColumn":15},{"ruleId":"290","severity":1,"message":"331","line":8,"column":8,"nodeType":"292","messageId":"293","endLine":8,"endColumn":20},{"ruleId":"290","severity":1,"message":"332","line":11,"column":8,"nodeType":"292","messageId":"293","endLine":11,"endColumn":16},{"ruleId":"290","severity":1,"message":"333","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":21},{"ruleId":"290","severity":1,"message":"316","line":5,"column":8,"nodeType":"292","messageId":"293","endLine":5,"endColumn":15},{"ruleId":"290","severity":1,"message":"334","line":8,"column":22,"nodeType":"292","messageId":"293","endLine":8,"endColumn":32},{"ruleId":"290","severity":1,"message":"333","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":21},{"ruleId":"290","severity":1,"message":"316","line":5,"column":8,"nodeType":"292","messageId":"293","endLine":5,"endColumn":15},{"ruleId":"290","severity":1,"message":"334","line":8,"column":22,"nodeType":"292","messageId":"293","endLine":8,"endColumn":32},{"ruleId":"290","severity":1,"message":"333","line":3,"column":10,"nodeType":"292","messageId":"293","endLine":3,"endColumn":21},{"ruleId":"290","severity":1,"message":"316","line":5,"column":8,"nodeType":"292","messageId":"293","endLine":5,"endColumn":15},{"ruleId":"290","severity":1,"message":"334","line":8,"column":22,"nodeType":"292","messageId":"293","endLine":8,"endColumn":32},{"ruleId":"290","severity":1,"message":"316","line":8,"column":8,"nodeType":"292","messageId":"293","endLine":8,"endColumn":15},"no-native-reassign",["335"],"no-negated-in-lhs",["336"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'login' is defined but never used.","'Axios' is defined but never used.","'API_ADDRESS' is defined but never used.","'Socket' is defined but never used.","'Toolbar' is defined but never used.","'ToolbarTitle' is defined but never used.","'AppTitle' is defined but never used.","'conversationsHtml' is assigned a value but never used.","'removeCookie' is assigned a value but never used.","'IconWithBadge' is defined but never used.","'PeopleAltIcon' is defined but never used.","'MailIcon' is defined but never used.","'useStyles' is assigned a value but never used.","'cookies' is assigned a value but never used.","'setCookie' is assigned a value but never used.","'dateFormat' is defined but never used.","'MyTime' is defined but never used.","'ScrollToBottom' is defined but never used.","'useScrollToBottom' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'useEffect' is defined but never used.","'Message' is defined but never used.","'useMemo' is defined but never used.","'MyTabPanel' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'loginThunk' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'location.state'. Either include them or remove the dependency array.","ArrayExpression",["337"],"'Card' is defined but never used.","'CardHeader' is defined but never used.","'IconButton' is defined but never used.","'MoreVertIcon' is defined but never used.","'MyAvatar' is defined but never used.","'useDispatch' is defined but never used.","'updateUser' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"338","fix":"339"},"Update the dependencies array to be: [history, location.state, logged]",{"range":"340","text":"341"},[588,596],"[history, location.state, logged]"]