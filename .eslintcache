[{"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\index.js":"1","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\App.js":"2","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Slt.js":"3","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\styles\\MainStyles.js":"4","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\Chat.js":"5","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\store.js":"6","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\ChatSlice.js":"7","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\Notify.js":"8","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\NotifySlice.js":"9","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\auth\\authSlice.js":"10","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Message.js":"11","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\CookieName.js":"12","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Helper.js":"13","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\GeneralSlices\\themeSlice.js":"14","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatBox\\ChatBox.js":"15","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationItem\\ConversationItem.js":"16","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationList\\ConversationList.js":"17","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\DayNightSwitch\\DayNightSwitch.js":"18","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Header\\Header.js":"19","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\PrivateRoute\\PrivateRoute.js":"20","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SearchBar\\SearchBar.js":"21","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Toolbar\\ToolbarTitle.js":"22","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Messages\\Messages.js":"23","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyAvatar\\MyAvatar.js":"24","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Message\\Message.js":"25","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SendingInput\\SendingInput.js":"26","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignIn\\SignIn.js":"27","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket.js":"28","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\OnlineUser\\OnlineUsers.js":"29","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Config.js":"30","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\IconWithBadge.js":"31","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Notifications\\Notifications.js":"32","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Friends\\Friends.js":"33","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\AppTitle\\AppTitle.js":"34","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyTabPanel\\MyTabPanel.js":"35","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignUp\\SignUp.js":"36","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\AuthRoute\\AuthRoute.js":"37","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\https\\UserApi.js":"38","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\configs\\FormErrors.js":"39","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\validates\\UserValidates.js":"40","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\MyTime.js":"41","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\RouterLink\\RouterLink.js":"42","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\UserTyping\\UserTyping.js":"43","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatNotification\\ChatNotification.js":"44","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendBox\\FriendBox.js":"45","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\RunAction\\RunAction.js":"46","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\SentRequestAction.js":"47","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\RequestAction.js":"48","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\StrangerAction.js":"49","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendList\\FriendList.js":"50","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Loading\\Loading.js":"51","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\FriendAction.js":"52","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket\\MySocket.js":"53","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket\\SocketEventName.js":"54","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\https\\ConversationApi.js":"55","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\HomeConversationItem\\HomeConversationItem.js":"56","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SendMessageBar\\SendMessageBar.js":"57","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\NormalChat\\NormalChat.js":"58","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationLink\\ConversationLink.js":"59","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\sidebarConversations\\SidebarConversationsSlice.js":"60","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\NewChat\\NewChat.js":"61","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SuggestionUsers\\SuggestionUsers.js":"62","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Receiver\\Receiver.js":"63","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\NewChat\\NewChatSlice.js":"64","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyAvatarGroup\\MyAvatarGroup.js":"65","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\friend\\FriendSlice.js":"66"},{"size":493,"mtime":1614583917314,"results":"67","hashOfConfig":"68"},{"size":5252,"mtime":1614927741621,"results":"69","hashOfConfig":"68"},{"size":70,"mtime":1612414967612,"results":"70","hashOfConfig":"68"},{"size":1249,"mtime":1614833227406,"results":"71","hashOfConfig":"68"},{"size":1932,"mtime":1614927993854,"results":"72","hashOfConfig":"68"},{"size":776,"mtime":1614916701837,"results":"73","hashOfConfig":"68"},{"size":2890,"mtime":1614783732148,"results":"74","hashOfConfig":"68"},{"size":1944,"mtime":1613918885316,"results":"75","hashOfConfig":"68"},{"size":1056,"mtime":1612841908030,"results":"76","hashOfConfig":"68"},{"size":2615,"mtime":1614758713770,"results":"77","hashOfConfig":"68"},{"size":533,"mtime":1614841029099,"results":"78","hashOfConfig":"68"},{"size":40,"mtime":1612840227225,"results":"79","hashOfConfig":"68"},{"size":1788,"mtime":1614583292210,"results":"80","hashOfConfig":"68"},{"size":418,"mtime":1612880252791,"results":"81","hashOfConfig":"68"},{"size":2101,"mtime":1614867926414,"results":"82","hashOfConfig":"68"},{"size":2887,"mtime":1614835996902,"results":"83","hashOfConfig":"68"},{"size":2836,"mtime":1614869766374,"results":"84","hashOfConfig":"68"},{"size":1304,"mtime":1612965343460,"results":"85","hashOfConfig":"68"},{"size":3130,"mtime":1614866068171,"results":"86","hashOfConfig":"68"},{"size":802,"mtime":1613986641897,"results":"87","hashOfConfig":"68"},{"size":376,"mtime":1614835298090,"results":"88","hashOfConfig":"68"},{"size":315,"mtime":1612928481171,"results":"89","hashOfConfig":"68"},{"size":2093,"mtime":1614870686822,"results":"90","hashOfConfig":"68"},{"size":1527,"mtime":1614830654065,"results":"91","hashOfConfig":"68"},{"size":1420,"mtime":1614140303317,"results":"92","hashOfConfig":"68"},{"size":4277,"mtime":1614868483491,"results":"93","hashOfConfig":"68"},{"size":6624,"mtime":1614840537581,"results":"94","hashOfConfig":"68"},{"size":320,"mtime":1614837675972,"results":"95","hashOfConfig":"68"},{"size":3045,"mtime":1614869429060,"results":"96","hashOfConfig":"68"},{"size":129,"mtime":1614865631699,"results":"97","hashOfConfig":"68"},{"size":678,"mtime":1613232820573,"results":"98","hashOfConfig":"68"},{"size":1540,"mtime":1614869104035,"results":"99","hashOfConfig":"68"},{"size":2564,"mtime":1614927865749,"results":"100","hashOfConfig":"68"},{"size":203,"mtime":1613980596026,"results":"101","hashOfConfig":"68"},{"size":630,"mtime":1613359617978,"results":"102","hashOfConfig":"68"},{"size":6677,"mtime":1614840538690,"results":"103","hashOfConfig":"68"},{"size":667,"mtime":1613986641898,"results":"104","hashOfConfig":"68"},{"size":2860,"mtime":1614915711982,"results":"105","hashOfConfig":"68"},{"size":275,"mtime":1613536646878,"results":"106","hashOfConfig":"68"},{"size":2709,"mtime":1613620423707,"results":"107","hashOfConfig":"68"},{"size":1039,"mtime":1613704781597,"results":"108","hashOfConfig":"68"},{"size":221,"mtime":1614071800029,"results":"109","hashOfConfig":"68"},{"size":1562,"mtime":1613980644593,"results":"110","hashOfConfig":"68"},{"size":828,"mtime":1613981843996,"results":"111","hashOfConfig":"68"},{"size":4025,"mtime":1614928268911,"results":"112","hashOfConfig":"68"},{"size":608,"mtime":1614614523330,"results":"113","hashOfConfig":"68"},{"size":1114,"mtime":1614926631650,"results":"114","hashOfConfig":"68"},{"size":1633,"mtime":1614926631649,"results":"115","hashOfConfig":"68"},{"size":1210,"mtime":1614926631650,"results":"116","hashOfConfig":"68"},{"size":2841,"mtime":1614614523330,"results":"117","hashOfConfig":"68"},{"size":221,"mtime":1613832531156,"results":"118","hashOfConfig":"68"},{"size":2777,"mtime":1614926631650,"results":"119","hashOfConfig":"68"},{"size":3865,"mtime":1614665849908,"results":"120","hashOfConfig":"68"},{"size":936,"mtime":1614403149659,"results":"121","hashOfConfig":"68"},{"size":1768,"mtime":1614829254391,"results":"122","hashOfConfig":"68"},{"size":438,"mtime":1614071616523,"results":"123","hashOfConfig":"68"},{"size":367,"mtime":1614868622822,"results":"124","hashOfConfig":"68"},{"size":3326,"mtime":1614870558290,"results":"125","hashOfConfig":"68"},{"size":1663,"mtime":1614617893225,"results":"126","hashOfConfig":"68"},{"size":2774,"mtime":1614664118173,"results":"127","hashOfConfig":"68"},{"size":1159,"mtime":1614788025862,"results":"128","hashOfConfig":"68"},{"size":955,"mtime":1614765767945,"results":"129","hashOfConfig":"68"},{"size":4903,"mtime":1614785252723,"results":"130","hashOfConfig":"68"},{"size":1688,"mtime":1614788025862,"results":"131","hashOfConfig":"68"},{"size":460,"mtime":1614832649305,"results":"132","hashOfConfig":"68"},{"size":5692,"mtime":1614926489608,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"1lgxsql",{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"136"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"136"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"136"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"136"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"136"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"136"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"136"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"136"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"136"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"136"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"136"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"136"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"185"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"136"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"136"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"136"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"136"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"136"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"136"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"136"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"136"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\index.js",[],["289","290"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\App.js",["291","292","293","294","295"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Slt.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\styles\\MainStyles.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\Chat.js",["296","297"],"import React, { useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { useEffect } from 'react'\r\nimport Slt from '../../defines/Slt'\r\nimport ConversationList from '../../components/ConversationList/ConversationList'\r\nimport ChatBox from '../../components/ChatBox/ChatBox'\r\nimport OnlineUsers from '../../components/OnlineUser/OnlineUsers'\r\nimport useStyles from '../../defines/styles/MainStyles'\r\nimport { Box, Hidden } from '@material-ui/core'\r\n\r\nexport default function Chat() {\r\n    const classes = useStyles();\r\n    const [appBarHeight,\r\n        setAppBarHeight] = useState(0);\r\n\r\n    // HANDLE HEIGHT\r\n    const heightStyle = {\r\n        height: `calc(100vh - ${appBarHeight}px)`\r\n    }\r\n\r\n    const handleAppBarResize = () => {\r\n        let height = document\r\n            .getElementById(Slt.mainAppBar)\r\n            .clientHeight;\r\n        setAppBarHeight(height);\r\n    }\r\n\r\n    // HANDLE APP BAR RESIZE\r\n    useEffect(() => {\r\n        //handleAppBarResize();\r\n        //window.addEventListener('resize', handleAppBarResize)\r\n    }, []);\r\n\r\n    // DISPLAY LATEST CONVERSATION\r\n\r\n    return (\r\n        <Box className=\"main-content\" p={2} >\r\n            <Grid style={{ height: '100%' }} container >\r\n                <Grid style={{ height: '100%', padding: 0 }} item xs={3} className={`${classes.borderRight500}`} >\r\n                    <ConversationList></ConversationList>\r\n                </Grid>\r\n                <Grid style={{ height: '100%' }} item xs={9} md={7}>\r\n                    <ChatBox>\r\n                        Loading...\r\n                    </ChatBox>\r\n                </Grid>\r\n                <Hidden smDown stle>\r\n                    <Grid style={{ height: '100%', padding: 0 }} item xs={false} md={2} className={`${classes.borderLeft500} `}>\r\n                        <OnlineUsers />\r\n                    </Grid>\r\n                </Hidden>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\store.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\ChatSlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\Notify.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\NotifySlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\auth\\authSlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Message.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\CookieName.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Helper.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\GeneralSlices\\themeSlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatBox\\ChatBox.js",["298","299"],"import { Box, Divider } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { conversationStatus } from '../../features/chat/ChatSlice';\r\nimport NewChat from '../NewChat/NewChat';\r\nimport NormalChat from '../NormalChat/NormalChat';\r\nimport SendMessageBar from '../SendMessageBar/SendMessageBar';\r\nimport UserTyping from '../UserTyping/UserTyping';\r\n\r\n\r\nexport default function ChatBox({ children }) {\r\n    const [loaded] = useState(true);\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const [display, setDisplay] = useState(null);\r\n    const convoStatus = useSelector(conversationStatus);\r\n\r\n    useEffect(() => {\r\n        const { type, conversationId } = params;\r\n        if (type) {\r\n            switch (type) {\r\n                case 't':\r\n                    if (!conversationId) history.replace('/chat');\r\n                    setDisplay('chat');\r\n                    break;\r\n                case 'new':\r\n                    if (conversationId) history.replace('/chat/new');\r\n                    setDisplay('new');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        } else {\r\n            //home chat\r\n            setDisplay('chat');\r\n\r\n        }\r\n        return () => {\r\n        }\r\n    }, [params])\r\n\r\n    const mainHtml = (\r\n        <Box className=\"chat-box-wrapper\">\r\n            {\r\n                display === 'chat'\r\n                    ?\r\n                    <NormalChat></NormalChat>\r\n                    : <NewChat></NewChat>\r\n            }\r\n            <div style={{ position: 'absolute', bottom: '100px', left: '5px', width: '100%' }}>\r\n                <UserTyping></UserTyping>\r\n            </div>\r\n            <Box display={convoStatus === 'loading' ? 'none' : 'unset'}>\r\n                <SendMessageBar></SendMessageBar>\r\n            </Box>\r\n        </Box>\r\n    )\r\n\r\n    return (\r\n        <React.Fragment> { loaded ? mainHtml : children} </React.Fragment>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationItem\\ConversationItem.js",["300","301","302"],"import React from 'react'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MyAvatar from '../MyAvatar/MyAvatar';\r\nimport MyAvatarGroup from '../MyAvatarGroup/MyAvatarGroup';\r\nimport { Avatar, Box, Hidden, ListItemAvatar, makeStyles } from '@material-ui/core';\r\nimport { authUser } from '../../features/auth/authSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport ConversationLink from '../ConversationLink/ConversationLink';\r\nimport RouterLink from '../RouterLink/RouterLink';\r\nimport { conversationId } from '../../features/chat/ChatSlice';\r\n\r\nconst useStyle = makeStyles({\r\n    truncateListItemStyle: {\r\n        '& > p': {\r\n            overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'\r\n        }\r\n    }\r\n})\r\n\r\nconst GenerateAvatarGroup = ({ items }) => {\r\n    items = items.map((item) => {\r\n        return {\r\n            name: item.username,\r\n            src: item.picture,\r\n        }\r\n    })\r\n    return <MyAvatarGroup items={items}></MyAvatarGroup>\r\n}\r\n\r\n\r\nexport default function ConversationItem({ item, online, icon }) {\r\n    const classes = useStyle();\r\n    const user = useSelector(authUser);\r\n    const convoId = useSelector(conversationId);\r\n    const { members } = item;\r\n    const friends = members.filter((item) => {\r\n        return item._id !== user._id;\r\n    })\r\n    let name, lastMessageText = null;\r\n    if (members.length === 2) {\r\n        name = friends[0].username;\r\n    } else {\r\n        name = `${friends[0].username} and ${friends.length - 1} others`;\r\n    }\r\n    if (item.lastMessage) {\r\n        let prefix = (item.lastMessage) ? (item.lastMessage.from._id === user._id ? 'you: ' : (friends.length > 1 ? `${item.lastMessage.from.username}: ` : null)) : null;\r\n        lastMessageText = prefix !== null ? `${prefix} ${item.lastMessage.text}` : item.lastMessage.text;\r\n    }\r\n    return (\r\n        <RouterLink to={`/chat/t/${item._id}`}>\r\n            <ListItem button selected={convoId === item._id}>\r\n                <ListItemAvatar style={{ width: '90px' }}>\r\n                    {\r\n                        icon ? (<Avatar> {icon} </Avatar>) :\r\n                            (\r\n                                members.length === 2\r\n                                    ? <MyAvatar online={online} name={name} single={true} picture={friends[0].picture}></MyAvatar>\r\n                                    : <GenerateAvatarGroup items={friends}></GenerateAvatarGroup>\r\n                            )\r\n                    }\r\n                </ListItemAvatar>\r\n                <Hidden xsDown>\r\n                    <ListItemText className={classes.truncateListItemStyle} primary={name} secondary={lastMessageText}></ListItemText>\r\n                </Hidden>\r\n            </ListItem >\r\n        </RouterLink>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationList\\ConversationList.js",["303","304","305","306","307","308","309","310"],"import React, { useEffect, useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport SearchBar from '../SearchBar/SearchBar'\r\nimport { Box, Hidden } from '@material-ui/core'\r\nimport mainStyles from '../../defines/styles/MainStyles'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ConversationItem from '../ConversationItem/ConversationItem'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchAndPrependConversationById, fetchConversations, selectAllSidebarConversations, selectSidebarConversationIds, updateLastMessage } from '../../features/sidebarConversations/SidebarConversationsSlice'\r\nimport { authUser } from '../../features/auth/authSlice'\r\nimport MySocket from '../../defines/Socket/MySocket'\r\nimport SocketEventName from '../../defines/Socket/SocketEventName'\r\nimport Socket from '../../defines/Socket'\r\nimport { conversationId } from '../../features/chat/ChatSlice'\r\n\r\n\r\nexport default function ConversationList() {\r\n    const classes = mainStyles();\r\n    const dispatch = useDispatch();\r\n    const conversations = useSelector(selectAllSidebarConversations);\r\n    const loggedUser = useSelector(authUser);\r\n    const ids = useSelector(selectSidebarConversationIds);\r\n    const convoId = useSelector(conversationId);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchConversations({ id: loggedUser._id }));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const myFunc = (data) => {\r\n            const { message, conversationId } = data;\r\n            if (ids.indexOf(conversationId) > -1) {\r\n                dispatch(updateLastMessage({ id: conversationId, message }));\r\n            } else {\r\n                dispatch(fetchAndPrependConversationById({ id: conversationId }));\r\n            }\r\n        }\r\n        MySocket.onNewMessageNotification(myFunc)\r\n        return () => {\r\n            Socket.removeListener(SocketEventName.newMessageNotification, myFunc);\r\n        }\r\n    }, [convoId, ids])\r\n\r\n\r\n    const conversationsHtml = conversations.map((item, i) => {\r\n        return (\r\n            <ConversationItem key={i} item={item}></ConversationItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <List className=\"left-sidebar custom-scrollbar\">\r\n            {conversationsHtml}\r\n        </List>\r\n    )\r\n}\r\n\r\n        //{/* \r\n         //*/}\r\n        //<Grid className=\"left-sidebar\" container >\r\n            //{/* SEARCH BAR */}\r\n            //{/* \r\n            //<Grid item xs={12}>\r\n                //<Box my={2}>\r\n                    //<SearchBar></SearchBar>\r\n                //</Box>\r\n            //</Grid>\r\n             //*/}\r\n\r\n            //<Grid item xs={12} >\r\n                //{/* \r\n                //<Box mt={2} >\r\n                    //<HomeConversationItem></HomeConversationItem>\r\n                //</Box>\r\n                 //*/}\r\n            //</Grid>\r\n        //</Grid>\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\DayNightSwitch\\DayNightSwitch.js",["311"],"import React, { useEffect } from 'react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DayIcon from '@material-ui/icons/Brightness7';\r\nimport NightIcon from '@material-ui/icons/Brightness4';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { switchThemeType } from '../../GeneralSlices/themeSlice';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nexport default function DayNightSwitch() {\r\n    const theme = useSelector((state) => { return state.theme });\r\n    const dispatch = useDispatch();\r\n    const [cookies, setCookie, removeCookie] = useCookies(['theme'])\r\n\r\n    useEffect(() => {\r\n        if (cookies.theme) {\r\n            if (cookies.theme.type) {\r\n                if (cookies.theme.type !== theme.type) {\r\n                    dispatch(switchThemeType());\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    const onSwitch = () => {\r\n        let cookieValue = { ...theme, type: theme.type === 'light' ? 'dark' : 'light', };\r\n        setCookie('theme', JSON.stringify(cookieValue));\r\n        dispatch(switchThemeType());\r\n    }\r\n\r\n    return (\r\n        <IconButton aria-label=\"Day / night toggle\" onClick={onSwitch} color=\"inherit\">\r\n            {(theme.type === 'light') ? <NightIcon></NightIcon> : <DayIcon></DayIcon>}\r\n        </IconButton>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Header\\Header.js",["312","313","314","315"],"import React from 'react'\r\nimport MyAvatar from '../MyAvatar/MyAvatar';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Slt from '../../defines/Slt'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { isLogged, authUser, status } from '../../features/auth/authSlice'\r\nimport { signOut } from '../../features/auth/authSlice';\r\nimport { useCookies } from 'react-cookie'\r\nimport DayNightSwitch from '../DayNightSwitch/DayNightSwitch'\r\nimport Notifications from '../Notifications/Notifications';\r\nimport RunAction from '../RunAction/RunAction';\r\nimport { LOGGED_USER } from '../../defines/CookieName';\r\n\r\nexport default function Header(props) {\r\n    const [cookies, setCookie, removeCookie] = useCookies(LOGGED_USER);\r\n    const user = useSelector(authUser);\r\n    const dispatch = useDispatch();\r\n    const logged = useSelector(isLogged);\r\n    const authStatus = useSelector(status);\r\n    const location = useLocation();\r\n    const pathName = location.pathname;\r\n    const history = useHistory();\r\n\r\n    const onSignout = () => {\r\n        removeCookie(LOGGED_USER);\r\n        dispatch(signOut());\r\n        history.push('/');\r\n    }\r\n\r\n    const toolsHtml = (\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Box mr={4}>\r\n                {logged\r\n                    ? <Notifications></Notifications>\r\n                    : null\r\n                }\r\n            </Box>\r\n            {/* \r\n            <RunAction></RunAction>\r\n             */}\r\n            <DayNightSwitch></DayNightSwitch>\r\n            {(logged)\r\n                ? (\r\n                    <MyAvatar name={user.name} single={user.single} picture={user.picture}></MyAvatar>\r\n                )\r\n                : null}\r\n            <Button\r\n                disabled={pathName === '/login'}\r\n                startIcon={(!logged)\r\n                    ? <PersonIcon></PersonIcon>\r\n                    : null}\r\n                color=\"inherit\"\r\n                onClick={() => {\r\n                    onSignout();\r\n                }}>\r\n                <Typography >{(logged)\r\n                    ? 'Sign out'\r\n                    : 'Sign in'}</Typography>\r\n            </Button>\r\n        </Box>\r\n    )\r\n\r\n    return (\r\n        <AppBar className=\"header\" position=\"static\" color=\"primary\" id={Slt.mainAppBar}>\r\n            <Toolbar\r\n                style={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between'\r\n                }}>\r\n                <Typography variant=\"h6\">\r\n                    <Link to=\"/chat\" color=\"inherit\" style={{ color: 'white', textDecoration: 'none' }}>\r\n                        Messenger\r\n                        </Link>\r\n                </Typography>\r\n                {(authStatus !== 'loading') ? toolsHtml : null}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\PrivateRoute\\PrivateRoute.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SearchBar\\SearchBar.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Toolbar\\ToolbarTitle.js",[],["316","317"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Messages\\Messages.js",["318","319"],"import React, { useEffect, useState } from 'react'\r\nimport { Box, List, Typography } from '@material-ui/core'\r\nimport Message from '../Message/Message'\r\nimport mainStyle from '../../defines/styles/MainStyles'\r\nimport { useSelector } from 'react-redux';\r\nimport { authUser } from '../../features/auth/authSlice';\r\nimport ChatNotification from '../ChatNotification/ChatNotification';\r\nimport './Messages.css'\r\nimport { isNewChatEnable } from '../../features/NewChat/NewChatSlice';\r\n\r\nconst emptyHtml = (\r\n    <React.Fragment>\r\n        <Box mt={4}>\r\n            <Typography className=\"text-muted\" align=\"center\" >Let's start a conversation.</Typography>\r\n        </Box>\r\n    </React.Fragment>\r\n)\r\n\r\nconst scroll = () => {\r\n    let containers = document.getElementsByClassName('chat-box-messages-wrapper');\r\n    containers[0].scrollTop = containers[0].scrollHeight;\r\n}\r\n\r\nexport default function Messages({ messages }) {\r\n    const classes = mainStyle();\r\n    const user = useSelector(authUser);\r\n    const newChatEnabled = useSelector(isNewChatEnable);\r\n\r\n    // messages\r\n    const messagesHtml = messages.map((item, index) => {\r\n        if (item.from) {\r\n            let notShowAvatar = false;\r\n            if (index < messages.length - 1) {\r\n                const nextItem = messages[index + 1];\r\n                notShowAvatar = (nextItem.type === 'message') ? nextItem.from.username === item.from.username : false;\r\n            }\r\n            return <Message notShowAvatar={notShowAvatar} ownMessage={item.from.username === user.username} key={index} user={item.from} message={item.text} time={item.time}></Message>\r\n        } else {\r\n            return <ChatNotification key={index} username={item.user.username} type={item.type}></ChatNotification>\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        scroll();\r\n    }, [messages])\r\n\r\n    return (\r\n        <List className=\"chat-box-messages-wrapper custom-scrollbar\" style={{ top: (newChatEnabled) ? '57px' : '0' }} >\r\n            {messagesHtml.length > 0 ? messagesHtml : (!newChatEnabled ? emptyHtml : null)}\r\n        </List>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyAvatar\\MyAvatar.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Message\\Message.js",["320","321"],"import { Box, Grid, Tooltip, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MyAvatar from '../MyAvatar/MyAvatar';\r\nimport MyTime from '../../defines/MyTime';\r\n\r\nexport default function Message({ notShowAvatar, ownMessage, time, user, message }) {\r\n    const avatar = !notShowAvatar ? (<MyAvatar sizeInPixel={20} name={user.username} picture={user.picture}></MyAvatar>) : null;\r\n    const position = (ownMessage) ? 'right' : 'left';\r\n    const flexPos = (ownMessage) ? 'flex-end' : 'flex-start';\r\n    const placement = (ownMessage) ? 'bottom-start' : 'bottom-end';\r\n    return (\r\n        <ListItem key=\"1\">\r\n            <Box width=\"100%\" style={{ display: 'flex', justifyContent: flexPos, alignItems: 'flex-end' }}>\r\n                {/* AVATAR */}\r\n                {!ownMessage ? avatar : null}\r\n\r\n                {/* MESSAGE AND TIME */}\r\n                <Box className={`message ${position}-message ${!ownMessage && notShowAvatar ? 'ml-avatar' : ''}`}>\r\n                    <Tooltip title={MyTime.getMessageTimeString(MyTime.getCurrentTimeByUTCTime(time))} placement={placement}>\r\n                        <ListItemText align={position} primary={message} ></ListItemText>\r\n                    </Tooltip>\r\n                </Box>\r\n            </Box>\r\n\r\n        </ListItem>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SendingInput\\SendingInput.js",["322","323"],"import React, { useState } from 'react'\r\nimport { Grid, TextField, Fab, Button, IconButton } from '@material-ui/core'\r\nimport { Send as SendIcon } from '@material-ui/icons'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setNotify } from '../../features/notify/NotifySlice';\r\nimport MySocket from '../../defines/Socket/MySocket';\r\nimport { authUser } from '../../features/auth/authSlice';\r\nimport { conversation } from '../../features/chat/ChatSlice';\r\nimport Message from '../../defines/Message';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { isNewChatEnable, newChatReceivers } from '../../features/NewChat/NewChatSlice';\r\nimport Helper from '../../defines/Helper';\r\nimport ConversationApi from '../../defines/https/ConversationApi';\r\n\r\nlet myTimeoutObj;\r\nexport default function SendingInput() {\r\n    const [inputMsg, setInputMsg] = useState('');\r\n    const [isTyping, setTyping] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const user = useSelector(authUser);\r\n    const convo = useSelector(conversation);\r\n    const receivers = useSelector(newChatReceivers);\r\n    const newChatEnabled = useSelector(isNewChatEnable);\r\n\r\n    // INPUT CHANGE\r\n    const onInputChange = (e) => {\r\n        setInputMsg(e.target.value);\r\n    }\r\n\r\n    // ON SENDING MESSAGE\r\n    const onSendingMessageClick = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputMsg.trim() === '') dispatch(setNotify({ message: Message.PleaseTypeMessage, open: true, timeout: 2000 }))\r\n        else {\r\n            if (convo._id) {\r\n                onSendingMessage();\r\n            } else {\r\n                if (newChatEnabled && receivers.length > 0) {\r\n                    onCreateConversationsWithReceicersAndFristMessage();\r\n                } else {\r\n                    dispatch(setNotify({ message: Message.PleaseChooseReceiver, open: true, timeout: 2000 }))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSendingMessage = () => {\r\n        //MySocket.emitSendMessage(user, inputMsg);\r\n        MySocket.emitSendMessage(user, inputMsg, convo._id);\r\n        setInputMsg('');\r\n        if (newChatEnabled) history.push(`/chat/t/${convo._id}`)\r\n    }\r\n\r\n    const onCreateConversationsWithReceicersAndFristMessage = async () => {\r\n        const receiverIds = Helper.getArrayOfFieldValue(receivers, '_id').concat(user._id);\r\n        const data = await ConversationApi.createConversationWithMemberIds(receiverIds);\r\n        const { status, payload } = data;\r\n        if (status === 'succeeded') {\r\n            MySocket.emitJoinUsersToConversation(payload.members, payload._id);\r\n            MySocket.emitSendMessage(user, inputMsg, payload._id);\r\n            setInputMsg('');\r\n            history.push(`/chat/t/${payload._id}`);\r\n        }\r\n    }\r\n\r\n    const emitTyping = () => {\r\n        if (!isTyping && inputMsg.trim() !== '') MySocket.emitTyping(user, convo._id);\r\n        setTyping(true);\r\n        clearTimeout(myTimeoutObj);\r\n        myTimeoutObj = setTimeout(() => {\r\n            emitStopTyping();\r\n        }, 2000);\r\n    }\r\n\r\n    const emitStopTyping = () => {\r\n        if (isTyping) {\r\n            MySocket.emitStopTyping(user.username, convo._id);\r\n            setTyping(false);\r\n        }\r\n    }\r\n\r\n    // SOLVE TYPING\r\n    const onKeyUp = (e) => {\r\n        if (e.which !== 13) {\r\n            if (inputMsg.length > 3) emitTyping();\r\n        } else {\r\n            emitStopTyping();\r\n        }\r\n    }\r\n\r\n    const onBlur = () => {\r\n        emitStopTyping();\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(e) => { onSendingMessageClick(e) }}>\r\n            <Grid container >\r\n                <Grid item xs={10} md={11}>\r\n                    <TextField\r\n                        autoFocus={true}\r\n                        inputProps={{\r\n                            autoComplete: 'off'\r\n                        }}\r\n                        value={inputMsg} id=\"outlined-basic-email\" fullWidth onChange={onInputChange} onKeyUp={onKeyUp} onBlur={onBlur} />\r\n                </Grid>\r\n                <Grid item xs={2} md={1} align=\"center\">\r\n                    <IconButton color=\"primary\" type=\"submit\"> <SendIcon /> </IconButton>\r\n                </Grid>\r\n            </Grid>\r\n        </form >\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignIn\\SignIn.js",["324","325"],"import React, { useState, } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setNotify } from '../../features/notify/NotifySlice';\r\nimport { isLogged, loginThunk, status, authError } from '../../features/auth/authSlice';\r\nimport { useCookies } from 'react-cookie';\r\nimport Helper from '../../defines/Helper'\r\nimport { LOGGED_USER } from '../../defines/CookieName';\r\nimport Message from '../../defines/Message';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Box } from '@material-ui/core';\r\nimport FormErrors from '../../defines/configs/FormErrors';\r\nimport RouterLink from '../RouterLink/RouterLink';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    }\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const dispatch = useDispatch();\r\n    const [isSubmitClicked, setSubmitClicked] = useState(false);\r\n\r\n    // SELECTOR\r\n    const logged = useSelector(isLogged);\r\n    const [cookies, setCookie] = useCookies([LOGGED_USER]);\r\n\r\n    const authStatus = useSelector(status);\r\n    const authErr = useSelector(authError);\r\n\r\n    const classes = useStyles();\r\n    if (isSubmitClicked) {\r\n        if (authStatus === 'succeeded' && authErr)\r\n            dispatch(setNotify({ message: 'Login unsuccessfully', type: 'error', open: true }))\r\n    } else {\r\n        if (authStatus === 'loading') return null;\r\n    }\r\n\r\n    const mainHtml = (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                    </Typography>\r\n\r\n                {/* FORMIK */}\r\n                <Formik\r\n                    initialValues={{\r\n                        username: '',\r\n                        password: '',\r\n                        passwordConfirmation: ''\r\n                    }}\r\n                    validationSchema={yup.object({\r\n                        username: yup.string().required(Helper.format(FormErrors.required, 'Username')),\r\n                        password: yup.string().required(Helper.format(FormErrors.required, 'Password')),\r\n                    })}\r\n                    onSubmit={async (values, { setSubmitting }) => {\r\n                        const { username, password } = values;\r\n                        let user = {\r\n                            username,\r\n                            password\r\n                        };\r\n                        setSubmitClicked(true);\r\n                        dispatch(loginThunk(user));\r\n                        setCookie(LOGGED_USER, user);\r\n                        //alert(JSON.stringify(values));\r\n                    }}>\r\n                    {({\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isSubmitting,\r\n                        isValid,\r\n                        dirty,\r\n                        /* and other goodies */\r\n                    }) => {\r\n                        const showErrors = {};\r\n                        for (let key in errors) {\r\n                            showErrors[key] = (errors[key] != null) && touched[key];\r\n                        }\r\n                        const props = (field, label) => {\r\n                            label = label || Helper.ucFirst(field);\r\n                            return {\r\n                                fullWidth: true,\r\n                                margin: 'normal',\r\n                                placeholder: label,\r\n                                variant: 'outlined',\r\n                                name: field,\r\n                                onChange: handleChange,\r\n                                onBlur: handleBlur,\r\n                                value: values[label],\r\n                                label: label,\r\n                                error: (showErrors[field]),\r\n                                helperText: (showErrors[field])\r\n                                    ? errors[field]\r\n                                    : null\r\n                            }\r\n                        }\r\n                        return (\r\n                            <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n                                <TextField autoFocus={true} type=\"text\" {...props('username')} />\r\n                                <TextField type=\"password\" {...props('password')} />\r\n                                <Box >\r\n                                    <Button\r\n                                        disabled={isSubmitting || !isValid || !dirty}\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    > Sign In\r\n                                    </Button>\r\n                                </Box>\r\n                                <RouterLink to=\"/sign-up\" >\r\n                                    <Typography color=\"primary\" style={{ cursor: 'pointer' }} >\r\n                                        Create an account\r\n                                    </Typography>\r\n                                </RouterLink>\r\n                            </form>\r\n                        )\r\n                    }}\r\n                </Formik>\r\n                {/* END FORMIK */}\r\n\r\n            </div>\r\n        </Container>\r\n    )\r\n\r\n    return (!logged ? mainHtml : (null));\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\OnlineUser\\OnlineUsers.js",["326","327","328","329","330","331","332"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport MyAvatar from '../MyAvatar/MyAvatar';\r\nimport Socket from '../../defines/Socket';\r\nimport MySocket from '../../defines/Socket/MySocket';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authUser } from '../../features/auth/authSlice';\r\nimport { Box, Hidden, Typography } from '@material-ui/core';\r\nimport SocketEventName from '../../defines/Socket/SocketEventName';\r\nimport AppTitle from '../AppTitle/AppTitle';\r\nimport { conversationId, fetchConversationByUserIdsOrCreateIfNotExist, conversationMemberIds } from '../../features/chat/ChatSlice';\r\nimport ConversationApi from '../../defines/https/ConversationApi';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Helper from '../../defines/Helper';\r\nimport ConversationLink from '../ConversationLink/ConversationLink';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nexport default function OnlineUsers({ item }) {\r\n    const classes = useStyles();\r\n    const [onlineUsers, setOnlineUsers] = useState([]);\r\n    const [isShow, setShow] = useState(false);\r\n    const user = useSelector(authUser) || {};\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setShow(true);\r\n        }, 500);\r\n        MySocket.emitGetOnlineUsers();\r\n        MySocket.onOnlineUsers((data) => {\r\n            setOnlineUsers(data)\r\n        })\r\n        return () => {\r\n            Socket.off(SocketEventName.onlineUsers);\r\n        }\r\n    }, [])\r\n\r\n    const onlineUsersHtml = onlineUsers.filter((item) => {\r\n        return (item.username !== user.username)\r\n    }).map((item) => {\r\n        return (\r\n            <ConversationLink key={item._id} button component={ListItem} item={item}>\r\n                <ListItemAvatar >\r\n                    <MyAvatar online={true} name={item.name} single={item.single} picture={item.picture}></MyAvatar>\r\n                </ListItemAvatar>\r\n                <Hidden smDown>\r\n                    <ListItemText\r\n                        primary={item.username}\r\n                    />\r\n                </Hidden>\r\n            </ConversationLink>\r\n        )\r\n    })\r\n\r\n    const emptyHtml = (\r\n        <Typography className=\"text-muted\" align=\"center\" >No online users</Typography>\r\n    )\r\n\r\n    return (\r\n        <Box className=\"online-users-wrapper\">\r\n            <Box p={2} className=\"title\">\r\n                <AppTitle title=\"Online\"></AppTitle>\r\n            </Box>\r\n            <List className={`${classes.root} online-users-list`}>\r\n                {\r\n                    isShow\r\n                        ? (onlineUsersHtml.length > 0 ? onlineUsersHtml : emptyHtml)\r\n                        : null\r\n                }\r\n            </List >\r\n        </Box>\r\n    );\r\n}","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Config.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\IconWithBadge.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Notifications\\Notifications.js",["333","334","335"],"import React from 'react'\r\n\r\nimport IconWithBadge from '../IconWithBadge';\r\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Hidden, IconButton, Tooltip } from '@material-ui/core';\r\nimport RouterLink from '../RouterLink/RouterLink';\r\n\r\nexport default function Notifications() {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {/* \r\n            <IconWithBadge badgeContent=\"10\">\r\n                <MailIcon></MailIcon>\r\n            </IconWithBadge>\r\n             */}\r\n            {/* \r\n            <IconWithBadge badgeContent=\"10\" onClick={() => {\r\n                history.push('/friends');\r\n            }}>\r\n            </IconWithBadge>\r\n              */}\r\n            <Hidden xsDown>\r\n                <RouterLink to=\"/chat/new\">\r\n                    <Tooltip title=\"Chat\">\r\n                        <IconButton color=\"inherit\">\r\n                            <MessageIcon></MessageIcon>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </RouterLink>\r\n            </Hidden>\r\n            <RouterLink to=\"/friends\">\r\n                <Tooltip title=\"Friends\">\r\n                    <IconButton color=\"inherit\">\r\n                        <PeopleAltIcon></PeopleAltIcon>\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </RouterLink>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Friends\\Friends.js",["336"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\AppTitle\\AppTitle.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyTabPanel\\MyTabPanel.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignUp\\SignUp.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\AuthRoute\\AuthRoute.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\https\\UserApi.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\configs\\FormErrors.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\validates\\UserValidates.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\MyTime.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\RouterLink\\RouterLink.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\UserTyping\\UserTyping.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatNotification\\ChatNotification.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendBox\\FriendBox.js",["337","338","339","340","341","342","343","344","345","346","347","348","349","350"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\RunAction\\RunAction.js",["351"],"import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport UserApi from '../../defines/https/UserApi'\r\nimport { authUser } from '../../features/auth/authSlice';\r\n\r\nexport default function RunAction() {\r\n    const user = useSelector(authUser);\r\n    const runAction = async () => {\r\n        let data = await UserApi.sentFriendRequest(user._id, null);\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Button size=\"small\" color=\"secondary\" variant=\"contained\" onClick={runAction}>Run Action</Button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\SentRequestAction.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\RequestAction.js",["352","353"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\StrangerAction.js",["354","355"],"import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport UserApi from '../../defines/https/UserApi';\r\nimport Message from '../../defines/Message';\r\nimport MySocket from '../../defines/Socket/MySocket';\r\nimport mainStyles from '../../defines/styles/MainStyles'\r\nimport { authUser, updateUser } from '../../features/auth/authSlice';\r\nimport { onAddFriend } from '../../features/friend/FriendSlice';\r\n\r\nexport default function SentRequestAction({ item }) {\r\n    const classes = mainStyles();\r\n    const user = useSelector(authUser);\r\n    const dispatch = useDispatch();\r\n    const onAddFriendClick = async () => {\r\n        const data = await UserApi.sentFriendRequest(user._id, item._id);\r\n        if (data.status === 'succeeded') {\r\n            //MySocket.emitUpdateUserById(user._id);\r\n            MySocket.emitAddFriend(user, item._id);\r\n            dispatch(onAddFriend({user: item}));\r\n        }\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Button onClick={onAddFriendClick} color=\"primary\" variant=\"contained\" size=\"small\" className={classes.buttonStyle}>Add friend</Button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendList\\FriendList.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Loading\\Loading.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\FriendAction.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket\\MySocket.js",["356"],"import Helper from '../Helper';\r\nimport MyTime from '../MyTime';\r\nimport Socket from '../Socket';\r\nimport SocketEventName from './SocketEventName';\r\nconst MySocket = {\r\n    // EMIT\r\n    emitSignIn: function (user) {\r\n        Socket.emit(SocketEventName.signIn, { user });\r\n    },\r\n    emitSignOut: function (user) {\r\n        Socket.emit(SocketEventName.signOut, { user });\r\n    },\r\n    emitGetOnlineUsers: function () {\r\n        Socket.emit(SocketEventName.getOnlineUsers);\r\n    },\r\n    emitUpdateUserById: function (id) {\r\n        Socket.emit(SocketEventName.updateUser, { id });\r\n    },\r\n    emitSendMessage: function (user, message, conversationId) {\r\n        Socket.emit(SocketEventName.sendMessage, { user, message, conversationId });\r\n    },\r\n    emitTyping: function (user, conversationId) {\r\n        Socket.emit(SocketEventName.typing, { user, conversationId });\r\n    },\r\n    emitStopTyping: function (username, conversationId) {\r\n        Socket.emit(SocketEventName.stopTyping, { username, conversationId });\r\n    },\r\n    emitJoinUsersToConversation: function (ids, conversationId) {\r\n        Socket.emit(SocketEventName.joinUsersToConversation, { ids, conversationId });\r\n    },\r\n    emitJoinRoom: function (roomName) {\r\n        Socket.emit(SocketEventName.joinRoom, { roomName });\r\n    },\r\n    emitLeaveRoom: function (roomName) {\r\n        Socket.emit(SocketEventName.leaveRoom, { roomName });\r\n    },\r\n\r\n    // FRIEND ACTION\r\n    emitAddFriend: function (user, friendId) {\r\n        Socket.emit(SocketEventName.addFriend, { user, friendId });\r\n    },\r\n    emitAcceptFriend: function (user, friendId) {\r\n        Socket.emit(SocketEventName.acceptFriend, { user, friendId });\r\n    },\r\n    emitUnfriend: function (user, friendId) {\r\n        Socket.emit(SocketEventName.unfriend, { user, friendId });\r\n    },\r\n    emitCancelFriendRequest: function (user, friendId) {\r\n        Socket.emit(SocketEventName.cancelFriendRequest, { user, friendId });\r\n    },\r\n    emitDeleteFriendRequest: function (user, friendId) {\r\n        Socket.emit(SocketEventName.deleteFriendRequest, { user, friendId });\r\n    },\r\n\r\n    // ON\r\n    onUpdateUser: function (callback) {\r\n        Socket.on(SocketEventName.updateUser, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n    onReceiveMessage: function (callback) {\r\n        Socket.on(SocketEventName.receiveMessage, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n    onOnlineUsers: function (callback) {\r\n        Socket.on(SocketEventName.onlineUsers, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n    onTyping: function (callback) {\r\n        Socket.on(SocketEventName.typing, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n    onStopTyping: function (callback) {\r\n        Socket.on(SocketEventName.stopTyping, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n\r\n    // NOTIFICATION\r\n    onNewMessageNotification: function (callback) {\r\n        Socket.on(SocketEventName.newMessageNotification, callback)\r\n    },\r\n\r\n    // FRIEND ACTIONS\r\n    onFriendAccepted: function (callback) {\r\n        Socket.on(SocketEventName.friendAccepted, callback)\r\n    },\r\n    onFriendRequested: function (callback) {\r\n        Socket.on(SocketEventName.friendRequested, callback)\r\n    },\r\n    onFriendUnFriend: function (callback) {\r\n        Socket.on(SocketEventName.friendUnfriend, callback)\r\n    },\r\n    onFriendRequestCanceled: function (callback) {\r\n        Socket.on(SocketEventName.friendRequestCanceled, callback)\r\n    },\r\n    onFriendRejected: function (callback) {\r\n        Socket.on(SocketEventName.friendRejected, callback)\r\n    },\r\n    off: function (eventName) {\r\n        Socket.off(eventName);\r\n    },\r\n}\r\nexport default MySocket","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket\\SocketEventName.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\https\\ConversationApi.js",["357","358"],"import Axios from \"axios\";\r\nimport { API_ADDRESS } from \"../Config\";\r\nimport Helper from \"../Helper\";\r\nimport MySocket from '../Socket/MySocket';\r\n\r\nconst prefix = `${API_ADDRESS}/conversation`;\r\n\r\nconst ConversationApi = {\r\n    findConversationById: async function (id) {\r\n        const data = await Axios.get(`${prefix}/getConversationById`, {\r\n            params: {\r\n                id\r\n            }\r\n        });\r\n        return data.data;\r\n    },\r\n    findConversationByMemberIds: async function (ids) {\r\n        const data = await Axios.post(`${prefix}/getConversationByMemberIds`, {\r\n            ids\r\n        });\r\n        return data.data;\r\n    },\r\n    findSidebarConversationById: async function (id) {\r\n        const data = await Axios.get(`${prefix}/getSidebarConversationById`, {\r\n            params: {\r\n                id\r\n            }\r\n        });\r\n        return data.data;\r\n    },\r\n    listConversationsForListDisplay: async function (id) {\r\n        const data = await Axios.get(`${prefix}/listConversationsForListDisplay`, {\r\n            params: {\r\n                id\r\n            }\r\n        });\r\n        return data.data;\r\n    },\r\n    findConversationInfoByUserIdsOrCreateIfNotExist: async function (ids) {\r\n        const data = await Axios.post(`${prefix}/getConversationInfoByUserIdsOrCreateIfNotExist`, { ids });\r\n        return data.data;\r\n    },\r\n    getHomeConversation: async function () {\r\n        const data = await Axios.get(`${prefix}/home`);\r\n        return data.data;\r\n    },\r\n    createConversationWithMemberIds: async function (ids, messageParams = null) {\r\n        const data = await Axios.post(`${prefix}/createConversationWithMemberIds`, { ids, messageParams });\r\n        return data.data;\r\n    }\r\n}\r\nexport default ConversationApi;","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\HomeConversationItem\\HomeConversationItem.js",[],["359","360"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SendMessageBar\\SendMessageBar.js",["361"],"import { Box, Paper } from '@material-ui/core'\r\nimport React from 'react'\r\nimport SendingInput from '../SendingInput/SendingInput'\r\n\r\nexport default function SendMessageBar({ type }) {\r\n    return (\r\n        <Paper style={{boxShadow:'none'}} className=\"sending-message-bar-wrapper\">\r\n            <SendingInput type={type}></SendingInput>\r\n        </Paper>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\NormalChat\\NormalChat.js",["362","363","364","365","366","367","368","369","370","371","372","373","374","375","376"],"import { Box, Divider } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport ConversationApi from '../../defines/https/ConversationApi';\r\nimport Socket from '../../defines/Socket';\r\nimport MySocket from '../../defines/Socket/MySocket';\r\nimport SocketEventName from '../../defines/Socket/SocketEventName';\r\nimport { authUser, authUserId } from '../../features/auth/authSlice';\r\nimport { appendMessage, conversation, conversationError, conversationMessages, conversationStatus, fetchConversationById, fetchConversationByMemberIds, fetchHomeConversation, reset } from '../../features/chat/ChatSlice';\r\nimport { isNewChatEnable, newChatReceiver } from '../../features/NewChat/NewChatSlice';\r\nimport { updateLastMessage } from '../../features/sidebarConversations/SidebarConversationsSlice';\r\nimport Loading from '../Loading/Loading';\r\nimport Messages from '../Messages/Messages';\r\nimport SendMessageBar from '../SendMessageBar/SendMessageBar';\r\nimport UserTyping from '../UserTyping/UserTyping';\r\n\r\nexport default function NormalChat() {\r\n    const status = useSelector(conversationStatus);\r\n    const messages = useSelector(conversationMessages);\r\n    const convo = useSelector(conversation);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const loggedUserId = useSelector(authUserId);\r\n    const { conversationId } = useParams();;\r\n    const receiver = useSelector(newChatReceiver) || {};\r\n    const newChatEnabled = useSelector(isNewChatEnable);\r\n\r\n    // FETCH CONVERSATION BY FRIEND ID\r\n    useEffect(() => {\r\n        if (newChatEnabled) {\r\n            if (receiver._id) dispatch(fetchConversationByMemberIds([`${loggedUserId}`, `${receiver._id}`]));\r\n            else {\r\n                dispatch(reset());\r\n            }\r\n        }\r\n    }, [receiver._id, newChatEnabled])\r\n\r\n    useEffect(() => {\r\n        if (status === 'succeeded') {\r\n            if (convo._id) MySocket.emitJoinRoom(`${convo._id}_current`);\r\n            else history.replace('/chat/new');\r\n        }\r\n        return () => {\r\n            if (convo._id) MySocket.emitLeaveRoom(`${convo._id}_current`);\r\n        }\r\n    }, [status, convo._id])\r\n\r\n    // FETCH CONVERSATION BY ID\r\n    useEffect(() => {\r\n        if (conversationId) dispatch(fetchConversationById(conversationId))\r\n    }, [conversationId]);\r\n\r\n    // reset\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(reset())\r\n        }\r\n    }, [])\r\n\r\n    // SOCKET EVENTS RECEIVE MESSAGE\r\n    useEffect(() => {\r\n        MySocket.onReceiveMessage((data) => {\r\n            const { conversationId, message } = data;\r\n            if (conversationId === convo._id) {\r\n                const messageObj = {\r\n                    type: 'message',\r\n                    ...message\r\n                }\r\n                dispatch(appendMessage(messageObj));\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            MySocket.off(SocketEventName.receiveMessage);\r\n        }\r\n    }, [messages, convo._id])\r\n\r\n    return (\r\n        <Box >\r\n            {status === 'loading'\r\n                ? <Loading></Loading>\r\n                : <Messages messages={messages}></Messages>\r\n            }\r\n        </Box>\r\n    )\r\n}","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationLink\\ConversationLink.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\sidebarConversations\\SidebarConversationsSlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\NewChat\\NewChat.js",["377","378"],"import { Box, Paper, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { resetNewChat, setNewChatEnabled } from '../../features/NewChat/NewChatSlice';\r\nimport NormalChat from '../NormalChat/NormalChat';\r\nimport Receiver from '../Receiver/Receiver';\r\n\r\nexport default function NewChat() {\r\n    const [friendId, setFriendId] = useState(null);\r\n    const dispatch = useDispatch();\r\n    const onFriendIdSelected = (id) => {\r\n        setFriendId(id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(setNewChatEnabled(true));\r\n        return () => {\r\n            dispatch(resetNewChat());\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Box position=\"relative\">\r\n            {/* INPUT */}\r\n            <Paper style={{ position: 'absolute', zIndex: '1000', width: '100%', boxShadow: 'none' }}>\r\n                <Receiver onFriendIdSelected={onFriendIdSelected}></Receiver>\r\n            </Paper>\r\n\r\n            {/* CHAT AREA */}\r\n            <Box>\r\n                <NormalChat friendId={friendId} type=\"temp\"></NormalChat>\r\n            </Box>\r\n        </Box >\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SuggestionUsers\\SuggestionUsers.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Receiver\\Receiver.js",["379","380","381","382","383"],"import { Avatar, Box, IconButton, ListItemText, TextField, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport UserApi from '../../defines/https/UserApi'\r\nimport Helper from '../../defines/Helper'\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport './Receiver.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authUserId } from '../../features/auth/authSlice';\r\nimport SuggestionUsers from '../SuggestionUsers/SuggestionUsers';\r\nimport { removeLastNewChatReceiver, newChatReceivers, removeNewChatReceiverById, appendNewChatReceiver } from '../../features/NewChat/NewChatSlice';\r\n\r\nlet timeout;\r\n\r\nconst SelectedUsers = ({ items, onCloseClick }) => {\r\n    return items.map((item) => {\r\n        return (\r\n            <Alert\r\n                key={item._id}\r\n                className=\"selected-receiver\"\r\n                severity=\"info\"\r\n                icon={false}\r\n                action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => { onCloseClick(item) }} >\r\n                        <CloseIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                }\r\n            > {item.username}</Alert>\r\n        )\r\n    })\r\n}\r\n\r\nexport default function Receiver({ onFriendIdSelected }) {\r\n    const dispatch = useDispatch();\r\n    const [mounted, setMounted] = useState(true);\r\n    const [suggestionUsers, setSuggestionUsers] = useState([]);\r\n    const [inputVal, setInputVal] = useState('');\r\n    const [receiverName, setReceiverName] = useState('');\r\n    const inputRef = useRef(null);\r\n    const loggedUserId = useSelector(authUserId)\r\n    const receivers = useSelector(newChatReceivers);\r\n\r\n    // fetch suggestion users\r\n    useEffect(() => {\r\n        setMounted(true);\r\n        const fetchUsers = async () => {\r\n            const data = await UserApi.findReceivers(receiverName, Helper.getArrayOfFieldValue(receivers, '_id').concat(loggedUserId));\r\n            const { status, payload } = data;\r\n            if (status === 'succeeded') {\r\n                if (mounted) {\r\n                    setSuggestionUsers(payload);\r\n                }\r\n            }\r\n        }\r\n        if (receiverName.trim() !== '') fetchUsers();\r\n        return () => {\r\n            setMounted(false);\r\n        }\r\n    }, [receiverName, receivers, loggedUserId])\r\n\r\n    useEffect(() => {\r\n        if (receivers.length === 1) onFriendIdSelected(receivers[0]._id);\r\n        else onFriendIdSelected(null);\r\n    }, [receivers])\r\n\r\n    // suggestion users\r\n    const onSuggestionUserClick = (item) => {\r\n        dispatch(appendNewChatReceiver(item));\r\n        setInputVal('');\r\n        setReceiverName('');\r\n        setSuggestionUsers([])\r\n        const input = inputRef.current.querySelector('input');\r\n        input.focus();\r\n    }\r\n\r\n    // selected users\r\n    const onRemoveSelectedUser = (item) => {\r\n        dispatch(removeNewChatReceiverById(item._id));\r\n    }\r\n\r\n    const solveSelectedUsers = (e, oldVal, newVal) => {\r\n        if (e.which === 8 && oldVal.trim() === '' && newVal.trim() === '') {\r\n            // pop\r\n            dispatch(removeLastNewChatReceiver());\r\n        }\r\n    }\r\n\r\n    // input events\r\n    const onInputChange = (e) => {\r\n        const value = e.target.value;\r\n        setInputVal(value);\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(() => {\r\n            setReceiverName(value);\r\n        }, 500);\r\n    }\r\n\r\n    const onInputKeyup = (e) => {\r\n        const value = e.target.value;\r\n        solveSelectedUsers(e, inputVal, value);\r\n    }\r\n\r\n    const onInputBlur = (e) => {\r\n        const value = e.target.value;\r\n        solveSelectedUsers(e, inputVal, value);\r\n    }\r\n\r\n    // render\r\n    return (\r\n        <Box className=\"receiver-wrapper\">\r\n            <Typography className=\"receiver-label\" >To: </Typography>\r\n            <Box className=\"receiver-container\" display=\"inline-block\" >\r\n                <SelectedUsers items={receivers} onCloseClick={onRemoveSelectedUser}></SelectedUsers>\r\n                <Box className=\"receiver-input-container\">\r\n                    {/* input */}\r\n                    <TextField placeholder=\"Receiver\" ref={inputRef} className=\"receiver-input\" autoFocus={true} onKeyUp={onInputKeyup} onChange={onInputChange} onBlur={onInputBlur} value={inputVal} />\r\n                    {/* LIST */}\r\n                    {(suggestionUsers.length > 0) ? (\r\n                        <SuggestionUsers items={suggestionUsers} onItemClick={onSuggestionUserClick}></SuggestionUsers>\r\n                    ) : null}\r\n                    {/* END LIST */}\r\n                </Box>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\NewChat\\NewChatSlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyAvatarGroup\\MyAvatarGroup.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\friend\\FriendSlice.js",[],{"ruleId":"384","replacedBy":"385"},{"ruleId":"386","replacedBy":"387"},{"ruleId":"388","severity":1,"message":"389","line":2,"column":8,"nodeType":"390","messageId":"391","endLine":2,"endColumn":12},{"ruleId":"388","severity":1,"message":"392","line":5,"column":27,"nodeType":"390","messageId":"391","endLine":5,"endColumn":33},{"ruleId":"388","severity":1,"message":"393","line":26,"column":10,"nodeType":"390","messageId":"391","endLine":26,"endColumn":23},{"ruleId":"394","severity":1,"message":"395","line":81,"column":8,"nodeType":"396","endLine":81,"endColumn":27,"suggestions":"397"},{"ruleId":"394","severity":1,"message":"398","line":87,"column":8,"nodeType":"396","endLine":87,"endColumn":10,"suggestions":"399"},{"ruleId":"388","severity":1,"message":"400","line":17,"column":11,"nodeType":"390","messageId":"391","endLine":17,"endColumn":22},{"ruleId":"388","severity":1,"message":"401","line":21,"column":11,"nodeType":"390","messageId":"391","endLine":21,"endColumn":29},{"ruleId":"388","severity":1,"message":"402","line":1,"column":15,"nodeType":"390","messageId":"391","endLine":1,"endColumn":22},{"ruleId":"394","severity":1,"message":"403","line":41,"column":8,"nodeType":"396","endLine":41,"endColumn":16,"suggestions":"404"},{"ruleId":"388","severity":1,"message":"405","line":3,"column":8,"nodeType":"390","messageId":"391","endLine":3,"endColumn":20},{"ruleId":"388","severity":1,"message":"406","line":7,"column":18,"nodeType":"390","messageId":"391","endLine":7,"endColumn":21},{"ruleId":"388","severity":1,"message":"407","line":10,"column":8,"nodeType":"390","messageId":"391","endLine":10,"endColumn":24},{"ruleId":"388","severity":1,"message":"408","line":1,"column":28,"nodeType":"390","messageId":"391","endLine":1,"endColumn":36},{"ruleId":"388","severity":1,"message":"389","line":2,"column":8,"nodeType":"390","messageId":"391","endLine":2,"endColumn":12},{"ruleId":"388","severity":1,"message":"409","line":3,"column":8,"nodeType":"390","messageId":"391","endLine":3,"endColumn":17},{"ruleId":"388","severity":1,"message":"406","line":4,"column":10,"nodeType":"390","messageId":"391","endLine":4,"endColumn":13},{"ruleId":"388","severity":1,"message":"410","line":4,"column":15,"nodeType":"390","messageId":"391","endLine":4,"endColumn":21},{"ruleId":"388","severity":1,"message":"411","line":19,"column":11,"nodeType":"390","messageId":"391","endLine":19,"endColumn":18},{"ruleId":"394","severity":1,"message":"412","line":28,"column":8,"nodeType":"396","endLine":28,"endColumn":10,"suggestions":"413"},{"ruleId":"394","severity":1,"message":"395","line":43,"column":8,"nodeType":"396","endLine":43,"endColumn":22,"suggestions":"414"},{"ruleId":"388","severity":1,"message":"415","line":12,"column":32,"nodeType":"390","messageId":"391","endLine":12,"endColumn":44},{"ruleId":"388","severity":1,"message":"416","line":6,"column":23,"nodeType":"390","messageId":"391","endLine":6,"endColumn":33},{"ruleId":"388","severity":1,"message":"417","line":17,"column":8,"nodeType":"390","messageId":"391","endLine":17,"endColumn":17},{"ruleId":"388","severity":1,"message":"418","line":21,"column":12,"nodeType":"390","messageId":"391","endLine":21,"endColumn":19},{"ruleId":"388","severity":1,"message":"419","line":21,"column":21,"nodeType":"390","messageId":"391","endLine":21,"endColumn":30},{"ruleId":"384","replacedBy":"420"},{"ruleId":"386","replacedBy":"421"},{"ruleId":"388","severity":1,"message":"408","line":1,"column":28,"nodeType":"390","messageId":"391","endLine":1,"endColumn":36},{"ruleId":"388","severity":1,"message":"411","line":25,"column":11,"nodeType":"390","messageId":"391","endLine":25,"endColumn":18},{"ruleId":"388","severity":1,"message":"389","line":1,"column":15,"nodeType":"390","messageId":"391","endLine":1,"endColumn":19},{"ruleId":"388","severity":1,"message":"422","line":1,"column":30,"nodeType":"390","messageId":"391","endLine":1,"endColumn":40},{"ruleId":"388","severity":1,"message":"423","line":2,"column":27,"nodeType":"390","messageId":"391","endLine":2,"endColumn":30},{"ruleId":"388","severity":1,"message":"424","line":2,"column":32,"nodeType":"390","messageId":"391","endLine":2,"endColumn":38},{"ruleId":"388","severity":1,"message":"425","line":16,"column":8,"nodeType":"390","messageId":"391","endLine":16,"endColumn":15},{"ruleId":"388","severity":1,"message":"418","line":49,"column":12,"nodeType":"390","messageId":"391","endLine":49,"endColumn":19},{"ruleId":"388","severity":1,"message":"426","line":10,"column":10,"nodeType":"390","messageId":"391","endLine":10,"endColumn":21},{"ruleId":"388","severity":1,"message":"427","line":15,"column":10,"nodeType":"390","messageId":"391","endLine":15,"endColumn":24},{"ruleId":"388","severity":1,"message":"428","line":15,"column":26,"nodeType":"390","messageId":"391","endLine":15,"endColumn":70},{"ruleId":"388","severity":1,"message":"429","line":15,"column":72,"nodeType":"390","messageId":"391","endLine":15,"endColumn":93},{"ruleId":"388","severity":1,"message":"430","line":16,"column":8,"nodeType":"390","messageId":"391","endLine":16,"endColumn":23},{"ruleId":"388","severity":1,"message":"431","line":17,"column":10,"nodeType":"390","messageId":"391","endLine":17,"endColumn":20},{"ruleId":"388","severity":1,"message":"432","line":18,"column":8,"nodeType":"390","messageId":"391","endLine":18,"endColumn":14},{"ruleId":"388","severity":1,"message":"433","line":3,"column":8,"nodeType":"390","messageId":"391","endLine":3,"endColumn":21},{"ruleId":"388","severity":1,"message":"434","line":6,"column":8,"nodeType":"390","messageId":"391","endLine":6,"endColumn":16},{"ruleId":"388","severity":1,"message":"435","line":12,"column":11,"nodeType":"390","messageId":"391","endLine":12,"endColumn":18},{"ruleId":"388","severity":1,"message":"411","line":22,"column":11,"nodeType":"390","messageId":"391","endLine":22,"endColumn":18},{"ruleId":"388","severity":1,"message":"436","line":2,"column":5,"nodeType":"390","messageId":"391","endLine":2,"endColumn":9},{"ruleId":"388","severity":1,"message":"437","line":3,"column":5,"nodeType":"390","messageId":"391","endLine":3,"endColumn":15},{"ruleId":"388","severity":1,"message":"438","line":5,"column":5,"nodeType":"390","messageId":"391","endLine":5,"endColumn":15},{"ruleId":"388","severity":1,"message":"408","line":7,"column":28,"nodeType":"390","messageId":"391","endLine":7,"endColumn":36},{"ruleId":"388","severity":1,"message":"439","line":8,"column":8,"nodeType":"390","messageId":"391","endLine":8,"endColumn":20},{"ruleId":"388","severity":1,"message":"440","line":9,"column":8,"nodeType":"390","messageId":"391","endLine":9,"endColumn":15},{"ruleId":"388","severity":1,"message":"441","line":11,"column":8,"nodeType":"390","messageId":"391","endLine":11,"endColumn":16},{"ruleId":"394","severity":1,"message":"442","line":28,"column":8,"nodeType":"396","endLine":28,"endColumn":35,"suggestions":"443"},{"ruleId":"394","severity":1,"message":"444","line":28,"column":17,"nodeType":"445","endLine":28,"endColumn":34},{"ruleId":"394","severity":1,"message":"442","line":48,"column":8,"nodeType":"396","endLine":48,"endColumn":35,"suggestions":"446"},{"ruleId":"394","severity":1,"message":"444","line":48,"column":17,"nodeType":"445","endLine":48,"endColumn":34},{"ruleId":"394","severity":1,"message":"442","line":68,"column":8,"nodeType":"396","endLine":68,"endColumn":35,"suggestions":"447"},{"ruleId":"394","severity":1,"message":"444","line":68,"column":17,"nodeType":"445","endLine":68,"endColumn":34},{"ruleId":"394","severity":1,"message":"448","line":88,"column":8,"nodeType":"396","endLine":88,"endColumn":31,"suggestions":"449"},{"ruleId":"388","severity":1,"message":"450","line":10,"column":13,"nodeType":"390","messageId":"391","endLine":10,"endColumn":17},{"ruleId":"388","severity":1,"message":"425","line":5,"column":8,"nodeType":"390","messageId":"391","endLine":5,"endColumn":15},{"ruleId":"388","severity":1,"message":"451","line":8,"column":20,"nodeType":"390","messageId":"391","endLine":8,"endColumn":30},{"ruleId":"388","severity":1,"message":"425","line":5,"column":8,"nodeType":"390","messageId":"391","endLine":5,"endColumn":15},{"ruleId":"388","severity":1,"message":"451","line":8,"column":20,"nodeType":"390","messageId":"391","endLine":8,"endColumn":30},{"ruleId":"388","severity":1,"message":"452","line":2,"column":8,"nodeType":"390","messageId":"391","endLine":2,"endColumn":14},{"ruleId":"388","severity":1,"message":"432","line":3,"column":8,"nodeType":"390","messageId":"391","endLine":3,"endColumn":14},{"ruleId":"388","severity":1,"message":"453","line":4,"column":8,"nodeType":"390","messageId":"391","endLine":4,"endColumn":16},{"ruleId":"384","replacedBy":"454"},{"ruleId":"386","replacedBy":"455"},{"ruleId":"388","severity":1,"message":"406","line":1,"column":10,"nodeType":"390","messageId":"391","endLine":1,"endColumn":13},{"ruleId":"388","severity":1,"message":"402","line":1,"column":15,"nodeType":"390","messageId":"391","endLine":1,"endColumn":22},{"ruleId":"388","severity":1,"message":"408","line":2,"column":28,"nodeType":"390","messageId":"391","endLine":2,"endColumn":36},{"ruleId":"388","severity":1,"message":"430","line":5,"column":8,"nodeType":"390","messageId":"391","endLine":5,"endColumn":23},{"ruleId":"388","severity":1,"message":"456","line":6,"column":8,"nodeType":"390","messageId":"391","endLine":6,"endColumn":14},{"ruleId":"388","severity":1,"message":"457","line":9,"column":10,"nodeType":"390","messageId":"391","endLine":9,"endColumn":18},{"ruleId":"388","severity":1,"message":"458","line":10,"column":39,"nodeType":"390","messageId":"391","endLine":10,"endColumn":56},{"ruleId":"388","severity":1,"message":"459","line":10,"column":153,"nodeType":"390","messageId":"391","endLine":10,"endColumn":174},{"ruleId":"388","severity":1,"message":"460","line":12,"column":10,"nodeType":"390","messageId":"391","endLine":12,"endColumn":27},{"ruleId":"388","severity":1,"message":"461","line":15,"column":8,"nodeType":"390","messageId":"391","endLine":15,"endColumn":22},{"ruleId":"388","severity":1,"message":"462","line":16,"column":8,"nodeType":"390","messageId":"391","endLine":16,"endColumn":18},{"ruleId":"394","severity":1,"message":"463","line":37,"column":8,"nodeType":"396","endLine":37,"endColumn":38,"suggestions":"464"},{"ruleId":"394","severity":1,"message":"403","line":47,"column":8,"nodeType":"396","endLine":47,"endColumn":27,"suggestions":"465"},{"ruleId":"394","severity":1,"message":"395","line":52,"column":8,"nodeType":"396","endLine":52,"endColumn":24,"suggestions":"466"},{"ruleId":"394","severity":1,"message":"395","line":59,"column":8,"nodeType":"396","endLine":59,"endColumn":10,"suggestions":"467"},{"ruleId":"394","severity":1,"message":"395","line":77,"column":8,"nodeType":"396","endLine":77,"endColumn":29,"suggestions":"468"},{"ruleId":"388","severity":1,"message":"422","line":1,"column":22,"nodeType":"390","messageId":"391","endLine":1,"endColumn":32},{"ruleId":"394","severity":1,"message":"395","line":20,"column":8,"nodeType":"396","endLine":20,"endColumn":10,"suggestions":"469"},{"ruleId":"388","severity":1,"message":"470","line":1,"column":10,"nodeType":"390","messageId":"391","endLine":1,"endColumn":16},{"ruleId":"388","severity":1,"message":"471","line":1,"column":35,"nodeType":"390","messageId":"391","endLine":1,"endColumn":47},{"ruleId":"388","severity":1,"message":"472","line":5,"column":8,"nodeType":"390","messageId":"391","endLine":5,"endColumn":18},{"ruleId":"394","severity":1,"message":"473","line":64,"column":8,"nodeType":"396","endLine":64,"endColumn":47,"suggestions":"474"},{"ruleId":"394","severity":1,"message":"475","line":69,"column":8,"nodeType":"396","endLine":69,"endColumn":19,"suggestions":"476"},"no-native-reassign",["477"],"no-negated-in-lhs",["478"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'useWindowSize' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["479"],"React Hook useEffect has missing dependencies: 'cookies' and 'dispatch'. Either include them or remove the dependency array.",["480"],"'heightStyle' is assigned a value but never used.","'handleAppBarResize' is assigned a value but never used.","'Divider' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["481"],"'ListItemIcon' is defined but never used.","'Box' is defined but never used.","'ConversationLink' is defined but never used.","'useState' is defined but never used.","'SearchBar' is defined but never used.","'Hidden' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'loggedUser._id'. Either include them or remove the dependency array.",["482"],["483"],"'removeCookie' is assigned a value but never used.","'makeStyles' is defined but never used.","'RunAction' is defined but never used.","'cookies' is assigned a value but never used.","'setCookie' is assigned a value but never used.",["477"],["478"],"'Typography' is defined but never used.","'Fab' is defined but never used.","'Button' is defined but never used.","'Message' is defined but never used.","'useDispatch' is defined but never used.","'conversationId' is defined but never used.","'fetchConversationByUserIdsOrCreateIfNotExist' is defined but never used.","'conversationMemberIds' is defined but never used.","'ConversationApi' is defined but never used.","'useHistory' is defined but never used.","'Helper' is defined but never used.","'IconWithBadge' is defined but never used.","'MailIcon' is defined but never used.","'history' is assigned a value but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'IconButton' is defined but never used.","'MoreVertIcon' is defined but never used.","'UserApi' is defined but never used.","'MyAvatar' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'user.friend'. Either include them or remove the dependency array.",["484"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression",["485"],["486"],"React Hook useEffect has missing dependencies: 'dispatch' and 'username'. Either include them or remove the dependency array.",["487"],"'data' is assigned a value but never used.","'updateUser' is defined but never used.","'MyTime' is defined but never used.","'MySocket' is defined but never used.",["477"],["478"],"'Socket' is defined but never used.","'authUser' is defined but never used.","'conversationError' is defined but never used.","'fetchHomeConversation' is defined but never used.","'updateLastMessage' is defined but never used.","'SendMessageBar' is defined but never used.","'UserTyping' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'loggedUserId'. Either include them or remove the dependency array.",["488"],["489"],["490"],["491"],["492"],["493"],"'Avatar' is defined but never used.","'ListItemText' is defined but never used.","'FolderIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'mounted'. Either include it or remove the dependency array.",["494"],"React Hook useEffect has a missing dependency: 'onFriendIdSelected'. Either include it or remove the dependency array. If 'onFriendIdSelected' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["495"],"no-global-assign","no-unsafe-negation",{"desc":"496","fix":"497"},{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"506","fix":"508"},{"desc":"506","fix":"509"},{"desc":"510","fix":"511"},{"desc":"512","fix":"513"},{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"518","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},"Update the dependencies array to be: [user._id, convoId, dispatch]",{"range":"527","text":"528"},"Update the dependencies array to be: [cookies, dispatch]",{"range":"529","text":"530"},"Update the dependencies array to be: [history, params]",{"range":"531","text":"532"},"Update the dependencies array to be: [dispatch, loggedUser._id]",{"range":"533","text":"534"},"Update the dependencies array to be: [convoId, dispatch, ids]",{"range":"535","text":"536"},"Update the dependencies array to be: [dispatch, status, user.friend]",{"range":"537","text":"538"},{"range":"539","text":"538"},{"range":"540","text":"538"},"Update the dependencies array to be: [dispatch, status, user.username, username]",{"range":"541","text":"542"},"Update the dependencies array to be: [receiver._id, newChatEnabled, dispatch, loggedUserId]",{"range":"543","text":"544"},"Update the dependencies array to be: [status, convo._id, history]",{"range":"545","text":"546"},"Update the dependencies array to be: [conversationId, dispatch]",{"range":"547","text":"548"},"Update the dependencies array to be: [dispatch]",{"range":"549","text":"550"},"Update the dependencies array to be: [messages, convo._id, dispatch]",{"range":"551","text":"552"},{"range":"553","text":"550"},"Update the dependencies array to be: [receiverName, receivers, loggedUserId, mounted]",{"range":"554","text":"555"},"Update the dependencies array to be: [onFriendIdSelected, receivers]",{"range":"556","text":"557"},[3805,3824],"[user._id, convoId, dispatch]",[3978,3980],"[cookies, dispatch]",[1411,1419],"[history, params]",[1366,1368],"[dispatch, loggedUser._id]",[1928,1942],"[convoId, dispatch, ids]",[1080,1107],"[dispatch, status, user.friend]",[1672,1699],[2250,2277],[2841,2864],"[dispatch, status, user.username, username]",[1921,1951],"[receiver._id, newChatEnabled, dispatch, loggedUserId]",[2270,2289],"[status, convo._id, history]",[2434,2450],"[conversationId, dispatch]",[2566,2568],"[dispatch]",[3096,3117],"[messages, convo._id, dispatch]",[697,699],[2544,2583],"[receiverName, receivers, loggedUserId, mounted]",[2733,2744],"[onFriendIdSelected, receivers]"]