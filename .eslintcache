[{"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\index.js":"1","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\App.js":"2","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Slt.js":"3","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\styles\\MainStyles.js":"4","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\Chat.js":"5","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\store.js":"6","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\ChatSlice.js":"7","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\Notify.js":"8","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\NotifySlice.js":"9","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\auth\\authSlice.js":"10","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Message.js":"11","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\CookieName.js":"12","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Helper.js":"13","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\GeneralSlices\\themeSlice.js":"14","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatBox\\ChatBox.js":"15","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationItem\\ConversationItem.js":"16","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationList\\ConversationList.js":"17","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\DayNightSwitch\\DayNightSwitch.js":"18","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Header\\Header.js":"19","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\PrivateRoute\\PrivateRoute.js":"20","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SearchBar\\SearchBar.js":"21","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Toolbar\\ToolbarTitle.js":"22","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Messages\\Messages.js":"23","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyAvatar\\MyAvatar.js":"24","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Message\\Message.js":"25","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SendingInput\\SendingInput.js":"26","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignIn\\SignIn.js":"27","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket.js":"28","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\OnlineUser\\OnlineUsers.js":"29","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Config.js":"30","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\IconWithBadge.js":"31","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Notifications\\Notifications.js":"32","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Friends\\Friends.js":"33","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\AppTitle\\AppTitle.js":"34","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyTabPanel\\MyTabPanel.js":"35","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignUp\\SignUp.js":"36","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\AuthRoute\\AuthRoute.js":"37","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\https\\UserApi.js":"38","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\configs\\FormErrors.js":"39","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\validates\\UserValidates.js":"40","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\MyTime.js":"41","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\RouterLink\\RouterLink.js":"42","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\UserTyping\\UserTyping.js":"43","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatNotification\\ChatNotification.js":"44","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendBox\\FriendBox.js":"45","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\RunAction\\RunAction.js":"46","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\SentRequestAction.js":"47","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\RequestAction.js":"48","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\StrangerAction.js":"49","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendList\\FriendList.js":"50","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Loading\\Loading.js":"51","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\FriendAction.js":"52","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket\\MySocket.js":"53","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket\\SocketEventName.js":"54","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\https\\ConversationApi.js":"55","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\HomeConversationItem\\HomeConversationItem.js":"56","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SendMessageBar\\SendMessageBar.js":"57","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\NormalChat\\NormalChat.js":"58","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationLink\\ConversationLink.js":"59","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\sidebarConversations\\SidebarConversationsSlice.js":"60"},{"size":493,"mtime":1614583917314,"results":"61","hashOfConfig":"62"},{"size":5236,"mtime":1614617102096,"results":"63","hashOfConfig":"62"},{"size":70,"mtime":1612414967612,"results":"64","hashOfConfig":"62"},{"size":1249,"mtime":1614592911007,"results":"65","hashOfConfig":"62"},{"size":1810,"mtime":1614591895485,"results":"66","hashOfConfig":"62"},{"size":595,"mtime":1614614195405,"results":"67","hashOfConfig":"62"},{"size":2684,"mtime":1614613357203,"results":"68","hashOfConfig":"62"},{"size":1944,"mtime":1613918885316,"results":"69","hashOfConfig":"62"},{"size":1056,"mtime":1612841908030,"results":"70","hashOfConfig":"62"},{"size":2530,"mtime":1614614340708,"results":"71","hashOfConfig":"62"},{"size":479,"mtime":1614617043188,"results":"72","hashOfConfig":"62"},{"size":40,"mtime":1612840227225,"results":"73","hashOfConfig":"62"},{"size":1788,"mtime":1614583292210,"results":"74","hashOfConfig":"62"},{"size":418,"mtime":1612880252791,"results":"75","hashOfConfig":"62"},{"size":1395,"mtime":1614590277855,"results":"76","hashOfConfig":"62"},{"size":2072,"mtime":1614616484789,"results":"77","hashOfConfig":"62"},{"size":1976,"mtime":1614615921944,"results":"78","hashOfConfig":"62"},{"size":1304,"mtime":1612965343460,"results":"79","hashOfConfig":"62"},{"size":3158,"mtime":1614614468661,"results":"80","hashOfConfig":"62"},{"size":802,"mtime":1613986641897,"results":"81","hashOfConfig":"62"},{"size":366,"mtime":1612928465435,"results":"82","hashOfConfig":"62"},{"size":315,"mtime":1612928481171,"results":"83","hashOfConfig":"62"},{"size":1933,"mtime":1614614523330,"results":"84","hashOfConfig":"62"},{"size":1695,"mtime":1613703432162,"results":"85","hashOfConfig":"62"},{"size":1420,"mtime":1614140303317,"results":"86","hashOfConfig":"62"},{"size":2839,"mtime":1614616982411,"results":"87","hashOfConfig":"62"},{"size":6603,"mtime":1613980644592,"results":"88","hashOfConfig":"62"},{"size":292,"mtime":1612932563194,"results":"89","hashOfConfig":"62"},{"size":2939,"mtime":1614614523330,"results":"90","hashOfConfig":"62"},{"size":51,"mtime":1612966358545,"results":"91","hashOfConfig":"62"},{"size":678,"mtime":1613232820573,"results":"92","hashOfConfig":"62"},{"size":709,"mtime":1613232882320,"results":"93","hashOfConfig":"62"},{"size":2586,"mtime":1613980719494,"results":"94","hashOfConfig":"62"},{"size":203,"mtime":1613980596026,"results":"95","hashOfConfig":"62"},{"size":630,"mtime":1613359617978,"results":"96","hashOfConfig":"62"},{"size":6691,"mtime":1613980644592,"results":"97","hashOfConfig":"62"},{"size":667,"mtime":1613986641898,"results":"98","hashOfConfig":"62"},{"size":2574,"mtime":1613986291296,"results":"99","hashOfConfig":"62"},{"size":275,"mtime":1613536646878,"results":"100","hashOfConfig":"62"},{"size":2709,"mtime":1613620423707,"results":"101","hashOfConfig":"62"},{"size":1039,"mtime":1613704781597,"results":"102","hashOfConfig":"62"},{"size":221,"mtime":1614071800029,"results":"103","hashOfConfig":"62"},{"size":1562,"mtime":1613980644593,"results":"104","hashOfConfig":"62"},{"size":828,"mtime":1613981843996,"results":"105","hashOfConfig":"62"},{"size":4662,"mtime":1614614468661,"results":"106","hashOfConfig":"62"},{"size":608,"mtime":1614614523330,"results":"107","hashOfConfig":"62"},{"size":978,"mtime":1614614468661,"results":"108","hashOfConfig":"62"},{"size":1477,"mtime":1614614523330,"results":"109","hashOfConfig":"62"},{"size":1045,"mtime":1614614468661,"results":"110","hashOfConfig":"62"},{"size":2841,"mtime":1614614523330,"results":"111","hashOfConfig":"62"},{"size":221,"mtime":1613832531156,"results":"112","hashOfConfig":"62"},{"size":2420,"mtime":1614614468661,"results":"113","hashOfConfig":"62"},{"size":4284,"mtime":1614587604481,"results":"114","hashOfConfig":"62"},{"size":936,"mtime":1614403149659,"results":"115","hashOfConfig":"62"},{"size":1450,"mtime":1614614852772,"results":"116","hashOfConfig":"62"},{"size":438,"mtime":1614071616523,"results":"117","hashOfConfig":"62"},{"size":250,"mtime":1614581085390,"results":"118","hashOfConfig":"62"},{"size":2995,"mtime":1614616780229,"results":"119","hashOfConfig":"62"},{"size":1250,"mtime":1614614468740,"results":"120","hashOfConfig":"62"},{"size":2019,"mtime":1614616136324,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1lgxsql",{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"124"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"124"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"124"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"124"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"124"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"124"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"124"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"124"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"124"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"124"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"124"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"124"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"124"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"124"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"124"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"124"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"124"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\index.js",[],["262","263"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\App.js",["264","265"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Slt.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\styles\\MainStyles.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\Chat.js",["266","267"],"import React, { useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { useEffect } from 'react'\r\nimport Slt from '../../defines/Slt'\r\nimport ConversationList from '../../components/ConversationList/ConversationList'\r\nimport ChatBox from '../../components/ChatBox/ChatBox'\r\nimport OnlineUsers from '../../components/OnlineUser/OnlineUsers'\r\nimport useStyles from '../../defines/styles/MainStyles'\r\nimport { Box } from '@material-ui/core'\r\n\r\nexport default function Chat() {\r\n    const classes = useStyles();\r\n    const [appBarHeight,\r\n        setAppBarHeight] = useState(0);\r\n\r\n    // HANDLE HEIGHT\r\n    const heightStyle = {\r\n        height: `calc(100vh - ${appBarHeight}px)`\r\n    }\r\n\r\n    const handleAppBarResize = () => {\r\n        let height = document\r\n            .getElementById(Slt.mainAppBar)\r\n            .clientHeight;\r\n        setAppBarHeight(height);\r\n    }\r\n\r\n    // HANDLE APP BAR RESIZE\r\n    useEffect(() => {\r\n        //handleAppBarResize();\r\n        //window.addEventListener('resize', handleAppBarResize)\r\n    }, []);\r\n\r\n    // DISPLAY LATEST CONVERSATION\r\n\r\n    return (\r\n        <Box p={2}>\r\n            <Grid container >\r\n                <Grid container item xs={12}  spacing={2}>\r\n                    <Grid item xs={2} md={3} className={`${classes.borderRight500} `}>\r\n                        <ConversationList></ConversationList>\r\n                    </Grid>\r\n                    <Grid item xs={8} md={7}>\r\n                        <ChatBox>\r\n                            Loading...\r\n                    </ChatBox>\r\n                    </Grid>\r\n                    <Grid item xs={2} className={`${classes.borderLeft500} `}>\r\n                        <OnlineUsers />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\store.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\ChatSlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\Notify.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\NotifySlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\auth\\authSlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Message.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\CookieName.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Helper.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\GeneralSlices\\themeSlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatBox\\ChatBox.js",["268"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport NormalChat from '../NormalChat/NormalChat';\r\n\r\n\r\nexport default function ChatBox({ children }) {\r\n    const [loaded] = useState(true);\r\n    const params = useParams();\r\n    const history = useHistory();\r\n    const [display, setDisplay] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const { type, conversationId } = params;\r\n        if (type) {\r\n            switch (type) {\r\n                case 't':\r\n                    if (!conversationId) history.replace('/chat');\r\n                    setDisplay('chat');\r\n                    break;\r\n                case 'new':\r\n                    if (conversationId) history.replace('/chat/new');\r\n                    setDisplay('new');\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        } else {\r\n            //home chat\r\n            setDisplay('chat');\r\n\r\n        }\r\n        return () => {\r\n        }\r\n    }, [params])\r\n\r\n    const mainHtml = (\r\n        <React.Fragment >\r\n            {\r\n                display === 'chat'\r\n                    ?\r\n                    <NormalChat></NormalChat>\r\n                    : null\r\n            }\r\n        </React.Fragment >\r\n    )\r\n\r\n    return (\r\n        <React.Fragment> { loaded ? mainHtml : children} </React.Fragment>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationItem\\ConversationItem.js",["269","270"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationList\\ConversationList.js",["271","272","273"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\DayNightSwitch\\DayNightSwitch.js",["274"],"import React, { useEffect } from 'react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DayIcon from '@material-ui/icons/Brightness7';\r\nimport NightIcon from '@material-ui/icons/Brightness4';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { switchThemeType } from '../../GeneralSlices/themeSlice';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nexport default function DayNightSwitch() {\r\n    const theme = useSelector((state) => { return state.theme });\r\n    const dispatch = useDispatch();\r\n    const [cookies, setCookie, removeCookie] = useCookies(['theme'])\r\n\r\n    useEffect(() => {\r\n        if (cookies.theme) {\r\n            if (cookies.theme.type) {\r\n                if (cookies.theme.type !== theme.type) {\r\n                    dispatch(switchThemeType());\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    const onSwitch = () => {\r\n        let cookieValue = { ...theme, type: theme.type === 'light' ? 'dark' : 'light', };\r\n        setCookie('theme', JSON.stringify(cookieValue));\r\n        dispatch(switchThemeType());\r\n    }\r\n\r\n    return (\r\n        <IconButton aria-label=\"Day / night toggle\" onClick={onSwitch} color=\"inherit\">\r\n            {(theme.type === 'light') ? <NightIcon></NightIcon> : <DayIcon></DayIcon>}\r\n        </IconButton>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Header\\Header.js",["275","276","277"],"import React from 'react'\r\nimport MyAvatar from '../MyAvatar/MyAvatar';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Slt from '../../defines/Slt'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { isLogged, loggedUser, status } from '../../features/auth/authSlice'\r\nimport { signOut } from '../../features/auth/authSlice';\r\nimport { useCookies } from 'react-cookie'\r\nimport DayNightSwitch from '../DayNightSwitch/DayNightSwitch'\r\nimport Notifications from '../Notifications/Notifications';\r\nimport RunAction from '../RunAction/RunAction';\r\n\r\nexport default function Header(props) {\r\n    const [cookies, setCookie, removeCookie] = useCookies('loggedUser');\r\n    const user = useSelector(loggedUser);\r\n    const dispatch = useDispatch();\r\n    const logged = useSelector(isLogged);\r\n    const authStatus = useSelector(status);\r\n    const location = useLocation();\r\n    const pathName = location.pathname;\r\n    const history = useHistory();\r\n\r\n    const onSignout = () => {\r\n        removeCookie('loggedUser');\r\n        dispatch(signOut());\r\n        history.push('/');\r\n    }\r\n\r\n    const toolsHtml = (\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Box mr={4}>\r\n                {logged\r\n                    ? <Notifications></Notifications>\r\n                    : null\r\n                }\r\n            </Box>\r\n            <RunAction></RunAction>\r\n            <DayNightSwitch></DayNightSwitch>\r\n            {(logged)\r\n                ? (\r\n                    <MyAvatar name={user.name} single={user.single} picture={user.picture}></MyAvatar>\r\n                )\r\n                : null}\r\n            <Button\r\n                disabled={pathName === '/login'}\r\n                startIcon={(!logged)\r\n                    ? <PersonIcon></PersonIcon>\r\n                    : null}\r\n                color=\"inherit\"\r\n                onClick={() => {\r\n                    onSignout();\r\n                }}>\r\n                <Typography >{(logged)\r\n                    ? 'Sign out'\r\n                    : 'Sign in'}</Typography>\r\n            </Button>\r\n        </Box>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" color=\"primary\" id={Slt.mainAppBar}>\r\n                <Toolbar\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between'\r\n                    }}>\r\n                    <Typography variant=\"h6\">\r\n                        <Link to=\"/chat\" color=\"inherit\" style={{ color: 'white', textDecoration: 'none' }}>\r\n                            Messenger\r\n                        </Link>\r\n                    </Typography>\r\n                    {(authStatus !== 'loading') ? toolsHtml : null}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\PrivateRoute\\PrivateRoute.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SearchBar\\SearchBar.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Toolbar\\ToolbarTitle.js",[],["278","279"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Messages\\Messages.js",["280"],"import React, { useEffect, useState } from 'react'\r\nimport { Box, List, Typography } from '@material-ui/core'\r\nimport Message from '../Message/Message'\r\nimport mainStyle from '../../defines/styles/MainStyles'\r\nimport { useSelector } from 'react-redux';\r\nimport { loggedUser } from '../../features/auth/authSlice';\r\nimport ChatNotification from '../ChatNotification/ChatNotification';\r\n\r\nconst emptyHtml = (\r\n    <React.Fragment>\r\n        <Box mt={4}>\r\n            <Typography className=\"text-muted\" align=\"center\" >Let's start a conversation.</Typography>\r\n        </Box>\r\n    </React.Fragment>\r\n)\r\n\r\nconst scroll = () => {\r\n    let container = document.getElementById('my-messages-container');\r\n    container.scrollTop = container.scrollHeight;\r\n}\r\n\r\nexport default function Messages({ messages }) {\r\n    const classes = mainStyle();\r\n    const user = useSelector(loggedUser);\r\n\r\n    // messages\r\n    const messagesHtml = messages.map((item, index) => {\r\n        if (item.from) {\r\n            let notShowAvatar = false;\r\n            if (index < messages.length - 1) {\r\n                const nextItem = messages[index + 1];\r\n                notShowAvatar = (nextItem.type === 'message') ? nextItem.from.username === item.from.username : false;\r\n            }\r\n            return <Message notShowAvatar={notShowAvatar} ownMessage={item.from.username === user.username} key={index} user={item.from} message={item.text} time={item.time}></Message>\r\n        } else {\r\n            return <ChatNotification key={index} username={item.user.username} type={item.type}></ChatNotification>\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        scroll();\r\n    }, [messages])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <List className={`${classes.messageArea} custom-scrollbar`} id=\"my-messages-container\" >\r\n                {messagesHtml.length > 0 ? messagesHtml : emptyHtml}\r\n            </List>\r\n        </React.Fragment >\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyAvatar\\MyAvatar.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Message\\Message.js",["281","282"],"import { Box, Grid, Tooltip, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MyAvatar from '../MyAvatar/MyAvatar';\r\nimport MyTime from '../../defines/MyTime';\r\n\r\nexport default function Message({ notShowAvatar, ownMessage, time, user, message }) {\r\n    const avatar = !notShowAvatar ? (<MyAvatar sizeInPixel={20} name={user.username} picture={user.picture}></MyAvatar>) : null;\r\n    const position = (ownMessage) ? 'right' : 'left';\r\n    const flexPos = (ownMessage) ? 'flex-end' : 'flex-start';\r\n    const placement = (ownMessage) ? 'bottom-start' : 'bottom-end';\r\n    return (\r\n        <ListItem key=\"1\">\r\n            <Box width=\"100%\" style={{ display: 'flex', justifyContent: flexPos, alignItems: 'flex-end' }}>\r\n                {/* AVATAR */}\r\n                {!ownMessage ? avatar : null}\r\n\r\n                {/* MESSAGE AND TIME */}\r\n                <Box className={`message ${position}-message ${!ownMessage && notShowAvatar ? 'ml-avatar' : ''}`}>\r\n                    <Tooltip title={MyTime.getMessageTimeString(MyTime.getCurrentTimeByUTCTime(time))} placement={placement}>\r\n                        <ListItemText align={position} primary={message} ></ListItemText>\r\n                    </Tooltip>\r\n                </Box>\r\n            </Box>\r\n\r\n        </ListItem>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SendingInput\\SendingInput.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignIn\\SignIn.js",["283","284"],"import React, { useState, } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setNotify } from '../../features/notify/NotifySlice';\r\nimport { isLogged, loginThunk, status, authError } from '../../features/auth/authSlice';\r\nimport { useCookies } from 'react-cookie';\r\nimport Helper from '../../defines/Helper'\r\nimport { LOGGED_USER } from '../../defines/CookieName';\r\nimport Message from '../../defines/Message';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Box } from '@material-ui/core';\r\nimport FormErrors from '../../defines/configs/FormErrors';\r\nimport RouterLink from '../RouterLink/RouterLink';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    }\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const dispatch = useDispatch();\r\n    const [isSubmitClicked, setSubmitClicked] = useState(false);\r\n\r\n    // SELECTOR\r\n    const logged = useSelector(isLogged);\r\n    const [cookies, setCookie] = useCookies([LOGGED_USER]);\r\n\r\n    const authStatus = useSelector(status);\r\n    const authErr = useSelector(authError);\r\n\r\n    const classes = useStyles();\r\n    if (isSubmitClicked) {\r\n        if (authStatus === 'succeeded' && authErr)\r\n            dispatch(setNotify({ message: 'Login unsuccessfully', type: 'error', open: true }))\r\n    } else {\r\n        if (authStatus === 'loading') return null;\r\n    }\r\n\r\n    const mainHtml = (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                    </Typography>\r\n\r\n                {/* FORMIK */}\r\n                <Formik\r\n                    initialValues={{\r\n                        username: '',\r\n                        password: '',\r\n                        passwordConfirmation: ''\r\n                    }}\r\n                    validationSchema={yup.object({\r\n                        username: yup.string().required(Helper.format(FormErrors.required, 'Username')),\r\n                        password: yup.string().required(Helper.format(FormErrors.required, 'Password')),\r\n                    })}\r\n                    onSubmit={async (values, { setSubmitting }) => {\r\n                        const { username, password } = values;\r\n                        let user = {\r\n                            username,\r\n                            password\r\n                        };\r\n                        setSubmitClicked(true);\r\n                        dispatch(loginThunk(user));\r\n                        setCookie(LOGGED_USER, user);\r\n                        //alert(JSON.stringify(values));\r\n                    }}>\r\n                    {({\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isSubmitting,\r\n                        isValid,\r\n                        dirty,\r\n                        /* and other goodies */\r\n                    }) => {\r\n                        const showErrors = {};\r\n                        for (let key in errors) {\r\n                            showErrors[key] = (errors[key] != null) && touched[key];\r\n                        }\r\n                        const props = (field, label) => {\r\n                            label = label || Helper.ucFirst(field);\r\n                            return {\r\n                                fullWidth: true,\r\n                                margin: 'normal',\r\n                                placeholder: label,\r\n                                variant: 'outlined',\r\n                                name: field,\r\n                                onChange: handleChange,\r\n                                onBlur: handleBlur,\r\n                                value: values[label],\r\n                                label: label,\r\n                                error: (showErrors[field]),\r\n                                helperText: (showErrors[field])\r\n                                    ? errors[field]\r\n                                    : null\r\n                            }\r\n                        }\r\n                        return (\r\n                            <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n                                <TextField autoFocus={true} type=\"text\" {...props('username')} />\r\n                                <TextField type=\"password\" {...props('password')} />\r\n                                <RouterLink to=\"/sign-up\">\r\n                                    <Typography color=\"primary\" >\r\n                                        Create an account\r\n                                        </Typography>\r\n                                </RouterLink>\r\n                                <Box mt={2}>\r\n                                    <Button\r\n                                        disabled={isSubmitting || !isValid || !dirty}\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    > Sign In\r\n                                    </Button>\r\n                                </Box>\r\n                            </form>\r\n                        )\r\n                    }}\r\n                </Formik>\r\n                {/* END FORMIK */}\r\n\r\n            </div>\r\n        </Container>\r\n    )\r\n\r\n    return (!logged ? mainHtml : (null));\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\OnlineUser\\OnlineUsers.js",["285","286","287","288","289","290","291"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Config.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\IconWithBadge.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Notifications\\Notifications.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Friends\\Friends.js",["292"],"import React, { useEffect} from 'react';\r\nimport './Friends.css';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport AppTitle from '../AppTitle/AppTitle';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport FriendBox from '../FriendBox/FriendBox';\r\nimport OnlineUsers from '../OnlineUser/OnlineUsers';\r\nimport mainStyles from '../../defines/styles/MainStyles';\r\nimport { Box } from '@material-ui/core';\r\n\r\n\r\nfunction a11yProps(index) {\r\n    return { id: `simple-tab-${index}`, 'aria-controls': `simple-tabpanel-${index}` };\r\n}\r\n\r\nconst friendTabs = ['friends_all', 'friends_request', 'friends_sent_request', 'people_may_know'];\r\n\r\nexport default function Friends() {\r\n    const classes = mainStyles();\r\n    const [value,\r\n        setValue] = React.useState(0);\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        let tab = params.friendsTab;\r\n        let index = friendTabs.indexOf(tab);\r\n        index = index < 0 ? 0 : index;\r\n        setValue(index);\r\n    }, [params.friendsTab])\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        let tab = friendTabs[newValue];\r\n        history.push(`/${tab}`);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box p={2} >\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={9} >\r\n                        <AppTitle title=\"Friends\"></AppTitle>\r\n                        <Box mt={1}>\r\n                            <AppBar position=\"static\" color=\"default\">\r\n                                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" indicatorColor=\"primary\" className=\"my-tabs\" scrollButtons=\"auto\" variant=\"scrollable\">\r\n                                    <Tab label=\"All Friends\" {...a11yProps(0)} />\r\n                                    <Tab label=\"Friend Requests\" {...a11yProps(1)} />\r\n                                    <Tab label=\"Sent Requests\" {...a11yProps(2)} />\r\n                                    <Tab label=\"People you may know\" {...a11yProps(3)} />\r\n                                </Tabs>\r\n                            </AppBar>\r\n                            <FriendBox type={friendTabs[value]}></FriendBox>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={3} ><OnlineUsers /> </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\AppTitle\\AppTitle.js",["293"],"import { Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nexport default function AppTitle({ title }) {\r\n    return (\r\n        <Typography variant=\"h5\">{title}</Typography>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyTabPanel\\MyTabPanel.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignUp\\SignUp.js",["294","295","296","297","298","299"],"import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link, Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setNotify } from '../../features/notify/NotifySlice';\r\nimport { isLogged, login, loginThunk, status } from '../../features/auth/authSlice';\r\nimport Helper from '../../defines/Helper'\r\nimport { Formik } from 'formik';\r\nimport UserApi from '../../defines/https/UserApi';\r\nimport * as yup from 'yup';\r\nimport UserValidates from '../../defines/validates/UserValidates';\r\nimport Message from '../../defines/Message';\r\nimport { Box } from '@material-ui/core';\r\nimport RouterLink from '../RouterLink/RouterLink';\r\n\r\nlet timeoutObj;\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1)\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const dispatch = useDispatch();\r\n    const [username, setUsername] = useState({ value: '', unique: false });\r\n\r\n    // SELECTOR\r\n    const logged = useSelector(isLogged);\r\n    const authStatus = useSelector(status);\r\n    const classes = useStyles();\r\n\r\n    if (authStatus === 'loading')\r\n        return null;\r\n\r\n    return (!logged\r\n        ? (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">Sign Up</Typography>\r\n                    <Formik\r\n                        initialValues={{\r\n                            username: '',\r\n                            password: '',\r\n                            passwordConfirmation: ''\r\n                        }}\r\n                        validationSchema={yup.object({\r\n                            username: UserValidates.username(username, setUsername, timeoutObj),\r\n                            password: UserValidates.password(),\r\n                            passwordConfirmation: UserValidates.passwordConfirmation(),\r\n                        })}\r\n                        onSubmit={async (values, { setSubmitting }) => {\r\n                            const { username, password } = values;\r\n                            let data = await UserApi.createAccount(username, password);\r\n                            if (data.status === 'succeeded') {\r\n                                const user = data.payload;\r\n                                dispatch(setNotify({ message: Helper.format(Message.welcomeNewAccount, user.username) }));\r\n                                dispatch(login(user));\r\n                            } else {\r\n                                setSubmitting(false);\r\n                            }\r\n                        }}>\r\n                        {({\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            handleSubmit,\r\n                            isSubmitting,\r\n                            isValid,\r\n                            dirty\r\n                            /* and other goodies */\r\n                        }) => {\r\n                            const showErrors = {};\r\n                            for (let key in errors) {\r\n                                showErrors[key] = (errors[key] != null) && touched[key];\r\n                            }\r\n                            const props = (field, label) => {\r\n                                label = label || Helper.ucFirst(field);\r\n                                return {\r\n                                    fullWidth: true,\r\n                                    margin: 'normal',\r\n                                    placeholder: label,\r\n                                    variant: 'outlined',\r\n                                    name: field,\r\n                                    onChange: handleChange,\r\n                                    onBlur: handleBlur,\r\n                                    value: values[label],\r\n                                    label: label,\r\n                                    error: (showErrors[field]),\r\n                                    helperText: (showErrors[field])\r\n                                        ? errors[field]\r\n                                        : null\r\n                                }\r\n                            }\r\n                            return (\r\n                                <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n                                    <TextField type=\"text\" {...props('username')} />\r\n                                    <TextField type=\"password\" {...props('password')} />\r\n                                    <TextField type=\"password\" {...props('passwordConfirmation', 'Password confirmation')} />\r\n                                    <RouterLink to=\"/signin\">\r\n                                        <Typography color=\"primary\" >\r\n                                            Have an account?\r\n                                        </Typography>\r\n                                    </RouterLink>\r\n                                    <Box mt={2}\r\n                                    >\r\n                                        <Button\r\n                                            disabled={isSubmitting || !isValid || !dirty}\r\n                                            type=\"submit\"\r\n                                            fullWidth\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                        > Sign Up </Button>\r\n                                    </Box>\r\n                                </form>\r\n                            )\r\n                        }}\r\n                    </Formik>\r\n                </div>\r\n            </Container >\r\n        )\r\n        : (null));\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\AuthRoute\\AuthRoute.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\https\\UserApi.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\configs\\FormErrors.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\validates\\UserValidates.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\MyTime.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\RouterLink\\RouterLink.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\UserTyping\\UserTyping.js",["300"],"import { Paper, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport MySocket from '../../defines/Socket/MySocket'\r\nimport Socket from '../../defines/Socket'\r\nimport MyAvatar from '../MyAvatar/MyAvatar';\r\nimport SocketEventName from '../../defines/Socket/SocketEventName';\r\n\r\nexport default function UserTyping() {\r\n    const [typingUsers, setTypingUsers] = useState([]);\r\n    useEffect(() => {\r\n        MySocket.onTyping((data) => {\r\n            setTypingUsers(typingUsers.concat(data.user));\r\n        })\r\n        MySocket.onStopTyping((data) => {\r\n            setTypingUsers(typingUsers.filter((user) => {\r\n                return user.username !== data.username;\r\n            }));\r\n        })\r\n        return () => {\r\n            Socket.off(SocketEventName.typing);\r\n            Socket.off(SocketEventName.stopTyping);\r\n        }\r\n    })\r\n\r\n    const typingHtml = typingUsers.map((user) => {\r\n        return (\r\n            <div key={user._id}>\r\n                <div style={{ display: 'flex', alignItems: 'flex-start', }}>\r\n                    <span>\r\n                        <MyAvatar name={user.username} picture={user.picture}> </MyAvatar>\r\n                    </span>\r\n                    <img className=\"typing-icon\" src={`${process.env.PUBLIC_URL}/images/icons/typing-icon.gif`} alt=\"typing\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <Paper elevation={0} style={{ minWidth: '200px' }}>\r\n            {(typingHtml.length > 0 ? typingHtml : null)}\r\n        </Paper>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatNotification\\ChatNotification.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendBox\\FriendBox.js",["301","302","303","304","305"],"import {\r\n    Card,\r\n    CardHeader,\r\n    Grid,\r\n    IconButton,\r\n} from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport UserApi from '../../defines/https/UserApi';\r\nimport { isLogged, loggedUser } from '../../features/auth/authSlice';\r\nimport MyAvatar from '../MyAvatar/MyAvatar'\r\nimport FriendList from '../FriendList/FriendList';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AllFriendList = () => {\r\n    const [items,\r\n        setItems] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const user = useSelector(loggedUser);\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const data = await UserApi.findUsersByIds(user.friend.friend);\r\n                if (data.status === 'succeeded')\r\n                    setItems(data.payload);\r\n                setLoading(false);\r\n            }\r\n            catch (e) { }\r\n        }\r\n        if (user.friend.friend.length > 0) {\r\n            fetchItems();\r\n        } else {\r\n            setItems([]);\r\n            setLoading(false);\r\n        }\r\n    }, [user.friend.friend])\r\n\r\n    return (\r\n        <FriendList items={items} type=\"friend\" isLoading={isLoading}></FriendList>\r\n    );\r\n}\r\n\r\nconst SentRequestList = () => {\r\n    const [items,\r\n        setItems] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const user = useSelector(loggedUser);\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const data = await UserApi.findUsersByIds(user.friend.sent_request);\r\n                if (data.status === 'succeeded')\r\n                    setItems(data.payload);\r\n                setLoading(false);\r\n            }\r\n            catch (e) { }\r\n        }\r\n        if (user.friend.sent_request.length > 0) {\r\n            fetchItems();\r\n        } else {\r\n            setLoading(false);\r\n            setItems([]);\r\n        }\r\n    }, [user.friend.sent_request]);\r\n    return (\r\n        <FriendList items={items} type='sent_request' isLoading={isLoading}></FriendList>\r\n    )\r\n}\r\n\r\nconst RequestList = () => {\r\n    const [items,\r\n        setItems] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const user = useSelector(loggedUser);\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const data = await UserApi.findUsersByIds(user.friend.request);\r\n                if (data.status === 'succeeded')\r\n                    setItems(data.payload);\r\n            }\r\n            catch (e) { }\r\n        }\r\n        if (user.friend.request.length > 0) {\r\n            fetchItems();\r\n        } else {\r\n            setItems([]);\r\n            setLoading(false);\r\n        }\r\n        setLoading(false);\r\n    }, [user.friend.request]);\r\n    return (\r\n        <FriendList items={items} type='request' isLoading={isLoading}></FriendList>\r\n    )\r\n}\r\n\r\nconst PeopleMayKnowList = ({ username }) => {\r\n    const [items,\r\n        setItems] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const data = await UserApi.findStrangerByUsername(username);\r\n                if (data.status === 'succeeded')\r\n                    setItems(data.payload);\r\n                setLoading(false);\r\n            }\r\n            catch (e) { }\r\n        }\r\n        fetchItems();\r\n    }, [username]);\r\n    return (\r\n        <FriendList items={items} isLoading={isLoading}></FriendList>\r\n    )\r\n}\r\n\r\nexport default function FriendBox({ type }) {\r\n    let itemsHtml = null;\r\n    const logged = useSelector(isLogged);\r\n    const user = useSelector(loggedUser);\r\n    if (logged) {\r\n        switch (type) {\r\n            case 'friends_request':\r\n                itemsHtml = <RequestList username={user.username}></RequestList>\r\n                break;\r\n            case 'friends_sent_request':\r\n                itemsHtml = <SentRequestList username={user.username}></SentRequestList>\r\n                break;\r\n            case 'people_may_know':\r\n                itemsHtml = <PeopleMayKnowList username={user.username}></PeopleMayKnowList>\r\n                break;\r\n            default:\r\n                itemsHtml = <AllFriendList username={user.username}></AllFriendList>\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid style={{\r\n            paddingTop: '8px',\r\n            maxHeight: '500px',\r\n            overflowY: 'auto',\r\n        }} className=\"custom-scrollbar\" container spacing={2} >{itemsHtml}</Grid>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\RunAction\\RunAction.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\SentRequestAction.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\RequestAction.js",["306","307","308"],"import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport UserApi from '../../defines/https/UserApi';\r\nimport Message from '../../defines/Message';\r\nimport MySocket from '../../defines/Socket/MySocket';\r\nimport mainStyles from '../../defines/styles/MainStyles'\r\nimport { loggedUser, updateUser } from '../../features/auth/authSlice';\r\n\r\nexport default function SentRequestAction({ item }) {\r\n    const classes = mainStyles();\r\n    const user = useSelector(loggedUser);\r\n    const onConfirmClick = async () => {\r\n        const data = await UserApi.confirmFriendRequest(user._id, item._id);\r\n        if (data.status === 'succeeded') {\r\n            MySocket.emitUpdateUserById(user._id);\r\n            MySocket.emitAcceptFriend(user, item._id);\r\n        }\r\n    }\r\n\r\n    const onDeleteClick = async () => {\r\n        const data = await UserApi.deleteFriendRequest(user._id, item._id);\r\n        if (data.status === 'succeeded') {\r\n            MySocket.emitUpdateUserById(user._id);\r\n            MySocket.emitDeleteFriendRequest(user, item._id);\r\n        }\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Button onClick={onConfirmClick} color=\"primary\" variant=\"contained\" size=\"small\" className={classes.buttonStyle}>Confirm</Button>\r\n            <Button onClick={onDeleteClick} variant=\"contained\" size=\"small\" className={classes.buttonStyle}>Delete</Button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\StrangerAction.js",["309","310","311"],"import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport UserApi from '../../defines/https/UserApi';\r\nimport Message from '../../defines/Message';\r\nimport MySocket from '../../defines/Socket/MySocket';\r\nimport mainStyles from '../../defines/styles/MainStyles'\r\nimport { loggedUser, updateUser } from '../../features/auth/authSlice';\r\n\r\nexport default function SentRequestAction({ item }) {\r\n    const classes = mainStyles();\r\n    const user = useSelector(loggedUser);\r\n    const onAddFriend = async () => {\r\n        const data = await UserApi.sentFriendRequest(user._id, item._id);\r\n        if (data.status === 'succeeded') {\r\n            MySocket.emitUpdateUserById(user._id);\r\n            MySocket.emitAddFriend(user, item._id);\r\n        }\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Button onClick={onAddFriend} color=\"primary\" variant=\"contained\" size=\"small\" className={classes.buttonStyle}>Add friend</Button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendList\\FriendList.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Loading\\Loading.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\FriendAction.js",["312"],"import React, { useState } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { Button } from '@material-ui/core';\r\nimport mainStyles from '../../defines/styles/MainStyles'\r\nimport UserApi from '../../defines/https/UserApi';\r\nimport { useSelector } from 'react-redux';\r\nimport { loggedUser } from '../../features/auth/authSlice';\r\nimport MySocket from '../../defines/Socket/MySocket';\r\n\r\nconst ITEM_HEIGHT = 48;\r\n\r\nexport default function SentRequestAction({ item }) {\r\n\r\n    const user = useSelector(loggedUser);\r\n    const classes = mainStyles();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    // click\r\n    const onUnfriend = async () => {\r\n        const data = await UserApi.unfriend(user._id, item._id);\r\n        console.log('data', data);\r\n        if (data.status === 'succeeded') {\r\n            MySocket.emitUpdateUserById(user._id);\r\n            MySocket.emitUnfriend(user, item._id);\r\n        }\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const onChat = () => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <IconButton\r\n                aria-label=\"more\"\r\n                aria-controls=\"long-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"long-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                PaperProps={{\r\n                    style: {\r\n                        maxHeight: ITEM_HEIGHT * 4.5,\r\n                        width: '20ch',\r\n                    },\r\n                }}\r\n            >\r\n                <MenuItem><Button onClick={onChat} variant=\"contained\" size=\"small\" fullWidth color=\"primary\" className={classes.buttonStyle}>Chat</Button></MenuItem>\r\n                <MenuItem><Button onClick={onUnfriend} variant=\"contained\" size=\"small\" fullWidth className={classes.buttonStyle}>Unfriend</Button></MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket\\MySocket.js",["313"],"import Helper from '../Helper';\r\nimport MyTime from '../MyTime';\r\nimport Socket from '../Socket';\r\nimport SocketEventName from './SocketEventName';\r\nconst MySocket = {\r\n    // EMIT\r\n    emitSignIn: function (user) {\r\n        Socket.emit(SocketEventName.signIn, { user });\r\n    },\r\n    emitSignOut: function (user) {\r\n        Socket.emit(SocketEventName.signOut, { user });\r\n    },\r\n    emitGetOnlineUsers: function () {\r\n        Socket.emit(SocketEventName.getOnlineUsers);\r\n    },\r\n    emitUpdateUserById: function (id) {\r\n        Socket.emit(SocketEventName.updateUser, { id });\r\n    },\r\n    emitSendMessage: function (user, message, conversationId) {\r\n        Socket.emit(SocketEventName.sendMessage, { user, message, conversationId });\r\n    },\r\n    emitTyping: function (user, conversationId) {\r\n        Socket.emit(SocketEventName.typing, { user, conversationId });\r\n    },\r\n    emitStopTyping: function (username, conversationId) {\r\n        Socket.emit(SocketEventName.stopTyping, { username, conversationId });\r\n    },\r\n    emitJoinUsersToConversation: function (ids, conversationId) {\r\n        Socket.emit(SocketEventName.joinUsersToConversation, { ids, conversationId });\r\n    },\r\n    emitJoinRoom: function (roomName) {\r\n        Socket.emit(SocketEventName.joinRoom, { roomName });\r\n    },\r\n    emitLeaveRoom: function (roomName) {\r\n        Socket.emit(SocketEventName.leaveRoom, { roomName });\r\n    },\r\n\r\n    // FRIEND ACTION\r\n    emitAddFriend: function (user, friendId) {\r\n        Socket.emit(SocketEventName.addFriend, { user, friendId });\r\n    },\r\n    emitAcceptFriend: function (user, friendId) {\r\n        Socket.emit(SocketEventName.acceptFriend, { user, friendId });\r\n    },\r\n    emitUnfriend: function (user, friendId) {\r\n        Socket.emit(SocketEventName.unfriend, { user, friendId });\r\n    },\r\n    emitCancelFriendRequest: function (user, friendId) {\r\n        Socket.emit(SocketEventName.cancelFriendRequest, { user, friendId });\r\n    },\r\n    emitDeleteFriendRequest: function (user, friendId) {\r\n        Socket.emit(SocketEventName.deleteFriendRequest, { user, friendId });\r\n    },\r\n\r\n    // ON\r\n    onUpdateUser: function (callback) {\r\n        Socket.on(SocketEventName.updateUser, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n    onReceiveMessage: function (callback) {\r\n        Socket.on(SocketEventName.receiveMessage, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n    onOnlineUsers: function (callback) {\r\n        Socket.on(SocketEventName.onlineUsers, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n    onTyping: function (callback) {\r\n        Socket.on(SocketEventName.typing, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n    onStopTyping: function (callback) {\r\n        Socket.on(SocketEventName.stopTyping, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n\r\n    // NOTIFICATION\r\n    onNewMessageNotification: function (callback) {\r\n        Socket.on(SocketEventName.newMessageNotification, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n\r\n    // FRIEND ACTIONS\r\n    onFriendAccepted: function (callback) {\r\n        Socket.on(SocketEventName.friendAccepted, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n    onFriendRequested: function (callback) {\r\n        Socket.on(SocketEventName.friendRequested, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n    onFriendUnFriend: function (callback) {\r\n        Socket.on(SocketEventName.friendUnfriend, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n    onFriendRequestCanceled: function (callback) {\r\n        Socket.on(SocketEventName.friendRequestCanceled, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n    onFriendRejected: function (callback) {\r\n        Socket.on(SocketEventName.friendRejected, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n    off: function (eventName) {\r\n        Socket.off(eventName);\r\n    }\r\n}\r\nexport default MySocket","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket\\SocketEventName.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\https\\ConversationApi.js",["314"],"import Axios from \"axios\";\r\nimport { API_ADDRESS } from \"../Config\";\r\nimport Helper from \"../Helper\";\r\nimport MySocket from '../Socket/MySocket';\r\n\r\nconst prefix = `${API_ADDRESS}/conversation`;\r\n\r\nconst ConversationApi = {\r\n    findConversationById: async function (id) {\r\n        const data = await Axios.get(`${prefix}/getConversationById`, {\r\n            params: {\r\n                id\r\n            }\r\n        });\r\n        return data.data;\r\n    },\r\n    listConversationsForListDisplay: async function (id) {\r\n        const data = await Axios.get(`${prefix}/listConversationsForListDisplay`, {\r\n            params: {\r\n                id\r\n            }\r\n        });\r\n        return data.data;\r\n    },\r\n    findConversationInfoByUserIdsOrCreateIfNotExist: async function (ids) {\r\n        const data = await Axios.post(`${prefix}/getConversationInfoByUserIdsOrCreateIfNotExist`, { ids });\r\n        const { status, payload } = data.data;\r\n        if (status === 'succeeded') {\r\n            const { members, isNew, _id } = payload;\r\n            if (isNew) {\r\n                //const memberIds = Helper.getArrayOfFieldValue(members, '_id', 'string');\r\n                MySocket.emitJoinUsersToConversation(members, _id);\r\n            }\r\n        }\r\n        return data.data;\r\n    },\r\n    getHomeConversation: async function () {\r\n        const data = await Axios.get(`${prefix}/home`);\r\n        return data.data;\r\n    }\r\n}\r\nexport default ConversationApi;","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\HomeConversationItem\\HomeConversationItem.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SendMessageBar\\SendMessageBar.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\NormalChat\\NormalChat.js",["315","316","317","318","319","320","321","322"],"import { Divider } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport Socket from '../../defines/Socket';\r\nimport MySocket from '../../defines/Socket/MySocket';\r\nimport SocketEventName from '../../defines/Socket/SocketEventName';\r\nimport { authUser } from '../../features/auth/authSlice';\r\nimport { appendMessage, conversation, conversationError, conversationMessages, conversationStatus, fetchConversationById, fetchHomeConversation, reset } from '../../features/chat/ChatSlice';\r\nimport { updateLastMessage } from '../../features/sidebarConversations/SidebarConversationsSlice';\r\nimport Loading from '../Loading/Loading';\r\nimport Messages from '../Messages/Messages';\r\nimport SendMessageBar from '../SendMessageBar/SendMessageBar';\r\nimport UserTyping from '../UserTyping/UserTyping';\r\n\r\nexport default function NormalChat() {\r\n    const status = useSelector(conversationStatus);\r\n    const messages = useSelector(conversationMessages);\r\n    const convo = useSelector(conversation);\r\n    const dispatch = useDispatch();\r\n    const { conversationId } = useParams();;\r\n\r\n    useEffect(() => {\r\n        if (status === 'succeeded') {\r\n            if (convo._id) MySocket.emitJoinRoom(`${convo._id}_current`);\r\n        }\r\n        return () => {\r\n            if (convo._id) MySocket.emitLeaveRoom(`${convo._id}_current`);\r\n        }\r\n    }, [status, convo._id])\r\n\r\n    // FETCH CONVERSATION\r\n    useEffect(() => {\r\n        dispatch(fetchConversationById(conversationId))\r\n        return () => {\r\n            dispatch(reset())\r\n        }\r\n    }, [conversationId]);\r\n\r\n    // SOCKET EVENTS RECEIVE MESSAGE\r\n    useEffect(() => {\r\n        MySocket.onReceiveMessage((data) => {\r\n            if (data.conversationId === convo._id) {\r\n                const messageObj = {\r\n                    type: 'message',\r\n                    ...data\r\n                }\r\n                dispatch(appendMessage(messageObj));\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            MySocket.off(SocketEventName.receiveMessage);\r\n        }\r\n    }, [messages, convo._id])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ position: 'relative', }}>\r\n                {status === 'loading'\r\n                    ? <Loading></Loading>\r\n                    :\r\n                    (\r\n                        <React.Fragment>\r\n                            <Messages messages={messages}></Messages>\r\n                            <div style={{ position: 'absolute', bottom: '100px', left: '5px', width: '100%' }}>\r\n                                <UserTyping></UserTyping>\r\n                            </div>\r\n                            <Divider />\r\n                            <SendMessageBar></SendMessageBar>\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationLink\\ConversationLink.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\sidebarConversations\\SidebarConversationsSlice.js",[],{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","replacedBy":"326"},{"ruleId":"327","severity":1,"message":"328","line":82,"column":8,"nodeType":"329","endLine":82,"endColumn":27,"suggestions":"330"},{"ruleId":"327","severity":1,"message":"331","line":88,"column":8,"nodeType":"329","endLine":88,"endColumn":10,"suggestions":"332"},{"ruleId":"333","severity":1,"message":"334","line":17,"column":11,"nodeType":"335","messageId":"336","endLine":17,"endColumn":22},{"ruleId":"333","severity":1,"message":"337","line":21,"column":11,"nodeType":"335","messageId":"336","endLine":21,"endColumn":29},{"ruleId":"327","severity":1,"message":"338","line":34,"column":8,"nodeType":"329","endLine":34,"endColumn":16,"suggestions":"339"},{"ruleId":"333","severity":1,"message":"340","line":3,"column":8,"nodeType":"335","messageId":"336","endLine":3,"endColumn":20},{"ruleId":"333","severity":1,"message":"341","line":9,"column":8,"nodeType":"335","messageId":"336","endLine":9,"endColumn":24},{"ruleId":"333","severity":1,"message":"342","line":1,"column":28,"nodeType":"335","messageId":"336","endLine":1,"endColumn":36},{"ruleId":"333","severity":1,"message":"343","line":4,"column":10,"nodeType":"335","messageId":"336","endLine":4,"endColumn":13},{"ruleId":"327","severity":1,"message":"344","line":23,"column":8,"nodeType":"329","endLine":23,"endColumn":10,"suggestions":"345"},{"ruleId":"333","severity":1,"message":"346","line":12,"column":32,"nodeType":"335","messageId":"336","endLine":12,"endColumn":44},{"ruleId":"333","severity":1,"message":"347","line":6,"column":23,"nodeType":"335","messageId":"336","endLine":6,"endColumn":33},{"ruleId":"333","severity":1,"message":"348","line":20,"column":12,"nodeType":"335","messageId":"336","endLine":20,"endColumn":19},{"ruleId":"333","severity":1,"message":"349","line":20,"column":21,"nodeType":"335","messageId":"336","endLine":20,"endColumn":30},{"ruleId":"323","replacedBy":"350"},{"ruleId":"325","replacedBy":"351"},{"ruleId":"333","severity":1,"message":"342","line":1,"column":28,"nodeType":"335","messageId":"336","endLine":1,"endColumn":36},{"ruleId":"333","severity":1,"message":"352","line":1,"column":15,"nodeType":"335","messageId":"336","endLine":1,"endColumn":19},{"ruleId":"333","severity":1,"message":"353","line":1,"column":30,"nodeType":"335","messageId":"336","endLine":1,"endColumn":40},{"ruleId":"333","severity":1,"message":"354","line":16,"column":8,"nodeType":"335","messageId":"336","endLine":16,"endColumn":15},{"ruleId":"333","severity":1,"message":"348","line":49,"column":12,"nodeType":"335","messageId":"336","endLine":49,"endColumn":19},{"ruleId":"333","severity":1,"message":"355","line":10,"column":10,"nodeType":"335","messageId":"336","endLine":10,"endColumn":21},{"ruleId":"333","severity":1,"message":"356","line":15,"column":10,"nodeType":"335","messageId":"336","endLine":15,"endColumn":24},{"ruleId":"333","severity":1,"message":"357","line":15,"column":26,"nodeType":"335","messageId":"336","endLine":15,"endColumn":70},{"ruleId":"333","severity":1,"message":"358","line":15,"column":72,"nodeType":"335","messageId":"336","endLine":15,"endColumn":93},{"ruleId":"333","severity":1,"message":"359","line":16,"column":8,"nodeType":"335","messageId":"336","endLine":16,"endColumn":23},{"ruleId":"333","severity":1,"message":"360","line":17,"column":10,"nodeType":"335","messageId":"336","endLine":17,"endColumn":20},{"ruleId":"333","severity":1,"message":"361","line":18,"column":8,"nodeType":"335","messageId":"336","endLine":18,"endColumn":14},{"ruleId":"333","severity":1,"message":"362","line":22,"column":11,"nodeType":"335","messageId":"336","endLine":22,"endColumn":18},{"ruleId":"333","severity":1,"message":"343","line":1,"column":10,"nodeType":"335","messageId":"336","endLine":1,"endColumn":13},{"ruleId":"333","severity":1,"message":"363","line":1,"column":27,"nodeType":"335","messageId":"336","endLine":1,"endColumn":36},{"ruleId":"333","severity":1,"message":"364","line":10,"column":10,"nodeType":"335","messageId":"336","endLine":10,"endColumn":14},{"ruleId":"333","severity":1,"message":"365","line":10,"column":16,"nodeType":"335","messageId":"336","endLine":10,"endColumn":24},{"ruleId":"333","severity":1,"message":"360","line":10,"column":26,"nodeType":"335","messageId":"336","endLine":10,"endColumn":36},{"ruleId":"333","severity":1,"message":"366","line":10,"column":38,"nodeType":"335","messageId":"336","endLine":10,"endColumn":49},{"ruleId":"333","severity":1,"message":"367","line":13,"column":27,"nodeType":"335","messageId":"336","endLine":13,"endColumn":37},{"ruleId":"333","severity":1,"message":"353","line":1,"column":17,"nodeType":"335","messageId":"336","endLine":1,"endColumn":27},{"ruleId":"333","severity":1,"message":"368","line":2,"column":5,"nodeType":"335","messageId":"336","endLine":2,"endColumn":9},{"ruleId":"333","severity":1,"message":"369","line":3,"column":5,"nodeType":"335","messageId":"336","endLine":3,"endColumn":15},{"ruleId":"333","severity":1,"message":"370","line":5,"column":5,"nodeType":"335","messageId":"336","endLine":5,"endColumn":15},{"ruleId":"333","severity":1,"message":"371","line":8,"column":8,"nodeType":"335","messageId":"336","endLine":8,"endColumn":20},{"ruleId":"333","severity":1,"message":"372","line":11,"column":8,"nodeType":"335","messageId":"336","endLine":11,"endColumn":16},{"ruleId":"333","severity":1,"message":"355","line":3,"column":10,"nodeType":"335","messageId":"336","endLine":3,"endColumn":21},{"ruleId":"333","severity":1,"message":"354","line":5,"column":8,"nodeType":"335","messageId":"336","endLine":5,"endColumn":15},{"ruleId":"333","severity":1,"message":"373","line":8,"column":22,"nodeType":"335","messageId":"336","endLine":8,"endColumn":32},{"ruleId":"333","severity":1,"message":"355","line":3,"column":10,"nodeType":"335","messageId":"336","endLine":3,"endColumn":21},{"ruleId":"333","severity":1,"message":"354","line":5,"column":8,"nodeType":"335","messageId":"336","endLine":5,"endColumn":15},{"ruleId":"333","severity":1,"message":"373","line":8,"column":22,"nodeType":"335","messageId":"336","endLine":8,"endColumn":32},{"ruleId":"333","severity":1,"message":"354","line":8,"column":8,"nodeType":"335","messageId":"336","endLine":8,"endColumn":15},{"ruleId":"333","severity":1,"message":"374","line":2,"column":8,"nodeType":"335","messageId":"336","endLine":2,"endColumn":14},{"ruleId":"333","severity":1,"message":"361","line":3,"column":8,"nodeType":"335","messageId":"336","endLine":3,"endColumn":14},{"ruleId":"333","severity":1,"message":"342","line":2,"column":28,"nodeType":"335","messageId":"336","endLine":2,"endColumn":36},{"ruleId":"333","severity":1,"message":"360","line":4,"column":10,"nodeType":"335","messageId":"336","endLine":4,"endColumn":20},{"ruleId":"333","severity":1,"message":"375","line":5,"column":8,"nodeType":"335","messageId":"336","endLine":5,"endColumn":14},{"ruleId":"333","severity":1,"message":"376","line":8,"column":10,"nodeType":"335","messageId":"336","endLine":8,"endColumn":18},{"ruleId":"333","severity":1,"message":"377","line":9,"column":39,"nodeType":"335","messageId":"336","endLine":9,"endColumn":56},{"ruleId":"333","severity":1,"message":"378","line":9,"column":123,"nodeType":"335","messageId":"336","endLine":9,"endColumn":144},{"ruleId":"327","severity":1,"message":"328","line":38,"column":8,"nodeType":"329","endLine":38,"endColumn":24,"suggestions":"379"},{"ruleId":"327","severity":1,"message":"328","line":56,"column":8,"nodeType":"329","endLine":56,"endColumn":29,"suggestions":"380"},"no-native-reassign",["381"],"no-negated-in-lhs",["382"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["383"],"React Hook useEffect has missing dependencies: 'cookies' and 'dispatch'. Either include them or remove the dependency array.",["384"],"no-unused-vars","'heightStyle' is assigned a value but never used.","Identifier","unusedVar","'handleAppBarResize' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["385"],"'ListItemIcon' is defined but never used.","'ConversationLink' is defined but never used.","'useState' is defined but never used.","'Box' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'loggedUser._id'. Either include them or remove the dependency array.",["386"],"'removeCookie' is assigned a value but never used.","'makeStyles' is defined but never used.","'cookies' is assigned a value but never used.","'setCookie' is assigned a value but never used.",["381"],["382"],"'Grid' is defined but never used.","'Typography' is defined but never used.","'Message' is defined but never used.","'useDispatch' is defined but never used.","'conversationId' is defined but never used.","'fetchConversationByUserIdsOrCreateIfNotExist' is defined but never used.","'conversationMemberIds' is defined but never used.","'ConversationApi' is defined but never used.","'useHistory' is defined but never used.","'Helper' is defined but never used.","'classes' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'useLocation' is defined but never used.","'loginThunk' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'IconButton' is defined but never used.","'MoreVertIcon' is defined but never used.","'MyAvatar' is defined but never used.","'updateUser' is defined but never used.","'MyTime' is defined but never used.","'Socket' is defined but never used.","'authUser' is defined but never used.","'conversationError' is defined but never used.","'fetchHomeConversation' is defined but never used.",["387"],["388"],"no-global-assign","no-unsafe-negation",{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},"Update the dependencies array to be: [user._id, convoId, dispatch]",{"range":"401","text":"402"},"Update the dependencies array to be: [cookies, dispatch]",{"range":"403","text":"404"},"Update the dependencies array to be: [history, params]",{"range":"405","text":"406"},"Update the dependencies array to be: [dispatch, loggedUser._id]",{"range":"407","text":"408"},"Update the dependencies array to be: [conversationId, dispatch]",{"range":"409","text":"410"},"Update the dependencies array to be: [messages, convo._id, dispatch]",{"range":"411","text":"412"},[3612,3631],"[user._id, convoId, dispatch]",[3785,3787],"[cookies, dispatch]",[1030,1038],"[history, params]",[995,997],"[dispatch, loggedUser._id]",[1691,1707],"[conversationId, dispatch]",[2269,2290],"[messages, convo._id, dispatch]"]