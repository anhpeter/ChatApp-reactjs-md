[{"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\index.js":"1","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\App.js":"2","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Slt.js":"3","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\styles\\MainStyles.js":"4","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\Chat.js":"5","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\store.js":"6","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\ChatSlice.js":"7","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\Notify.js":"8","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\NotifySlice.js":"9","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\auth\\authSlice.js":"10","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Message.js":"11","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\CookieName.js":"12","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Helper.js":"13","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\GeneralSlices\\themeSlice.js":"14","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatBox\\ChatBox.js":"15","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationItem\\ConversationItem.js":"16","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationList\\ConversationList.js":"17","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\DayNightSwitch\\DayNightSwitch.js":"18","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Header\\Header.js":"19","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\PrivateRoute\\PrivateRoute.js":"20","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SearchBar\\SearchBar.js":"21","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Toolbar\\ToolbarTitle.js":"22","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Messages\\Messages.js":"23","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyAvatar\\MyAvatar.js":"24","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Message\\Message.js":"25","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SendingInput\\SendingInput.js":"26","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignIn\\SignIn.js":"27","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket.js":"28","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\OnlineUser\\OnlineUsers.js":"29","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Config.js":"30","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\IconWithBadge.js":"31","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Notifications\\Notifications.js":"32","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Friends\\Friends.js":"33","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\AppTitle\\AppTitle.js":"34","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyTabPanel\\MyTabPanel.js":"35","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignUp\\SignUp.js":"36","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\AuthRoute\\AuthRoute.js":"37","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\https\\UserApi.js":"38","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\configs\\FormErrors.js":"39","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\validates\\UserValidates.js":"40","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\MyTime.js":"41","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\RouterLink\\RouterLink.js":"42","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\UserTyping\\UserTyping.js":"43","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatNotification\\ChatNotification.js":"44","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendBox\\FriendBox.js":"45","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\RunAction\\RunAction.js":"46","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\SentRequestAction.js":"47","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\RequestAction.js":"48","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\StrangerAction.js":"49","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendList\\FriendList.js":"50","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Loading\\Loading.js":"51","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\FriendAction.js":"52","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket\\MySocket.js":"53","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket\\SocketEventName.js":"54","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\https\\ConversationApi.js":"55","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\HomeConversationItem\\HomeConversationItem.js":"56","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SendMessageBar\\SendMessageBar.js":"57","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\NormalChat\\NormalChat.js":"58","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationLink\\ConversationLink.js":"59","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\sidebarConversations\\SidebarConversationsSlice.js":"60","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\NewChat\\NewChat.js":"61","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SuggestionUsers\\SuggestionUsers.js":"62","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Receiver\\Receiver.js":"63","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\NewChat\\NewChatSlice.js":"64"},{"size":493,"mtime":1614583917314,"results":"65","hashOfConfig":"66"},{"size":5299,"mtime":1614783590353,"results":"67","hashOfConfig":"66"},{"size":70,"mtime":1612414967612,"results":"68","hashOfConfig":"66"},{"size":1249,"mtime":1614592911007,"results":"69","hashOfConfig":"66"},{"size":1810,"mtime":1614591895485,"results":"70","hashOfConfig":"66"},{"size":688,"mtime":1614784624068,"results":"71","hashOfConfig":"66"},{"size":2890,"mtime":1614783732148,"results":"72","hashOfConfig":"66"},{"size":1944,"mtime":1613918885316,"results":"73","hashOfConfig":"66"},{"size":1056,"mtime":1612841908030,"results":"74","hashOfConfig":"66"},{"size":2615,"mtime":1614758713770,"results":"75","hashOfConfig":"66"},{"size":479,"mtime":1614617043188,"results":"76","hashOfConfig":"66"},{"size":40,"mtime":1612840227225,"results":"77","hashOfConfig":"66"},{"size":1788,"mtime":1614583292210,"results":"78","hashOfConfig":"66"},{"size":418,"mtime":1612880252791,"results":"79","hashOfConfig":"66"},{"size":2250,"mtime":1614787192727,"results":"80","hashOfConfig":"66"},{"size":2143,"mtime":1614618390178,"results":"81","hashOfConfig":"66"},{"size":2956,"mtime":1614700304303,"results":"82","hashOfConfig":"66"},{"size":1304,"mtime":1612965343460,"results":"83","hashOfConfig":"66"},{"size":3158,"mtime":1614614468661,"results":"84","hashOfConfig":"66"},{"size":802,"mtime":1613986641897,"results":"85","hashOfConfig":"66"},{"size":366,"mtime":1612928465435,"results":"86","hashOfConfig":"66"},{"size":315,"mtime":1612928481171,"results":"87","hashOfConfig":"66"},{"size":2115,"mtime":1614785883071,"results":"88","hashOfConfig":"66"},{"size":1695,"mtime":1613703432162,"results":"89","hashOfConfig":"66"},{"size":1420,"mtime":1614140303317,"results":"90","hashOfConfig":"66"},{"size":3491,"mtime":1614787879532,"results":"91","hashOfConfig":"66"},{"size":6603,"mtime":1613980644592,"results":"92","hashOfConfig":"66"},{"size":292,"mtime":1612932563194,"results":"93","hashOfConfig":"66"},{"size":2939,"mtime":1614614523330,"results":"94","hashOfConfig":"66"},{"size":51,"mtime":1612966358545,"results":"95","hashOfConfig":"66"},{"size":678,"mtime":1613232820573,"results":"96","hashOfConfig":"66"},{"size":709,"mtime":1613232882320,"results":"97","hashOfConfig":"66"},{"size":2586,"mtime":1613980719494,"results":"98","hashOfConfig":"66"},{"size":203,"mtime":1613980596026,"results":"99","hashOfConfig":"66"},{"size":630,"mtime":1613359617978,"results":"100","hashOfConfig":"66"},{"size":6691,"mtime":1613980644592,"results":"101","hashOfConfig":"66"},{"size":667,"mtime":1613986641898,"results":"102","hashOfConfig":"66"},{"size":2769,"mtime":1614757175261,"results":"103","hashOfConfig":"66"},{"size":275,"mtime":1613536646878,"results":"104","hashOfConfig":"66"},{"size":2709,"mtime":1613620423707,"results":"105","hashOfConfig":"66"},{"size":1039,"mtime":1613704781597,"results":"106","hashOfConfig":"66"},{"size":221,"mtime":1614071800029,"results":"107","hashOfConfig":"66"},{"size":1562,"mtime":1613980644593,"results":"108","hashOfConfig":"66"},{"size":828,"mtime":1613981843996,"results":"109","hashOfConfig":"66"},{"size":4662,"mtime":1614614468661,"results":"110","hashOfConfig":"66"},{"size":608,"mtime":1614614523330,"results":"111","hashOfConfig":"66"},{"size":978,"mtime":1614614468661,"results":"112","hashOfConfig":"66"},{"size":1477,"mtime":1614614523330,"results":"113","hashOfConfig":"66"},{"size":1045,"mtime":1614614468661,"results":"114","hashOfConfig":"66"},{"size":2841,"mtime":1614614523330,"results":"115","hashOfConfig":"66"},{"size":221,"mtime":1613832531156,"results":"116","hashOfConfig":"66"},{"size":2651,"mtime":1614704767866,"results":"117","hashOfConfig":"66"},{"size":3865,"mtime":1614665849908,"results":"118","hashOfConfig":"66"},{"size":936,"mtime":1614403149659,"results":"119","hashOfConfig":"66"},{"size":1541,"mtime":1614787880571,"results":"120","hashOfConfig":"66"},{"size":438,"mtime":1614071616523,"results":"121","hashOfConfig":"66"},{"size":268,"mtime":1614783157482,"results":"122","hashOfConfig":"66"},{"size":3437,"mtime":1614787010823,"results":"123","hashOfConfig":"66"},{"size":1663,"mtime":1614617893225,"results":"124","hashOfConfig":"66"},{"size":2774,"mtime":1614664118173,"results":"125","hashOfConfig":"66"},{"size":1202,"mtime":1614787432864,"results":"126","hashOfConfig":"66"},{"size":955,"mtime":1614765767945,"results":"127","hashOfConfig":"66"},{"size":4903,"mtime":1614785252723,"results":"128","hashOfConfig":"66"},{"size":1736,"mtime":1614787577838,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"1lgxsql",{"filePath":"133","messages":"134","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"132"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"132"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"132"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"132"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"132"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"132"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"132"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"132"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"132"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"132"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"132"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"132"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"132"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"132"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"132"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"132"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"132"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\index.js",[],["278","279"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\App.js",["280","281","282","283","284"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Slt.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\styles\\MainStyles.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\Chat.js",["285","286"],"import React, { useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { useEffect } from 'react'\r\nimport Slt from '../../defines/Slt'\r\nimport ConversationList from '../../components/ConversationList/ConversationList'\r\nimport ChatBox from '../../components/ChatBox/ChatBox'\r\nimport OnlineUsers from '../../components/OnlineUser/OnlineUsers'\r\nimport useStyles from '../../defines/styles/MainStyles'\r\nimport { Box } from '@material-ui/core'\r\n\r\nexport default function Chat() {\r\n    const classes = useStyles();\r\n    const [appBarHeight,\r\n        setAppBarHeight] = useState(0);\r\n\r\n    // HANDLE HEIGHT\r\n    const heightStyle = {\r\n        height: `calc(100vh - ${appBarHeight}px)`\r\n    }\r\n\r\n    const handleAppBarResize = () => {\r\n        let height = document\r\n            .getElementById(Slt.mainAppBar)\r\n            .clientHeight;\r\n        setAppBarHeight(height);\r\n    }\r\n\r\n    // HANDLE APP BAR RESIZE\r\n    useEffect(() => {\r\n        //handleAppBarResize();\r\n        //window.addEventListener('resize', handleAppBarResize)\r\n    }, []);\r\n\r\n    // DISPLAY LATEST CONVERSATION\r\n\r\n    return (\r\n        <Box p={2}>\r\n            <Grid container >\r\n                <Grid container item xs={12}  spacing={2}>\r\n                    <Grid item xs={2} md={3} className={`${classes.borderRight500} `}>\r\n                        <ConversationList></ConversationList>\r\n                    </Grid>\r\n                    <Grid item xs={8} md={7}>\r\n                        <ChatBox>\r\n                            Loading...\r\n                    </ChatBox>\r\n                    </Grid>\r\n                    <Grid item xs={2} className={`${classes.borderLeft500} `}>\r\n                        <OnlineUsers />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\store.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\ChatSlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\Notify.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\NotifySlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\auth\\authSlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Message.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\CookieName.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Helper.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\GeneralSlices\\themeSlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatBox\\ChatBox.js",["287"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationItem\\ConversationItem.js",["288","289"],"import React from 'react'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MyAvatar from '../MyAvatar/MyAvatar';\r\nimport { Avatar, Hidden, ListItemAvatar, makeStyles } from '@material-ui/core';\r\nimport { authUser } from '../../features/auth/authSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport ConversationLink from '../ConversationLink/ConversationLink';\r\nimport RouterLink from '../RouterLink/RouterLink';\r\nimport { conversationId } from '../../features/chat/ChatSlice';\r\n\r\nconst useStyle = makeStyles({\r\n    truncateListItemStyle: {\r\n        '& > p': {\r\n            overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap'\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport default function ConversationItem({ item, online, icon }) {\r\n    const classes = useStyle();\r\n    const user = useSelector(authUser);\r\n    const convoId = useSelector(conversationId);\r\n    const friend = item.members.find((item) => {\r\n        return item._id !== user._id;\r\n    })\r\n    let lastMessageText = null;\r\n    if (item.lastMessage) {\r\n        let prefix = (item.lastMessage) ? (item.lastMessage.from._id === user._id ? 'you: ' : null) : null;\r\n        lastMessageText = prefix !== null ? `${prefix} ${item.lastMessage.text}` : item.lastMessage.text;\r\n    }\r\n    return (\r\n        <RouterLink to={`/chat/t/${item._id}`}>\r\n            <ListItem button selected={convoId === item._id}>\r\n                <ListItemAvatar>\r\n                    {\r\n                        icon ? (<Avatar> {icon} </Avatar>) :\r\n                            (\r\n                                <MyAvatar online={online} name={friend.username} single={true} picture={friend.picture}></MyAvatar>\r\n                            )\r\n                    }\r\n                </ListItemAvatar>\r\n                <Hidden smDown>\r\n                    <ListItemText className={classes.truncateListItemStyle} primary={friend.username} secondary={lastMessageText}></ListItemText>\r\n                </Hidden>\r\n            </ListItem >\r\n        </RouterLink>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationList\\ConversationList.js",["290","291","292","293"],"import React, { useEffect, useState } from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport SearchBar from '../SearchBar/SearchBar'\r\nimport { Box, Hidden } from '@material-ui/core'\r\nimport mainStyles from '../../defines/styles/MainStyles'\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ConversationItem from '../ConversationItem/ConversationItem'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { fetchAndPrependConversationById, fetchConversations, selectAllSidebarConversations, selectSidebarConversationIds, updateLastMessage } from '../../features/sidebarConversations/SidebarConversationsSlice'\r\nimport { authUser } from '../../features/auth/authSlice'\r\nimport MySocket from '../../defines/Socket/MySocket'\r\nimport SocketEventName from '../../defines/Socket/SocketEventName'\r\nimport Socket from '../../defines/Socket'\r\nimport { conversationId } from '../../features/chat/ChatSlice'\r\n\r\n\r\nexport default function ConversationList() {\r\n    const classes = mainStyles();\r\n    const dispatch = useDispatch();\r\n    const conversations = useSelector(selectAllSidebarConversations);\r\n    const loggedUser = useSelector(authUser);\r\n    const ids = useSelector(selectSidebarConversationIds);\r\n    const convoId = useSelector(conversationId);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchConversations({ id: loggedUser._id }));\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const myFunc = (data) => {\r\n            console.log('noti')\r\n            const { message, conversationId } = data;\r\n            if (ids.indexOf(conversationId) > -1) {\r\n                dispatch(updateLastMessage({ id: conversationId, message }));\r\n            } else {\r\n                dispatch(fetchAndPrependConversationById({ id: conversationId }));\r\n            }\r\n        }\r\n        MySocket.onNewMessageNotification(myFunc)\r\n        return () => {\r\n            Socket.removeListener(SocketEventName.newMessageNotification, myFunc);\r\n        }\r\n    }, [convoId, ids])\r\n\r\n\r\n    const conversationsHtml = conversations.map((item, i) => {\r\n        return (\r\n            <ConversationItem key={i} item={item}></ConversationItem>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <Grid container direction=\"column\" >\r\n            {/* SEARCH BAR */}\r\n            <Hidden mdDown>\r\n                <Grid item xs={12}>\r\n                    <SearchBar></SearchBar>\r\n                </Grid>\r\n            </Hidden>\r\n\r\n            <Grid item xs={12} >\r\n                {/* \r\n                <Box mt={2} >\r\n                    <HomeConversationItem></HomeConversationItem>\r\n                </Box>\r\n                 */}\r\n                <List className={`${classes.chatSection} custom-scrollbar`}>\r\n                    {conversationsHtml}\r\n                </List>\r\n            </Grid>\r\n            <Grid item xs={9}>\r\n                <List className={classes.messageArea}></List>\r\n            </Grid>\r\n            <Grid item xs={9}></Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\DayNightSwitch\\DayNightSwitch.js",["294"],"import React, { useEffect } from 'react'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport DayIcon from '@material-ui/icons/Brightness7';\r\nimport NightIcon from '@material-ui/icons/Brightness4';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { switchThemeType } from '../../GeneralSlices/themeSlice';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nexport default function DayNightSwitch() {\r\n    const theme = useSelector((state) => { return state.theme });\r\n    const dispatch = useDispatch();\r\n    const [cookies, setCookie, removeCookie] = useCookies(['theme'])\r\n\r\n    useEffect(() => {\r\n        if (cookies.theme) {\r\n            if (cookies.theme.type) {\r\n                if (cookies.theme.type !== theme.type) {\r\n                    dispatch(switchThemeType());\r\n                }\r\n            }\r\n        }\r\n    })\r\n\r\n    const onSwitch = () => {\r\n        let cookieValue = { ...theme, type: theme.type === 'light' ? 'dark' : 'light', };\r\n        setCookie('theme', JSON.stringify(cookieValue));\r\n        dispatch(switchThemeType());\r\n    }\r\n\r\n    return (\r\n        <IconButton aria-label=\"Day / night toggle\" onClick={onSwitch} color=\"inherit\">\r\n            {(theme.type === 'light') ? <NightIcon></NightIcon> : <DayIcon></DayIcon>}\r\n        </IconButton>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Header\\Header.js",["295","296","297"],"import React from 'react'\r\nimport MyAvatar from '../MyAvatar/MyAvatar';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { Box, Button, makeStyles } from '@material-ui/core'\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport Slt from '../../defines/Slt'\r\nimport { Link, useHistory, useLocation } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { isLogged, loggedUser, status } from '../../features/auth/authSlice'\r\nimport { signOut } from '../../features/auth/authSlice';\r\nimport { useCookies } from 'react-cookie'\r\nimport DayNightSwitch from '../DayNightSwitch/DayNightSwitch'\r\nimport Notifications from '../Notifications/Notifications';\r\nimport RunAction from '../RunAction/RunAction';\r\n\r\nexport default function Header(props) {\r\n    const [cookies, setCookie, removeCookie] = useCookies('loggedUser');\r\n    const user = useSelector(loggedUser);\r\n    const dispatch = useDispatch();\r\n    const logged = useSelector(isLogged);\r\n    const authStatus = useSelector(status);\r\n    const location = useLocation();\r\n    const pathName = location.pathname;\r\n    const history = useHistory();\r\n\r\n    const onSignout = () => {\r\n        removeCookie('loggedUser');\r\n        dispatch(signOut());\r\n        history.push('/');\r\n    }\r\n\r\n    const toolsHtml = (\r\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Box mr={4}>\r\n                {logged\r\n                    ? <Notifications></Notifications>\r\n                    : null\r\n                }\r\n            </Box>\r\n            <RunAction></RunAction>\r\n            <DayNightSwitch></DayNightSwitch>\r\n            {(logged)\r\n                ? (\r\n                    <MyAvatar name={user.name} single={user.single} picture={user.picture}></MyAvatar>\r\n                )\r\n                : null}\r\n            <Button\r\n                disabled={pathName === '/login'}\r\n                startIcon={(!logged)\r\n                    ? <PersonIcon></PersonIcon>\r\n                    : null}\r\n                color=\"inherit\"\r\n                onClick={() => {\r\n                    onSignout();\r\n                }}>\r\n                <Typography >{(logged)\r\n                    ? 'Sign out'\r\n                    : 'Sign in'}</Typography>\r\n            </Button>\r\n        </Box>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" color=\"primary\" id={Slt.mainAppBar}>\r\n                <Toolbar\r\n                    style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between'\r\n                    }}>\r\n                    <Typography variant=\"h6\">\r\n                        <Link to=\"/chat\" color=\"inherit\" style={{ color: 'white', textDecoration: 'none' }}>\r\n                            Messenger\r\n                        </Link>\r\n                    </Typography>\r\n                    {(authStatus !== 'loading') ? toolsHtml : null}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\PrivateRoute\\PrivateRoute.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SearchBar\\SearchBar.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Toolbar\\ToolbarTitle.js",[],["298","299"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Messages\\Messages.js",["300"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyAvatar\\MyAvatar.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Message\\Message.js",["301","302"],"import { Box, Grid, Tooltip, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MyAvatar from '../MyAvatar/MyAvatar';\r\nimport MyTime from '../../defines/MyTime';\r\n\r\nexport default function Message({ notShowAvatar, ownMessage, time, user, message }) {\r\n    const avatar = !notShowAvatar ? (<MyAvatar sizeInPixel={20} name={user.username} picture={user.picture}></MyAvatar>) : null;\r\n    const position = (ownMessage) ? 'right' : 'left';\r\n    const flexPos = (ownMessage) ? 'flex-end' : 'flex-start';\r\n    const placement = (ownMessage) ? 'bottom-start' : 'bottom-end';\r\n    return (\r\n        <ListItem key=\"1\">\r\n            <Box width=\"100%\" style={{ display: 'flex', justifyContent: flexPos, alignItems: 'flex-end' }}>\r\n                {/* AVATAR */}\r\n                {!ownMessage ? avatar : null}\r\n\r\n                {/* MESSAGE AND TIME */}\r\n                <Box className={`message ${position}-message ${!ownMessage && notShowAvatar ? 'ml-avatar' : ''}`}>\r\n                    <Tooltip title={MyTime.getMessageTimeString(MyTime.getCurrentTimeByUTCTime(time))} placement={placement}>\r\n                        <ListItemText align={position} primary={message} ></ListItemText>\r\n                    </Tooltip>\r\n                </Box>\r\n            </Box>\r\n\r\n        </ListItem>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SendingInput\\SendingInput.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignIn\\SignIn.js",["303","304"],"import React, { useState, } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setNotify } from '../../features/notify/NotifySlice';\r\nimport { isLogged, loginThunk, status, authError } from '../../features/auth/authSlice';\r\nimport { useCookies } from 'react-cookie';\r\nimport Helper from '../../defines/Helper'\r\nimport { LOGGED_USER } from '../../defines/CookieName';\r\nimport Message from '../../defines/Message';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { Box } from '@material-ui/core';\r\nimport FormErrors from '../../defines/configs/FormErrors';\r\nimport RouterLink from '../RouterLink/RouterLink';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    }\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const dispatch = useDispatch();\r\n    const [isSubmitClicked, setSubmitClicked] = useState(false);\r\n\r\n    // SELECTOR\r\n    const logged = useSelector(isLogged);\r\n    const [cookies, setCookie] = useCookies([LOGGED_USER]);\r\n\r\n    const authStatus = useSelector(status);\r\n    const authErr = useSelector(authError);\r\n\r\n    const classes = useStyles();\r\n    if (isSubmitClicked) {\r\n        if (authStatus === 'succeeded' && authErr)\r\n            dispatch(setNotify({ message: 'Login unsuccessfully', type: 'error', open: true }))\r\n    } else {\r\n        if (authStatus === 'loading') return null;\r\n    }\r\n\r\n    const mainHtml = (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                    </Typography>\r\n\r\n                {/* FORMIK */}\r\n                <Formik\r\n                    initialValues={{\r\n                        username: '',\r\n                        password: '',\r\n                        passwordConfirmation: ''\r\n                    }}\r\n                    validationSchema={yup.object({\r\n                        username: yup.string().required(Helper.format(FormErrors.required, 'Username')),\r\n                        password: yup.string().required(Helper.format(FormErrors.required, 'Password')),\r\n                    })}\r\n                    onSubmit={async (values, { setSubmitting }) => {\r\n                        const { username, password } = values;\r\n                        let user = {\r\n                            username,\r\n                            password\r\n                        };\r\n                        setSubmitClicked(true);\r\n                        dispatch(loginThunk(user));\r\n                        setCookie(LOGGED_USER, user);\r\n                        //alert(JSON.stringify(values));\r\n                    }}>\r\n                    {({\r\n                        values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isSubmitting,\r\n                        isValid,\r\n                        dirty,\r\n                        /* and other goodies */\r\n                    }) => {\r\n                        const showErrors = {};\r\n                        for (let key in errors) {\r\n                            showErrors[key] = (errors[key] != null) && touched[key];\r\n                        }\r\n                        const props = (field, label) => {\r\n                            label = label || Helper.ucFirst(field);\r\n                            return {\r\n                                fullWidth: true,\r\n                                margin: 'normal',\r\n                                placeholder: label,\r\n                                variant: 'outlined',\r\n                                name: field,\r\n                                onChange: handleChange,\r\n                                onBlur: handleBlur,\r\n                                value: values[label],\r\n                                label: label,\r\n                                error: (showErrors[field]),\r\n                                helperText: (showErrors[field])\r\n                                    ? errors[field]\r\n                                    : null\r\n                            }\r\n                        }\r\n                        return (\r\n                            <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n                                <TextField autoFocus={true} type=\"text\" {...props('username')} />\r\n                                <TextField type=\"password\" {...props('password')} />\r\n                                <RouterLink to=\"/sign-up\">\r\n                                    <Typography color=\"primary\" >\r\n                                        Create an account\r\n                                        </Typography>\r\n                                </RouterLink>\r\n                                <Box mt={2}>\r\n                                    <Button\r\n                                        disabled={isSubmitting || !isValid || !dirty}\r\n                                        type=\"submit\"\r\n                                        fullWidth\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                    > Sign In\r\n                                    </Button>\r\n                                </Box>\r\n                            </form>\r\n                        )\r\n                    }}\r\n                </Formik>\r\n                {/* END FORMIK */}\r\n\r\n            </div>\r\n        </Container>\r\n    )\r\n\r\n    return (!logged ? mainHtml : (null));\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\OnlineUser\\OnlineUsers.js",["305","306","307","308","309","310","311"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport MyAvatar from '../MyAvatar/MyAvatar';\r\nimport Socket from '../../defines/Socket';\r\nimport MySocket from '../../defines/Socket/MySocket';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authUser } from '../../features/auth/authSlice';\r\nimport { Hidden, Typography } from '@material-ui/core';\r\nimport SocketEventName from '../../defines/Socket/SocketEventName';\r\nimport AppTitle from '../AppTitle/AppTitle';\r\nimport { conversationId, fetchConversationByUserIdsOrCreateIfNotExist, conversationMemberIds } from '../../features/chat/ChatSlice';\r\nimport ConversationApi from '../../defines/https/ConversationApi';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Helper from '../../defines/Helper';\r\nimport ConversationLink from '../ConversationLink/ConversationLink';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n}));\r\n\r\nexport default function OnlineUsers({ item }) {\r\n    const classes = useStyles();\r\n    const [onlineUsers, setOnlineUsers] = useState([]);\r\n    const [isShow, setShow] = useState(false);\r\n    const user = useSelector(authUser) || {};\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setShow(true);\r\n        }, 500);\r\n        MySocket.emitGetOnlineUsers();\r\n        MySocket.onOnlineUsers((data) => {\r\n            setOnlineUsers(data)\r\n        })\r\n        return () => {\r\n            Socket.off(SocketEventName.onlineUsers);\r\n        }\r\n    }, [])\r\n\r\n    const onlineUsersHtml = onlineUsers.filter((item) => {\r\n        return (item.username !== user.username)\r\n    }).map((item) => {\r\n        return (\r\n            <ConversationLink key={item._id} button component={ListItem} item={item}>\r\n                <ListItemAvatar >\r\n                    <MyAvatar online={true} name={item.name} single={item.single} picture={item.picture}></MyAvatar>\r\n                </ListItemAvatar>\r\n                <Hidden smDown>\r\n                    <ListItemText\r\n                        primary={item.username}\r\n                    />\r\n                </Hidden>\r\n            </ConversationLink>\r\n        )\r\n    })\r\n\r\n    const emptyHtml = (\r\n        <Typography className=\"text-muted\" align=\"center\" >No online users</Typography>\r\n    )\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <AppTitle title=\"Online\"></AppTitle>\r\n            <List className={classes.root}>\r\n                {\r\n                    isShow\r\n                        ? (onlineUsersHtml.length > 0 ? onlineUsersHtml : emptyHtml)\r\n                        : null\r\n                }\r\n            </List >\r\n        </React.Fragment>\r\n    );\r\n}","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Config.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\IconWithBadge.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Notifications\\Notifications.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Friends\\Friends.js",["312"],"import React, { useEffect} from 'react';\r\nimport './Friends.css';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport AppTitle from '../AppTitle/AppTitle';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport FriendBox from '../FriendBox/FriendBox';\r\nimport OnlineUsers from '../OnlineUser/OnlineUsers';\r\nimport mainStyles from '../../defines/styles/MainStyles';\r\nimport { Box } from '@material-ui/core';\r\n\r\n\r\nfunction a11yProps(index) {\r\n    return { id: `simple-tab-${index}`, 'aria-controls': `simple-tabpanel-${index}` };\r\n}\r\n\r\nconst friendTabs = ['friends_all', 'friends_request', 'friends_sent_request', 'people_may_know'];\r\n\r\nexport default function Friends() {\r\n    const classes = mainStyles();\r\n    const [value,\r\n        setValue] = React.useState(0);\r\n    const history = useHistory();\r\n    const params = useParams();\r\n\r\n    useEffect(() => {\r\n        let tab = params.friendsTab;\r\n        let index = friendTabs.indexOf(tab);\r\n        index = index < 0 ? 0 : index;\r\n        setValue(index);\r\n    }, [params.friendsTab])\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n        let tab = friendTabs[newValue];\r\n        history.push(`/${tab}`);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box p={2} >\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={9} >\r\n                        <AppTitle title=\"Friends\"></AppTitle>\r\n                        <Box mt={1}>\r\n                            <AppBar position=\"static\" color=\"default\">\r\n                                <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\" indicatorColor=\"primary\" className=\"my-tabs\" scrollButtons=\"auto\" variant=\"scrollable\">\r\n                                    <Tab label=\"All Friends\" {...a11yProps(0)} />\r\n                                    <Tab label=\"Friend Requests\" {...a11yProps(1)} />\r\n                                    <Tab label=\"Sent Requests\" {...a11yProps(2)} />\r\n                                    <Tab label=\"People you may know\" {...a11yProps(3)} />\r\n                                </Tabs>\r\n                            </AppBar>\r\n                            <FriendBox type={friendTabs[value]}></FriendBox>\r\n                        </Box>\r\n                    </Grid>\r\n                    <Grid item xs={3} ><OnlineUsers /> </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\AppTitle\\AppTitle.js",["313"],"import { Typography } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nexport default function AppTitle({ title }) {\r\n    return (\r\n        <Typography variant=\"h5\">{title}</Typography>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\MyTabPanel\\MyTabPanel.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignUp\\SignUp.js",["314","315","316","317","318","319"],"import React, { useState, useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link, Redirect, useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setNotify } from '../../features/notify/NotifySlice';\r\nimport { isLogged, login, loginThunk, status } from '../../features/auth/authSlice';\r\nimport Helper from '../../defines/Helper'\r\nimport { Formik } from 'formik';\r\nimport UserApi from '../../defines/https/UserApi';\r\nimport * as yup from 'yup';\r\nimport UserValidates from '../../defines/validates/UserValidates';\r\nimport Message from '../../defines/Message';\r\nimport { Box } from '@material-ui/core';\r\nimport RouterLink from '../RouterLink/RouterLink';\r\n\r\nlet timeoutObj;\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1)\r\n    },\r\n}));\r\n\r\nexport default function SignUp() {\r\n    const dispatch = useDispatch();\r\n    const [username, setUsername] = useState({ value: '', unique: false });\r\n\r\n    // SELECTOR\r\n    const logged = useSelector(isLogged);\r\n    const authStatus = useSelector(status);\r\n    const classes = useStyles();\r\n\r\n    if (authStatus === 'loading')\r\n        return null;\r\n\r\n    return (!logged\r\n        ? (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">Sign Up</Typography>\r\n                    <Formik\r\n                        initialValues={{\r\n                            username: '',\r\n                            password: '',\r\n                            passwordConfirmation: ''\r\n                        }}\r\n                        validationSchema={yup.object({\r\n                            username: UserValidates.username(username, setUsername, timeoutObj),\r\n                            password: UserValidates.password(),\r\n                            passwordConfirmation: UserValidates.passwordConfirmation(),\r\n                        })}\r\n                        onSubmit={async (values, { setSubmitting }) => {\r\n                            const { username, password } = values;\r\n                            let data = await UserApi.createAccount(username, password);\r\n                            if (data.status === 'succeeded') {\r\n                                const user = data.payload;\r\n                                dispatch(setNotify({ message: Helper.format(Message.welcomeNewAccount, user.username) }));\r\n                                dispatch(login(user));\r\n                            } else {\r\n                                setSubmitting(false);\r\n                            }\r\n                        }}>\r\n                        {({\r\n                            values,\r\n                            errors,\r\n                            touched,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            handleSubmit,\r\n                            isSubmitting,\r\n                            isValid,\r\n                            dirty\r\n                            /* and other goodies */\r\n                        }) => {\r\n                            const showErrors = {};\r\n                            for (let key in errors) {\r\n                                showErrors[key] = (errors[key] != null) && touched[key];\r\n                            }\r\n                            const props = (field, label) => {\r\n                                label = label || Helper.ucFirst(field);\r\n                                return {\r\n                                    fullWidth: true,\r\n                                    margin: 'normal',\r\n                                    placeholder: label,\r\n                                    variant: 'outlined',\r\n                                    name: field,\r\n                                    onChange: handleChange,\r\n                                    onBlur: handleBlur,\r\n                                    value: values[label],\r\n                                    label: label,\r\n                                    error: (showErrors[field]),\r\n                                    helperText: (showErrors[field])\r\n                                        ? errors[field]\r\n                                        : null\r\n                                }\r\n                            }\r\n                            return (\r\n                                <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n                                    <TextField type=\"text\" {...props('username')} />\r\n                                    <TextField type=\"password\" {...props('password')} />\r\n                                    <TextField type=\"password\" {...props('passwordConfirmation', 'Password confirmation')} />\r\n                                    <RouterLink to=\"/signin\">\r\n                                        <Typography color=\"primary\" >\r\n                                            Have an account?\r\n                                        </Typography>\r\n                                    </RouterLink>\r\n                                    <Box mt={2}\r\n                                    >\r\n                                        <Button\r\n                                            disabled={isSubmitting || !isValid || !dirty}\r\n                                            type=\"submit\"\r\n                                            fullWidth\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                        > Sign Up </Button>\r\n                                    </Box>\r\n                                </form>\r\n                            )\r\n                        }}\r\n                    </Formik>\r\n                </div>\r\n            </Container >\r\n        )\r\n        : (null));\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\AuthRoute\\AuthRoute.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\https\\UserApi.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\configs\\FormErrors.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\validates\\UserValidates.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\MyTime.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\RouterLink\\RouterLink.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\UserTyping\\UserTyping.js",["320"],"import { Paper, Typography } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport MySocket from '../../defines/Socket/MySocket'\r\nimport Socket from '../../defines/Socket'\r\nimport MyAvatar from '../MyAvatar/MyAvatar';\r\nimport SocketEventName from '../../defines/Socket/SocketEventName';\r\n\r\nexport default function UserTyping() {\r\n    const [typingUsers, setTypingUsers] = useState([]);\r\n    useEffect(() => {\r\n        MySocket.onTyping((data) => {\r\n            setTypingUsers(typingUsers.concat(data.user));\r\n        })\r\n        MySocket.onStopTyping((data) => {\r\n            setTypingUsers(typingUsers.filter((user) => {\r\n                return user.username !== data.username;\r\n            }));\r\n        })\r\n        return () => {\r\n            Socket.off(SocketEventName.typing);\r\n            Socket.off(SocketEventName.stopTyping);\r\n        }\r\n    })\r\n\r\n    const typingHtml = typingUsers.map((user) => {\r\n        return (\r\n            <div key={user._id}>\r\n                <div style={{ display: 'flex', alignItems: 'flex-start', }}>\r\n                    <span>\r\n                        <MyAvatar name={user.username} picture={user.picture}> </MyAvatar>\r\n                    </span>\r\n                    <img className=\"typing-icon\" src={`${process.env.PUBLIC_URL}/images/icons/typing-icon.gif`} alt=\"typing\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    })\r\n    return (\r\n        <Paper elevation={0} style={{ minWidth: '200px' }}>\r\n            {(typingHtml.length > 0 ? typingHtml : null)}\r\n        </Paper>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatNotification\\ChatNotification.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendBox\\FriendBox.js",["321","322","323","324","325"],"import {\r\n    Card,\r\n    CardHeader,\r\n    Grid,\r\n    IconButton,\r\n} from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport UserApi from '../../defines/https/UserApi';\r\nimport { isLogged, loggedUser } from '../../features/auth/authSlice';\r\nimport MyAvatar from '../MyAvatar/MyAvatar'\r\nimport FriendList from '../FriendList/FriendList';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AllFriendList = () => {\r\n    const [items,\r\n        setItems] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const user = useSelector(loggedUser);\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const data = await UserApi.findUsersByIds(user.friend.friend);\r\n                if (data.status === 'succeeded')\r\n                    setItems(data.payload);\r\n                setLoading(false);\r\n            }\r\n            catch (e) { }\r\n        }\r\n        if (user.friend.friend.length > 0) {\r\n            fetchItems();\r\n        } else {\r\n            setItems([]);\r\n            setLoading(false);\r\n        }\r\n    }, [user.friend.friend])\r\n\r\n    return (\r\n        <FriendList items={items} type=\"friend\" isLoading={isLoading}></FriendList>\r\n    );\r\n}\r\n\r\nconst SentRequestList = () => {\r\n    const [items,\r\n        setItems] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const user = useSelector(loggedUser);\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const data = await UserApi.findUsersByIds(user.friend.sent_request);\r\n                if (data.status === 'succeeded')\r\n                    setItems(data.payload);\r\n                setLoading(false);\r\n            }\r\n            catch (e) { }\r\n        }\r\n        if (user.friend.sent_request.length > 0) {\r\n            fetchItems();\r\n        } else {\r\n            setLoading(false);\r\n            setItems([]);\r\n        }\r\n    }, [user.friend.sent_request]);\r\n    return (\r\n        <FriendList items={items} type='sent_request' isLoading={isLoading}></FriendList>\r\n    )\r\n}\r\n\r\nconst RequestList = () => {\r\n    const [items,\r\n        setItems] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const user = useSelector(loggedUser);\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const data = await UserApi.findUsersByIds(user.friend.request);\r\n                if (data.status === 'succeeded')\r\n                    setItems(data.payload);\r\n            }\r\n            catch (e) { }\r\n        }\r\n        if (user.friend.request.length > 0) {\r\n            fetchItems();\r\n        } else {\r\n            setItems([]);\r\n            setLoading(false);\r\n        }\r\n        setLoading(false);\r\n    }, [user.friend.request]);\r\n    return (\r\n        <FriendList items={items} type='request' isLoading={isLoading}></FriendList>\r\n    )\r\n}\r\n\r\nconst PeopleMayKnowList = ({ username }) => {\r\n    const [items,\r\n        setItems] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchItems = async () => {\r\n            try {\r\n                const data = await UserApi.findStrangerByUsername(username);\r\n                if (data.status === 'succeeded')\r\n                    setItems(data.payload);\r\n                setLoading(false);\r\n            }\r\n            catch (e) { }\r\n        }\r\n        fetchItems();\r\n    }, [username]);\r\n    return (\r\n        <FriendList items={items} isLoading={isLoading}></FriendList>\r\n    )\r\n}\r\n\r\nexport default function FriendBox({ type }) {\r\n    let itemsHtml = null;\r\n    const logged = useSelector(isLogged);\r\n    const user = useSelector(loggedUser);\r\n    if (logged) {\r\n        switch (type) {\r\n            case 'friends_request':\r\n                itemsHtml = <RequestList username={user.username}></RequestList>\r\n                break;\r\n            case 'friends_sent_request':\r\n                itemsHtml = <SentRequestList username={user.username}></SentRequestList>\r\n                break;\r\n            case 'people_may_know':\r\n                itemsHtml = <PeopleMayKnowList username={user.username}></PeopleMayKnowList>\r\n                break;\r\n            default:\r\n                itemsHtml = <AllFriendList username={user.username}></AllFriendList>\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid style={{\r\n            paddingTop: '8px',\r\n            maxHeight: '500px',\r\n            overflowY: 'auto',\r\n        }} className=\"custom-scrollbar\" container spacing={2} >{itemsHtml}</Grid>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\RunAction\\RunAction.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\SentRequestAction.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\RequestAction.js",["326","327","328"],"import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport UserApi from '../../defines/https/UserApi';\r\nimport Message from '../../defines/Message';\r\nimport MySocket from '../../defines/Socket/MySocket';\r\nimport mainStyles from '../../defines/styles/MainStyles'\r\nimport { loggedUser, updateUser } from '../../features/auth/authSlice';\r\n\r\nexport default function SentRequestAction({ item }) {\r\n    const classes = mainStyles();\r\n    const user = useSelector(loggedUser);\r\n    const onConfirmClick = async () => {\r\n        const data = await UserApi.confirmFriendRequest(user._id, item._id);\r\n        if (data.status === 'succeeded') {\r\n            MySocket.emitUpdateUserById(user._id);\r\n            MySocket.emitAcceptFriend(user, item._id);\r\n        }\r\n    }\r\n\r\n    const onDeleteClick = async () => {\r\n        const data = await UserApi.deleteFriendRequest(user._id, item._id);\r\n        if (data.status === 'succeeded') {\r\n            MySocket.emitUpdateUserById(user._id);\r\n            MySocket.emitDeleteFriendRequest(user, item._id);\r\n        }\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Button onClick={onConfirmClick} color=\"primary\" variant=\"contained\" size=\"small\" className={classes.buttonStyle}>Confirm</Button>\r\n            <Button onClick={onDeleteClick} variant=\"contained\" size=\"small\" className={classes.buttonStyle}>Delete</Button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\StrangerAction.js",["329","330","331"],"import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport UserApi from '../../defines/https/UserApi';\r\nimport Message from '../../defines/Message';\r\nimport MySocket from '../../defines/Socket/MySocket';\r\nimport mainStyles from '../../defines/styles/MainStyles'\r\nimport { loggedUser, updateUser } from '../../features/auth/authSlice';\r\n\r\nexport default function SentRequestAction({ item }) {\r\n    const classes = mainStyles();\r\n    const user = useSelector(loggedUser);\r\n    const onAddFriend = async () => {\r\n        const data = await UserApi.sentFriendRequest(user._id, item._id);\r\n        if (data.status === 'succeeded') {\r\n            MySocket.emitUpdateUserById(user._id);\r\n            MySocket.emitAddFriend(user, item._id);\r\n        }\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Button onClick={onAddFriend} color=\"primary\" variant=\"contained\" size=\"small\" className={classes.buttonStyle}>Add friend</Button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendList\\FriendList.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Loading\\Loading.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\FriendAction\\FriendAction.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket\\MySocket.js",["332"],"import Helper from '../Helper';\r\nimport MyTime from '../MyTime';\r\nimport Socket from '../Socket';\r\nimport SocketEventName from './SocketEventName';\r\nconst MySocket = {\r\n    // EMIT\r\n    emitSignIn: function (user) {\r\n        Socket.emit(SocketEventName.signIn, { user });\r\n    },\r\n    emitSignOut: function (user) {\r\n        Socket.emit(SocketEventName.signOut, { user });\r\n    },\r\n    emitGetOnlineUsers: function () {\r\n        Socket.emit(SocketEventName.getOnlineUsers);\r\n    },\r\n    emitUpdateUserById: function (id) {\r\n        Socket.emit(SocketEventName.updateUser, { id });\r\n    },\r\n    emitSendMessage: function (user, message, conversationId) {\r\n        Socket.emit(SocketEventName.sendMessage, { user, message, conversationId });\r\n    },\r\n    emitTyping: function (user, conversationId) {\r\n        Socket.emit(SocketEventName.typing, { user, conversationId });\r\n    },\r\n    emitStopTyping: function (username, conversationId) {\r\n        Socket.emit(SocketEventName.stopTyping, { username, conversationId });\r\n    },\r\n    emitJoinUsersToConversation: function (ids, conversationId) {\r\n        Socket.emit(SocketEventName.joinUsersToConversation, { ids, conversationId });\r\n    },\r\n    emitJoinRoom: function (roomName) {\r\n        Socket.emit(SocketEventName.joinRoom, { roomName });\r\n    },\r\n    emitLeaveRoom: function (roomName) {\r\n        Socket.emit(SocketEventName.leaveRoom, { roomName });\r\n    },\r\n\r\n    // FRIEND ACTION\r\n    emitAddFriend: function (user, friendId) {\r\n        Socket.emit(SocketEventName.addFriend, { user, friendId });\r\n    },\r\n    emitAcceptFriend: function (user, friendId) {\r\n        Socket.emit(SocketEventName.acceptFriend, { user, friendId });\r\n    },\r\n    emitUnfriend: function (user, friendId) {\r\n        Socket.emit(SocketEventName.unfriend, { user, friendId });\r\n    },\r\n    emitCancelFriendRequest: function (user, friendId) {\r\n        Socket.emit(SocketEventName.cancelFriendRequest, { user, friendId });\r\n    },\r\n    emitDeleteFriendRequest: function (user, friendId) {\r\n        Socket.emit(SocketEventName.deleteFriendRequest, { user, friendId });\r\n    },\r\n\r\n    // ON\r\n    onUpdateUser: function (callback) {\r\n        Socket.on(SocketEventName.updateUser, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n    onReceiveMessage: function (callback) {\r\n        Socket.on(SocketEventName.receiveMessage, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n    onOnlineUsers: function (callback) {\r\n        Socket.on(SocketEventName.onlineUsers, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n    onTyping: function (callback) {\r\n        Socket.on(SocketEventName.typing, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n    onStopTyping: function (callback) {\r\n        Socket.on(SocketEventName.stopTyping, (data) => {\r\n            if (Helper.isFn(callback)) callback(data);\r\n        })\r\n    },\r\n\r\n    // NOTIFICATION\r\n    onNewMessageNotification: function (callback) {\r\n        Socket.on(SocketEventName.newMessageNotification, callback)\r\n    },\r\n\r\n    // FRIEND ACTIONS\r\n    onFriendAccepted: function (callback) {\r\n        Socket.on(SocketEventName.friendAccepted, callback)\r\n    },\r\n    onFriendRequested: function (callback) {\r\n        Socket.on(SocketEventName.friendRequested, callback)\r\n    },\r\n    onFriendUnFriend: function (callback) {\r\n        Socket.on(SocketEventName.friendUnfriend, callback)\r\n    },\r\n    onFriendRequestCanceled: function (callback) {\r\n        Socket.on(SocketEventName.friendRequestCanceled, callback)\r\n    },\r\n    onFriendRejected: function (callback) {\r\n        Socket.on(SocketEventName.friendRejected, callback)\r\n    },\r\n    off: function (eventName) {\r\n        Socket.off(eventName);\r\n    },\r\n}\r\nexport default MySocket","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Socket\\SocketEventName.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\https\\ConversationApi.js",["333","334"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\HomeConversationItem\\HomeConversationItem.js",[],["335","336"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SendMessageBar\\SendMessageBar.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\NormalChat\\NormalChat.js",["337","338","339","340","341","342","343","344","345","346","347","348"],"import { Divider } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport ConversationApi from '../../defines/https/ConversationApi';\r\nimport Socket from '../../defines/Socket';\r\nimport MySocket from '../../defines/Socket/MySocket';\r\nimport SocketEventName from '../../defines/Socket/SocketEventName';\r\nimport { authUser, authUserId } from '../../features/auth/authSlice';\r\nimport { appendMessage, conversation, conversationError, conversationMessages, conversationStatus, fetchConversationById, fetchConversationByMemberIds, fetchHomeConversation, reset } from '../../features/chat/ChatSlice';\r\nimport { isNewChatEnable, newChatReceiver } from '../../features/NewChat/NewChatSlice';\r\nimport { updateLastMessage } from '../../features/sidebarConversations/SidebarConversationsSlice';\r\nimport Loading from '../Loading/Loading';\r\nimport Messages from '../Messages/Messages';\r\nimport SendMessageBar from '../SendMessageBar/SendMessageBar';\r\nimport UserTyping from '../UserTyping/UserTyping';\r\n\r\nexport default function NormalChat() {\r\n    const status = useSelector(conversationStatus);\r\n    const messages = useSelector(conversationMessages);\r\n    const convo = useSelector(conversation);\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const loggedUserId = useSelector(authUserId);\r\n    const { conversationId } = useParams();;\r\n    const receiver = useSelector(newChatReceiver) || {};\r\n    const newChatEnabled = useSelector(isNewChatEnable);\r\n\r\n    // FETCH CONVERSATION BY FRIEND ID\r\n    useEffect(() => {\r\n        console.log(receiver);\r\n        if (newChatEnabled) {\r\n            if (receiver._id) dispatch(fetchConversationByMemberIds([`${loggedUserId}`, `${receiver._id}`]));\r\n            else {\r\n                dispatch(reset());\r\n            }\r\n        }\r\n    }, [receiver._id, newChatEnabled])\r\n\r\n    useEffect(() => {\r\n        if (status === 'succeeded') {\r\n            if (convo._id) MySocket.emitJoinRoom(`${convo._id}_current`);\r\n            else history.replace('/chat/new');\r\n        }\r\n        return () => {\r\n            if (convo._id) MySocket.emitLeaveRoom(`${convo._id}_current`);\r\n        }\r\n    }, [status, convo._id])\r\n\r\n    // FETCH CONVERSATION BY ID\r\n    useEffect(() => {\r\n        if (conversationId) dispatch(fetchConversationById(conversationId))\r\n    }, [conversationId]);\r\n\r\n    // reset\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch(reset())\r\n        }\r\n    }, [])\r\n\r\n    // SOCKET EVENTS RECEIVE MESSAGE\r\n    useEffect(() => {\r\n        MySocket.onReceiveMessage((data) => {\r\n            const { conversationId, message } = data;\r\n            if (conversationId === convo._id) {\r\n                const messageObj = {\r\n                    type: 'message',\r\n                    ...message\r\n                }\r\n                dispatch(appendMessage(messageObj));\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            MySocket.off(SocketEventName.receiveMessage);\r\n        }\r\n    }, [messages, convo._id])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ position: 'relative', }}>\r\n                {status === 'loading'\r\n                    ? <Loading></Loading>\r\n                    :\r\n                    (\r\n                        <React.Fragment>\r\n                            <Messages messages={messages}></Messages>\r\n                            <div style={{ position: 'absolute', bottom: '100px', left: '5px', width: '100%' }}>\r\n                                <UserTyping></UserTyping>\r\n                            </div>\r\n                            <Divider />\r\n                        </React.Fragment>\r\n                    )\r\n                }\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationLink\\ConversationLink.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\sidebarConversations\\SidebarConversationsSlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\NewChat\\NewChat.js",["349","350"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SuggestionUsers\\SuggestionUsers.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Receiver\\Receiver.js",["351","352","353","354","355"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\NewChat\\NewChatSlice.js",[],{"ruleId":"356","replacedBy":"357"},{"ruleId":"358","replacedBy":"359"},{"ruleId":"360","severity":1,"message":"361","line":24,"column":10,"nodeType":"362","messageId":"363","endLine":24,"endColumn":41},{"ruleId":"360","severity":1,"message":"364","line":24,"column":43,"nodeType":"362","messageId":"363","endLine":24,"endColumn":71},{"ruleId":"360","severity":1,"message":"365","line":24,"column":73,"nodeType":"362","messageId":"363","endLine":24,"endColumn":90},{"ruleId":"366","severity":1,"message":"367","line":80,"column":8,"nodeType":"368","endLine":80,"endColumn":27,"suggestions":"369"},{"ruleId":"366","severity":1,"message":"370","line":86,"column":8,"nodeType":"368","endLine":86,"endColumn":10,"suggestions":"371"},{"ruleId":"360","severity":1,"message":"372","line":17,"column":11,"nodeType":"362","messageId":"363","endLine":17,"endColumn":22},{"ruleId":"360","severity":1,"message":"373","line":21,"column":11,"nodeType":"362","messageId":"363","endLine":21,"endColumn":29},{"ruleId":"366","severity":1,"message":"374","line":41,"column":8,"nodeType":"368","endLine":41,"endColumn":16,"suggestions":"375"},{"ruleId":"360","severity":1,"message":"376","line":3,"column":8,"nodeType":"362","messageId":"363","endLine":3,"endColumn":20},{"ruleId":"360","severity":1,"message":"377","line":9,"column":8,"nodeType":"362","messageId":"363","endLine":9,"endColumn":24},{"ruleId":"360","severity":1,"message":"378","line":1,"column":28,"nodeType":"362","messageId":"363","endLine":1,"endColumn":36},{"ruleId":"360","severity":1,"message":"379","line":4,"column":10,"nodeType":"362","messageId":"363","endLine":4,"endColumn":13},{"ruleId":"366","severity":1,"message":"380","line":28,"column":8,"nodeType":"368","endLine":28,"endColumn":10,"suggestions":"381"},{"ruleId":"366","severity":1,"message":"367","line":44,"column":8,"nodeType":"368","endLine":44,"endColumn":22,"suggestions":"382"},{"ruleId":"360","severity":1,"message":"383","line":12,"column":32,"nodeType":"362","messageId":"363","endLine":12,"endColumn":44},{"ruleId":"360","severity":1,"message":"384","line":6,"column":23,"nodeType":"362","messageId":"363","endLine":6,"endColumn":33},{"ruleId":"360","severity":1,"message":"385","line":20,"column":12,"nodeType":"362","messageId":"363","endLine":20,"endColumn":19},{"ruleId":"360","severity":1,"message":"386","line":20,"column":21,"nodeType":"362","messageId":"363","endLine":20,"endColumn":30},{"ruleId":"356","replacedBy":"387"},{"ruleId":"358","replacedBy":"388"},{"ruleId":"360","severity":1,"message":"378","line":1,"column":28,"nodeType":"362","messageId":"363","endLine":1,"endColumn":36},{"ruleId":"360","severity":1,"message":"389","line":1,"column":15,"nodeType":"362","messageId":"363","endLine":1,"endColumn":19},{"ruleId":"360","severity":1,"message":"390","line":1,"column":30,"nodeType":"362","messageId":"363","endLine":1,"endColumn":40},{"ruleId":"360","severity":1,"message":"391","line":16,"column":8,"nodeType":"362","messageId":"363","endLine":16,"endColumn":15},{"ruleId":"360","severity":1,"message":"385","line":49,"column":12,"nodeType":"362","messageId":"363","endLine":49,"endColumn":19},{"ruleId":"360","severity":1,"message":"392","line":10,"column":10,"nodeType":"362","messageId":"363","endLine":10,"endColumn":21},{"ruleId":"360","severity":1,"message":"393","line":15,"column":10,"nodeType":"362","messageId":"363","endLine":15,"endColumn":24},{"ruleId":"360","severity":1,"message":"394","line":15,"column":26,"nodeType":"362","messageId":"363","endLine":15,"endColumn":70},{"ruleId":"360","severity":1,"message":"395","line":15,"column":72,"nodeType":"362","messageId":"363","endLine":15,"endColumn":93},{"ruleId":"360","severity":1,"message":"396","line":16,"column":8,"nodeType":"362","messageId":"363","endLine":16,"endColumn":23},{"ruleId":"360","severity":1,"message":"397","line":17,"column":10,"nodeType":"362","messageId":"363","endLine":17,"endColumn":20},{"ruleId":"360","severity":1,"message":"398","line":18,"column":8,"nodeType":"362","messageId":"363","endLine":18,"endColumn":14},{"ruleId":"360","severity":1,"message":"399","line":22,"column":11,"nodeType":"362","messageId":"363","endLine":22,"endColumn":18},{"ruleId":"360","severity":1,"message":"379","line":1,"column":10,"nodeType":"362","messageId":"363","endLine":1,"endColumn":13},{"ruleId":"360","severity":1,"message":"400","line":1,"column":27,"nodeType":"362","messageId":"363","endLine":1,"endColumn":36},{"ruleId":"360","severity":1,"message":"401","line":10,"column":10,"nodeType":"362","messageId":"363","endLine":10,"endColumn":14},{"ruleId":"360","severity":1,"message":"402","line":10,"column":16,"nodeType":"362","messageId":"363","endLine":10,"endColumn":24},{"ruleId":"360","severity":1,"message":"397","line":10,"column":26,"nodeType":"362","messageId":"363","endLine":10,"endColumn":36},{"ruleId":"360","severity":1,"message":"403","line":10,"column":38,"nodeType":"362","messageId":"363","endLine":10,"endColumn":49},{"ruleId":"360","severity":1,"message":"404","line":13,"column":27,"nodeType":"362","messageId":"363","endLine":13,"endColumn":37},{"ruleId":"360","severity":1,"message":"390","line":1,"column":17,"nodeType":"362","messageId":"363","endLine":1,"endColumn":27},{"ruleId":"360","severity":1,"message":"405","line":2,"column":5,"nodeType":"362","messageId":"363","endLine":2,"endColumn":9},{"ruleId":"360","severity":1,"message":"406","line":3,"column":5,"nodeType":"362","messageId":"363","endLine":3,"endColumn":15},{"ruleId":"360","severity":1,"message":"407","line":5,"column":5,"nodeType":"362","messageId":"363","endLine":5,"endColumn":15},{"ruleId":"360","severity":1,"message":"408","line":8,"column":8,"nodeType":"362","messageId":"363","endLine":8,"endColumn":20},{"ruleId":"360","severity":1,"message":"409","line":11,"column":8,"nodeType":"362","messageId":"363","endLine":11,"endColumn":16},{"ruleId":"360","severity":1,"message":"392","line":3,"column":10,"nodeType":"362","messageId":"363","endLine":3,"endColumn":21},{"ruleId":"360","severity":1,"message":"391","line":5,"column":8,"nodeType":"362","messageId":"363","endLine":5,"endColumn":15},{"ruleId":"360","severity":1,"message":"410","line":8,"column":22,"nodeType":"362","messageId":"363","endLine":8,"endColumn":32},{"ruleId":"360","severity":1,"message":"392","line":3,"column":10,"nodeType":"362","messageId":"363","endLine":3,"endColumn":21},{"ruleId":"360","severity":1,"message":"391","line":5,"column":8,"nodeType":"362","messageId":"363","endLine":5,"endColumn":15},{"ruleId":"360","severity":1,"message":"410","line":8,"column":22,"nodeType":"362","messageId":"363","endLine":8,"endColumn":32},{"ruleId":"360","severity":1,"message":"411","line":2,"column":8,"nodeType":"362","messageId":"363","endLine":2,"endColumn":14},{"ruleId":"360","severity":1,"message":"398","line":3,"column":8,"nodeType":"362","messageId":"363","endLine":3,"endColumn":14},{"ruleId":"360","severity":1,"message":"412","line":4,"column":8,"nodeType":"362","messageId":"363","endLine":4,"endColumn":16},{"ruleId":"356","replacedBy":"413"},{"ruleId":"358","replacedBy":"414"},{"ruleId":"360","severity":1,"message":"378","line":2,"column":28,"nodeType":"362","messageId":"363","endLine":2,"endColumn":36},{"ruleId":"360","severity":1,"message":"396","line":5,"column":8,"nodeType":"362","messageId":"363","endLine":5,"endColumn":23},{"ruleId":"360","severity":1,"message":"415","line":6,"column":8,"nodeType":"362","messageId":"363","endLine":6,"endColumn":14},{"ruleId":"360","severity":1,"message":"416","line":9,"column":10,"nodeType":"362","messageId":"363","endLine":9,"endColumn":18},{"ruleId":"360","severity":1,"message":"417","line":10,"column":39,"nodeType":"362","messageId":"363","endLine":10,"endColumn":56},{"ruleId":"360","severity":1,"message":"418","line":10,"column":153,"nodeType":"362","messageId":"363","endLine":10,"endColumn":174},{"ruleId":"360","severity":1,"message":"365","line":12,"column":10,"nodeType":"362","messageId":"363","endLine":12,"endColumn":27},{"ruleId":"366","severity":1,"message":"419","line":38,"column":8,"nodeType":"368","endLine":38,"endColumn":38,"suggestions":"420"},{"ruleId":"366","severity":1,"message":"374","line":48,"column":8,"nodeType":"368","endLine":48,"endColumn":27,"suggestions":"421"},{"ruleId":"366","severity":1,"message":"367","line":53,"column":8,"nodeType":"368","endLine":53,"endColumn":24,"suggestions":"422"},{"ruleId":"366","severity":1,"message":"367","line":60,"column":8,"nodeType":"368","endLine":60,"endColumn":10,"suggestions":"423"},{"ruleId":"366","severity":1,"message":"367","line":78,"column":8,"nodeType":"368","endLine":78,"endColumn":29,"suggestions":"424"},{"ruleId":"360","severity":1,"message":"390","line":1,"column":22,"nodeType":"362","messageId":"363","endLine":1,"endColumn":32},{"ruleId":"366","severity":1,"message":"367","line":21,"column":8,"nodeType":"368","endLine":21,"endColumn":10,"suggestions":"425"},{"ruleId":"360","severity":1,"message":"426","line":1,"column":10,"nodeType":"362","messageId":"363","endLine":1,"endColumn":16},{"ruleId":"360","severity":1,"message":"427","line":1,"column":35,"nodeType":"362","messageId":"363","endLine":1,"endColumn":47},{"ruleId":"360","severity":1,"message":"428","line":5,"column":8,"nodeType":"362","messageId":"363","endLine":5,"endColumn":18},{"ruleId":"366","severity":1,"message":"429","line":64,"column":8,"nodeType":"368","endLine":64,"endColumn":47,"suggestions":"430"},{"ruleId":"366","severity":1,"message":"431","line":69,"column":8,"nodeType":"368","endLine":69,"endColumn":19,"suggestions":"432"},"no-native-reassign",["433"],"no-negated-in-lhs",["434"],"no-unused-vars","'fetchAndPrependConversationById' is defined but never used.","Identifier","unusedVar","'selectSidebarConversationIds' is defined but never used.","'updateLastMessage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["435"],"React Hook useEffect has missing dependencies: 'cookies' and 'dispatch'. Either include them or remove the dependency array.",["436"],"'heightStyle' is assigned a value but never used.","'handleAppBarResize' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["437"],"'ListItemIcon' is defined but never used.","'ConversationLink' is defined but never used.","'useState' is defined but never used.","'Box' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'loggedUser._id'. Either include them or remove the dependency array.",["438"],["439"],"'removeCookie' is assigned a value but never used.","'makeStyles' is defined but never used.","'cookies' is assigned a value but never used.","'setCookie' is assigned a value but never used.",["433"],["434"],"'Grid' is defined but never used.","'Typography' is defined but never used.","'Message' is defined but never used.","'useDispatch' is defined but never used.","'conversationId' is defined but never used.","'fetchConversationByUserIdsOrCreateIfNotExist' is defined but never used.","'conversationMemberIds' is defined but never used.","'ConversationApi' is defined but never used.","'useHistory' is defined but never used.","'Helper' is defined but never used.","'classes' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'useLocation' is defined but never used.","'loginThunk' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'IconButton' is defined but never used.","'MoreVertIcon' is defined but never used.","'MyAvatar' is defined but never used.","'updateUser' is defined but never used.","'MyTime' is defined but never used.","'MySocket' is defined but never used.",["433"],["434"],"'Socket' is defined but never used.","'authUser' is defined but never used.","'conversationError' is defined but never used.","'fetchHomeConversation' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'loggedUserId', and 'receiver'. Either include them or remove the dependency array.",["440"],["441"],["442"],["443"],["444"],["445"],"'Avatar' is defined but never used.","'ListItemText' is defined but never used.","'FolderIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'mounted'. Either include it or remove the dependency array.",["446"],"React Hook useEffect has a missing dependency: 'onFriendIdSelected'. Either include it or remove the dependency array. If 'onFriendIdSelected' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["447"],"no-global-assign","no-unsafe-negation",{"desc":"448","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"458","fix":"459"},{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"464","fix":"465"},{"desc":"466","fix":"467"},{"desc":"464","fix":"468"},{"desc":"469","fix":"470"},{"desc":"471","fix":"472"},"Update the dependencies array to be: [user._id, convoId, dispatch]",{"range":"473","text":"474"},"Update the dependencies array to be: [cookies, dispatch]",{"range":"475","text":"476"},"Update the dependencies array to be: [history, params]",{"range":"477","text":"478"},"Update the dependencies array to be: [dispatch, loggedUser._id]",{"range":"479","text":"480"},"Update the dependencies array to be: [convoId, dispatch, ids]",{"range":"481","text":"482"},"Update the dependencies array to be: [receiver._id, newChatEnabled, receiver, dispatch, loggedUserId]",{"range":"483","text":"484"},"Update the dependencies array to be: [status, convo._id, history]",{"range":"485","text":"486"},"Update the dependencies array to be: [conversationId, dispatch]",{"range":"487","text":"488"},"Update the dependencies array to be: [dispatch]",{"range":"489","text":"490"},"Update the dependencies array to be: [messages, convo._id, dispatch]",{"range":"491","text":"492"},{"range":"493","text":"490"},"Update the dependencies array to be: [receiverName, receivers, loggedUserId, mounted]",{"range":"494","text":"495"},"Update the dependencies array to be: [onFriendIdSelected, receivers]",{"range":"496","text":"497"},[3675,3694],"[user._id, convoId, dispatch]",[3848,3850],"[cookies, dispatch]",[1411,1419],"[history, params]",[1366,1368],"[dispatch, loggedUser._id]",[1961,1975],"[convoId, dispatch, ids]",[1948,1978],"[receiver._id, newChatEnabled, receiver, dispatch, loggedUserId]",[2297,2316],"[status, convo._id, history]",[2461,2477],"[conversationId, dispatch]",[2593,2595],"[dispatch]",[3123,3144],"[messages, convo._id, dispatch]",[740,742],[2544,2583],"[receiverName, receivers, loggedUserId, mounted]",[2733,2744],"[onFriendIdSelected, receivers]"]