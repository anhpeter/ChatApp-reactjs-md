[{"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\index.js":"1","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\App.js":"2","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Slt.js":"3","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\styles\\MainStyles.js":"4","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Header.js":"5","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationList.js":"6","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatBox.js":"7","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SearchBar.js":"8","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatAction.js":"9","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ToolbarTitle.js":"10","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationItem.js":"11","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Message.js":"12","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SendingInput.js":"13","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Messages.js":"14","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignIn.js":"15","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\Chat.js":"16","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\store.js":"17","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\ChatSlice.js":"18","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\Notify.js":"19","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\NotifySlice.js":"20","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\auth\\authSlice.js":"21","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Message.js":"22","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\PrivateRoute.js":"23","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\CookieName.js":"24"},{"size":500,"mtime":1612753256252,"results":"25","hashOfConfig":"26"},{"size":1485,"mtime":1612840295585,"results":"27","hashOfConfig":"26"},{"size":70,"mtime":1612414967612,"results":"28","hashOfConfig":"26"},{"size":738,"mtime":1612683101755,"results":"29","hashOfConfig":"26"},{"size":1976,"mtime":1612773955634,"results":"30","hashOfConfig":"26"},{"size":1790,"mtime":1612757820265,"results":"31","hashOfConfig":"26"},{"size":352,"mtime":1612684452776,"results":"32","hashOfConfig":"26"},{"size":366,"mtime":1612757879402,"results":"33","hashOfConfig":"26"},{"size":351,"mtime":1612757781512,"results":"34","hashOfConfig":"26"},{"size":315,"mtime":1612449382900,"results":"35","hashOfConfig":"26"},{"size":842,"mtime":1612602481187,"results":"36","hashOfConfig":"26"},{"size":668,"mtime":1612683818543,"results":"37","hashOfConfig":"26"},{"size":564,"mtime":1612687301892,"results":"38","hashOfConfig":"26"},{"size":590,"mtime":1612684426487,"results":"39","hashOfConfig":"26"},{"size":4528,"mtime":1612773749751,"results":"40","hashOfConfig":"26"},{"size":1126,"mtime":1612757795812,"results":"41","hashOfConfig":"26"},{"size":355,"mtime":1612758465409,"results":"42","hashOfConfig":"26"},{"size":214,"mtime":1612757914605,"results":"43","hashOfConfig":"26"},{"size":1491,"mtime":1612757921548,"results":"44","hashOfConfig":"26"},{"size":1064,"mtime":1612757945695,"results":"45","hashOfConfig":"26"},{"size":886,"mtime":1612774243442,"results":"46","hashOfConfig":"26"},{"size":65,"mtime":1612769711741,"results":"47","hashOfConfig":"26"},{"size":775,"mtime":1612774075380,"results":"48","hashOfConfig":"26"},{"size":40,"mtime":1612840227225,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1lgxsql",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\index.js",[],["101","102"],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\App.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Slt.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\styles\\MainStyles.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Header.js",["103","104"],"import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport { Button, makeStyles } from '@material-ui/core'\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Slt from '../defines/Slt'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { isLogged } from '../features/auth/authSlice'\r\nimport { signOut } from '../features/auth/authSlice';\r\nimport { useCookies } from 'react-cookie'\r\n\r\nconst useStyles = makeStyles({\r\n    flexGrowStyle: {\r\n        flexGrow: 1,\r\n    }\r\n})\r\n\r\nexport default function Header(props) {\r\n    const [cookies, setCookie, removeCookie] = useCookies('loggedUser');\r\n    const dispatch = useDispatch();\r\n    const logged = useSelector(isLogged);\r\n    const classes = useStyles(props);\r\n    const history = useHistory();\r\n\r\n    const onSignout = () => {\r\n        removeCookie('loggedUser');\r\n        dispatch(signOut());\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" color=\"primary\" id={Slt.mainAppBar}>\r\n                <Toolbar>\r\n                    <IconButton aria-label=\"menu icon\" color=\"inherit\">\r\n                        <MenuIcon></MenuIcon>\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.flexGrowStyle}>\r\n                        Messenger\r\n                    </Typography>\r\n                    <Button startIcon={<PersonIcon></PersonIcon>} color=\"inherit\" onClick={() => {\r\n                        onSignout();\r\n                    }}>\r\n                        <Typography >{(logged) ? 'Sign out' : 'Sign in'}</Typography>\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationList.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatBox.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SearchBar.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ChatAction.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ToolbarTitle.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\ConversationItem.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Message.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SendingInput.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\Messages.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\SignIn.js",["105"],"import React, { useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setNotify } from '../features/notify/NotifySlice';\r\nimport { isLogged, signIn } from '../features/auth/authSlice';\r\nimport * as Message from '../defines/Message';\r\nimport { useCookies } from 'react-cookie';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1)\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2)\r\n    }\r\n}));\r\n\r\nexport default function SignIn() {\r\n    const dispatch = useDispatch();\r\n    const logged = useSelector(isLogged);\r\n    const [cookies, setCookie] = useCookies(['loggedUser']);\r\n    const [form, setForm] = useState({ email: '', password: '' });\r\n    const onInputChange = (e, field) => {\r\n        setForm({\r\n            ...form,\r\n            [field]: e.target.value\r\n\r\n        })\r\n    }\r\n    const checkInfo = () => {\r\n        let { email, password } = form;\r\n        if (email.match(/[a-zA-Z0-9]{4,}@gmail.com/)) {\r\n            if (password.trim().length >= 8) {\r\n                let user = { email, password };\r\n                dispatch(signIn({ user }))\r\n                setCookie('loggedUser', JSON.stringify(user));\r\n                history.push('/chat');\r\n            } else notifyInvalid(Message.invalid);\r\n\r\n        } else notifyInvalid('email invalid');\r\n    }\r\n    const notifyInvalid = (message, type = 'error') => {\r\n        dispatch(setNotify({ message, type, open: true }));\r\n    }\r\n\r\n\r\n    const history = useHistory();\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        (!logged) ? (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Sign in\r\n                </Typography>\r\n                    <form className={classes.form} noValidate onSubmit={(e) => { e.preventDefault() }}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label=\"Email Address\"\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            onChange={(e) => { onInputChange(e, 'email') }}\r\n                            autoFocus />\r\n\r\n                        <TextField\r\n                            onChange={(e) => { onInputChange(e, 'password') }}\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\" />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={checkInfo}\r\n                        >\r\n                            Sign In\r\n                    </Button>\r\n                    </form>\r\n                </div>\r\n            </Container>\r\n        ) : (\r\n                <Redirect to=\"/chat\"></Redirect>\r\n            )\r\n    );\r\n}\r\n","E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\Chat.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\store.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\chat\\ChatSlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\Notify.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\notify\\NotifySlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\features\\auth\\authSlice.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\Message.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\components\\PrivateRoute.js",[],"E:\\Code\\Web\\React\\ChatApp\\chat_app\\src\\defines\\CookieName.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":24,"column":12,"nodeType":"112","messageId":"113","endLine":24,"endColumn":19},{"ruleId":"110","severity":1,"message":"114","line":24,"column":21,"nodeType":"112","messageId":"113","endLine":24,"endColumn":30},{"ruleId":"110","severity":1,"message":"111","line":41,"column":12,"nodeType":"112","messageId":"113","endLine":41,"endColumn":19},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'cookies' is assigned a value but never used.","Identifier","unusedVar","'setCookie' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]